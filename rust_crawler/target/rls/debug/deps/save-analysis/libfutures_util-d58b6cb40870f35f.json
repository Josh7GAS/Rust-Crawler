{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7","program":"/home/josh7gas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=d58b6cb40870f35f","-C","extra-filename=-d58b6cb40870f35f","--out-dir","/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps","-L","dependency=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps","--extern","futures_core=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libfutures_core-0a96d7cf85a3c2c3.rmeta","--extern","futures_io=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libfutures_io-bd7d35e45083a5c4.rmeta","--extern","futures_task=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libfutures_task-1217ee16b53f8363.rmeta","--extern","memchr=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libmemchr-b6da394695ec2edf.rmeta","--extern","pin_project=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libpin_project-46c1565e297b0eec.rmeta","--extern","pin_utils=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libpin_utils-aa8e27757ec3cf33.rmeta","--extern","slab=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libslab-560a8b8f37310699.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/josh7gas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libfutures_util-d58b6cb40870f35f.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[9684869510058967998,17544714529438801357]},"crate_root":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src","external_crates":[{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":18,"id":{"name":"futures_core","disambiguator":[17846188185908526815,16527903141768937787]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","num":19,"id":{"name":"pin_utils","disambiguator":[16305234420248669003,11139691240371298179]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","num":20,"id":{"name":"futures_task","disambiguator":[2342222800743388477,16224786626350827610]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","num":21,"id":{"name":"once_cell","disambiguator":[8491962448962006938,9304847164986642406]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","num":22,"id":{"name":"pin_project","disambiguator":[6140916935824243026,4730000263734689637]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_internal","disambiguator":[7600462844724909781,18254996439070459179]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","num":24,"id":{"name":"slab","disambiguator":[10037718275070548263,9525692549315446920]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","num":25,"id":{"name":"futures_io","disambiguator":[1478589373394443050,9788832819147880677]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","num":26,"id":{"name":"memchr","disambiguator":[414713410056883325,7901337422415418704]}}],"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":131},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":1863,"byte_end":1868,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":7},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":1889,"byte_end":1896,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":11},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12860,"byte_end":12869,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":14},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12871,"byte_end":12885,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":17},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12919,"byte_end":12930,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":2,"index":8493},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12932,"byte_end":12938,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":18,"index":32},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12940,"byte_end":12949,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":20,"index":111},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12975,"byte_end":12984,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":20,"index":77},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12986,"byte_end":13000,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":20,"index":132},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13002,"byte_end":13017,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4478},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":18609,"byte_end":18620,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19136,"byte_end":19142,"line_start":117,"line_end":117,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":3917},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13132,"byte_end":13139,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":3810},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13141,"byte_end":13145,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13147,"byte_end":13156,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4304},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13158,"byte_end":13165,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4095},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13167,"byte_end":13177,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4027},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13179,"byte_end":13182,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4372},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13184,"byte_end":13194,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4221},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13196,"byte_end":13200,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4426},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13202,"byte_end":13211,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4151},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13213,"byte_end":13220,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":3971},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13316,"byte_end":13329,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4478},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13378,"byte_end":13389,"line_start":23,"line_end":23,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13588,"byte_end":13594,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4881},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13645,"byte_end":13652,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5048},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13654,"byte_end":13661,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5117},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13663,"byte_end":13669,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5255},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13671,"byte_end":13681,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5186},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13683,"byte_end":13692,"line_start":35,"line_end":35,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4523},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13694,"byte_end":13704,"line_start":35,"line_end":35,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5393},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13706,"byte_end":13712,"line_start":35,"line_end":35,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5324},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13714,"byte_end":13719,"line_start":35,"line_end":35,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4965},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13721,"byte_end":13727,"line_start":35,"line_end":35,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4824},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13729,"byte_end":13745,"line_start":35,"line_end":35,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13751,"byte_end":13763,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5546},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13765,"byte_end":13777,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5463},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13779,"byte_end":13790,"line_start":36,"line_end":36,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":4687},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13792,"byte_end":13802,"line_start":36,"line_end":36,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13974,"byte_end":13978,"line_start":46,"line_end":46,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5612},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":13980,"byte_end":13984,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14025,"byte_end":14032,"line_start":49,"line_end":49,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5618},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14034,"byte_end":14041,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14088,"byte_end":14098,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5624},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14100,"byte_end":14109,"line_start":52,"line_end":52,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":524},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14164,"byte_end":14178,"line_start":55,"line_end":55,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5683},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14180,"byte_end":14192,"line_start":55,"line_end":55,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5742},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14230,"byte_end":14242,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":572},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14282,"byte_end":14289,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":567},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14291,"byte_end":14297,"line_start":61,"line_end":61,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":611},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14334,"byte_end":14337,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14339,"byte_end":14341,"line_start":64,"line_end":64,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":606},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14343,"byte_end":14348,"line_start":64,"line_end":64,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5790},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14350,"byte_end":14355,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":634},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14390,"byte_end":14394,"line_start":67,"line_end":67,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14396,"byte_end":14401,"line_start":67,"line_end":67,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14403,"byte_end":14408,"line_start":67,"line_end":67,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14410,"byte_end":14415,"line_start":67,"line_end":67,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5892},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14417,"byte_end":14421,"line_start":67,"line_end":67,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":5945},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14423,"byte_end":14428,"line_start":67,"line_end":67,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6012},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14430,"byte_end":14435,"line_start":67,"line_end":67,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6093},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14437,"byte_end":14442,"line_start":67,"line_end":67,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":683},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14537,"byte_end":14545,"line_start":72,"line_end":72,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14547,"byte_end":14554,"line_start":72,"line_end":72,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":711},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14593,"byte_end":14599,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6188},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14601,"byte_end":14607,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14706,"byte_end":14716,"line_start":80,"line_end":80,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6196},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14718,"byte_end":14727,"line_start":80,"line_end":80,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":766},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14775,"byte_end":14783,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":769},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14785,"byte_end":14794,"line_start":84,"line_end":84,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14796,"byte_end":14805,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14807,"byte_end":14816,"line_start":84,"line_end":84,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6272},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14818,"byte_end":14825,"line_start":84,"line_end":84,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6325},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14827,"byte_end":14835,"line_start":84,"line_end":84,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14837,"byte_end":14845,"line_start":84,"line_end":84,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6473},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14847,"byte_end":14855,"line_start":84,"line_end":84,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":826},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14960,"byte_end":14972,"line_start":90,"line_end":90,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":820},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":14974,"byte_end":14984,"line_start":90,"line_end":90,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":854},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15031,"byte_end":15041,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15043,"byte_end":15052,"line_start":93,"line_end":93,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":879},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15149,"byte_end":15158,"line_start":98,"line_end":98,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6576},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15160,"byte_end":15168,"line_start":98,"line_end":98,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6582},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15206,"byte_end":15212,"line_start":101,"line_end":101,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6658},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15349,"byte_end":15358,"line_start":107,"line_end":107,"column_start":31,"column_end":40},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":11738},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15360,"byte_end":15369,"line_start":107,"line_end":107,"column_start":42,"column_end":51},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6679},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15371,"byte_end":15382,"line_start":107,"line_end":107,"column_start":53,"column_end":64},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6675},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15384,"byte_end":15401,"line_start":107,"line_end":107,"column_start":66,"column_end":83},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6690},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15403,"byte_end":15410,"line_start":107,"line_end":107,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6691},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":15403,"byte_end":15410,"line_start":107,"line_end":107,"column_start":85,"column_end":92},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":6674}},{"kind":"Use","ref_id":{"krate":0,"index":245},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11873,"byte_end":11882,"line_start":311,"line_end":311,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11884,"byte_end":11896,"line_start":311,"line_end":311,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":62},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136352,"byte_end":136361,"line_start":8,"line_end":8,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":18,"index":65},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136363,"byte_end":136377,"line_start":8,"line_end":8,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":18,"index":82},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136411,"byte_end":136422,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":18,"index":68},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136424,"byte_end":136430,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":18,"index":97},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136432,"byte_end":136441,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8161},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":143731,"byte_end":143737,"line_start":149,"line_end":149,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":987}},{"kind":"Use","ref_id":{"krate":0,"index":8213},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":143914,"byte_end":143925,"line_start":155,"line_end":155,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":987}},{"kind":"Use","ref_id":{"krate":0,"index":8446},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145266,"byte_end":145277,"line_start":195,"line_end":195,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":987}},{"kind":"Use","ref_id":{"krate":0,"index":6703},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136557,"byte_end":136562,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":6760},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136564,"byte_end":136571,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":6816},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136573,"byte_end":136579,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":6861},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136581,"byte_end":136590,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":6910},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136592,"byte_end":136598,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":6983},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136600,"byte_end":136609,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7512},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136611,"byte_end":136618,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7116},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136620,"byte_end":136627,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7175},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136629,"byte_end":136633,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7254},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136635,"byte_end":136642,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7320},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136644,"byte_end":136648,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7378},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136654,"byte_end":136661,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7452},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136663,"byte_end":136666,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7601},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136668,"byte_end":136672,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7666},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136674,"byte_end":136678,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7617},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136680,"byte_end":136688,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8265},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136690,"byte_end":136694,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7609},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136696,"byte_end":136710,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7715},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136712,"byte_end":136716,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7764},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136718,"byte_end":136727,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":1781},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136729,"byte_end":136738,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7369},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136744,"byte_end":136756,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7840},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136758,"byte_end":136762,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7889},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136764,"byte_end":136773,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":7965},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136775,"byte_end":136784,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8028},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136786,"byte_end":136790,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8098},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136792,"byte_end":136795,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8446},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136847,"byte_end":136858,"line_start":22,"line_end":22,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8161},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136909,"byte_end":136915,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8213},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136966,"byte_end":136977,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":11693},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137213,"byte_end":137228,"line_start":36,"line_end":36,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":11648},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137230,"byte_end":137238,"line_start":36,"line_end":36,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":11580},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137240,"byte_end":137257,"line_start":36,"line_end":36,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9799},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":258975,"byte_end":258988,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":1890}},{"kind":"Use","ref_id":{"krate":0,"index":2244},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137550,"byte_end":137560,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8495},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137562,"byte_end":137569,"line_start":46,"line_end":46,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137571,"byte_end":137578,"line_start":46,"line_end":46,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8722},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137580,"byte_end":137590,"line_start":46,"line_end":46,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8645},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137592,"byte_end":137601,"line_start":46,"line_end":46,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8796},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137603,"byte_end":137613,"line_start":46,"line_end":46,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8922},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137615,"byte_end":137621,"line_start":46,"line_end":46,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8845},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137623,"byte_end":137628,"line_start":46,"line_end":46,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":8996},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137630,"byte_end":137636,"line_start":46,"line_end":46,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137642,"byte_end":137652,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9389},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137654,"byte_end":137663,"line_start":47,"line_end":47,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9140},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137665,"byte_end":137674,"line_start":47,"line_end":47,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9213},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137676,"byte_end":137688,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9283},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137690,"byte_end":137700,"line_start":47,"line_end":47,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9434},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137702,"byte_end":137709,"line_start":47,"line_end":47,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9074},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137711,"byte_end":137721,"line_start":47,"line_end":47,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9066},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137723,"byte_end":137730,"line_start":47,"line_end":47,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9578},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137736,"byte_end":137748,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2371},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137750,"byte_end":137762,"line_start":48,"line_end":48,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9654},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137764,"byte_end":137776,"line_start":48,"line_end":48,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9513},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137778,"byte_end":137787,"line_start":48,"line_end":48,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9799},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":137912,"byte_end":137925,"line_start":54,"line_end":54,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":11532},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138060,"byte_end":138078,"line_start":58,"line_end":58,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":11464},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138080,"byte_end":138100,"line_start":58,"line_end":58,"column_start":48,"column_end":68},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2457},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138157,"byte_end":138161,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9818},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138163,"byte_end":138167,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2475},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138206,"byte_end":138212,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9824},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138214,"byte_end":138220,"line_start":66,"line_end":66,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2499},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138257,"byte_end":138262,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9830},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138264,"byte_end":138269,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2524},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138304,"byte_end":138308,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9836},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138310,"byte_end":138314,"line_start":72,"line_end":72,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2549},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138355,"byte_end":138362,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9878},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138364,"byte_end":138371,"line_start":75,"line_end":75,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2579},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138412,"byte_end":138419,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2571},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138421,"byte_end":138427,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138466,"byte_end":138472,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9884},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138474,"byte_end":138480,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":2638},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138519,"byte_end":138525,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":9944},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138527,"byte_end":138533,"line_start":84,"line_end":84,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":10046},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138682,"byte_end":138696,"line_start":90,"line_end":90,"column_start":36,"column_end":50},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":10396},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8704016,"byte_end":8704020,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10084}},{"kind":"Use","ref_id":{"krate":0,"index":10397},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8704016,"byte_end":8704020,"line_start":25,"line_end":25,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":10165}},{"kind":"Use","ref_id":{"krate":0,"index":10376},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8704022,"byte_end":8704029,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10084}},{"kind":"Use","ref_id":{"krate":0,"index":10377},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8704022,"byte_end":8704029,"line_start":25,"line_end":25,"column_start":28,"column_end":35},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":10166}},{"kind":"Use","ref_id":{"krate":0,"index":10366},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8704031,"byte_end":8704041,"line_start":25,"line_end":25,"column_start":37,"column_end":47},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":10084}},{"kind":"Use","ref_id":{"krate":0,"index":10385},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8704043,"byte_end":8704053,"line_start":25,"line_end":25,"column_start":49,"column_end":59},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":10084}},{"kind":"Use","ref_id":{"krate":0,"index":10250},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138846,"byte_end":138862,"line_start":96,"line_end":96,"column_start":38,"column_end":54},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":10353},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138976,"byte_end":138986,"line_start":101,"line_end":101,"column_start":32,"column_end":42},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":10331},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138988,"byte_end":138997,"line_start":101,"line_end":101,"column_start":44,"column_end":53},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":979}},{"kind":"Use","ref_id":{"krate":0,"index":1781},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11955,"byte_end":11964,"line_start":314,"line_end":314,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2371},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11966,"byte_end":11978,"line_start":314,"line_end":314,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":260},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342440,"byte_end":342447,"line_start":5,"line_end":5,"column_start":27,"column_end":34},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":274},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342506,"byte_end":342511,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":305},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342571,"byte_end":342580,"line_start":11,"line_end":11,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":310},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342582,"byte_end":342590,"line_start":11,"line_end":11,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":18,"index":142},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342638,"byte_end":342649,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":0,"index":2685},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342687,"byte_end":342695,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":0,"index":2688},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342697,"byte_end":342710,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":2,"index":8659},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342743,"byte_end":342750,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":2,"index":32838},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342752,"byte_end":342756,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":2,"index":8669},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342758,"byte_end":342763,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":2,"index":32878},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342765,"byte_end":342773,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":2,"index":32887},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342775,"byte_end":342789,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":10},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342821,"byte_end":342826,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":13},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342828,"byte_end":342838,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":16},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342840,"byte_end":342850,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":111},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342856,"byte_end":342865,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":77},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342867,"byte_end":342881,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":132},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342883,"byte_end":342898,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":237},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342926,"byte_end":342936,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":20,"index":238},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342984,"byte_end":342998,"line_start":28,"line_end":28,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":2670}},{"kind":"Use","ref_id":{"krate":25,"index":17},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350189,"byte_end":350198,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":25,"index":20},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350200,"byte_end":350210,"line_start":18,"line_end":18,"column_start":16,"column_end":26},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":25,"index":25},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350212,"byte_end":350221,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":25,"index":27},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350223,"byte_end":350235,"line_start":18,"line_end":18,"column_start":39,"column_end":51},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":1,"index":2591},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350237,"byte_end":350242,"line_start":18,"line_end":18,"column_start":53,"column_end":58},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":1,"index":6933},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350244,"byte_end":350253,"line_start":18,"line_end":18,"column_start":60,"column_end":69},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":1,"index":6996},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350259,"byte_end":350266,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":1,"index":3008},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350268,"byte_end":350278,"line_start":19,"line_end":19,"column_start":14,"column_end":24},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":1,"index":2589},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350280,"byte_end":350286,"line_start":19,"line_end":19,"column_start":26,"column_end":32},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":1,"index":7010},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":350288,"byte_end":350296,"line_start":19,"line_end":19,"column_start":34,"column_end":42},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10411},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351026,"byte_end":351036,"line_start":44,"line_end":44,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10448},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351081,"byte_end":351090,"line_start":47,"line_end":47,"column_start":27,"column_end":36},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10504},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351135,"byte_end":351144,"line_start":50,"line_end":50,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10557},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351179,"byte_end":351184,"line_start":53,"line_end":53,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10613},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351219,"byte_end":351224,"line_start":56,"line_end":56,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":2949},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351258,"byte_end":351262,"line_start":59,"line_end":59,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10621},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351264,"byte_end":351268,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":2971},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351311,"byte_end":351319,"line_start":62,"line_end":62,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10686},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351321,"byte_end":351328,"line_start":62,"line_end":62,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10757},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351366,"byte_end":351372,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3033},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351408,"byte_end":351413,"line_start":68,"line_end":68,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3031},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351415,"byte_end":351420,"line_start":68,"line_end":68,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10785},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351462,"byte_end":351469,"line_start":71,"line_end":71,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10793},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351504,"byte_end":351509,"line_start":74,"line_end":74,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10801},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351741,"byte_end":351746,"line_start":84,"line_end":84,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10852},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351779,"byte_end":351783,"line_start":87,"line_end":87,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10861},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351834,"byte_end":351846,"line_start":90,"line_end":90,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10870},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351891,"byte_end":351900,"line_start":93,"line_end":93,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10879},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351943,"byte_end":351951,"line_start":96,"line_end":96,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10890},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":351998,"byte_end":352007,"line_start":99,"line_end":99,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10900},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352060,"byte_end":352072,"line_start":102,"line_end":102,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10911},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352117,"byte_end":352126,"line_start":105,"line_end":105,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3276},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352164,"byte_end":352170,"line_start":108,"line_end":108,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352172,"byte_end":352178,"line_start":108,"line_end":108,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10922},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352212,"byte_end":352216,"line_start":111,"line_end":111,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3318},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352250,"byte_end":352254,"line_start":114,"line_end":114,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3316},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352256,"byte_end":352260,"line_start":114,"line_end":114,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10931},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352297,"byte_end":352305,"line_start":117,"line_end":117,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10937},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352307,"byte_end":352316,"line_start":117,"line_end":117,"column_start":33,"column_end":42},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3373},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352318,"byte_end":352330,"line_start":117,"line_end":117,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3374},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352318,"byte_end":352330,"line_start":117,"line_end":117,"column_start":44,"column_end":56},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3389}},{"kind":"Use","ref_id":{"krate":0,"index":10943},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352364,"byte_end":352368,"line_start":120,"line_end":120,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10992},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352405,"byte_end":352411,"line_start":123,"line_end":123,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":10999},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352446,"byte_end":352451,"line_start":126,"line_end":126,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":11008},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352504,"byte_end":352517,"line_start":129,"line_end":129,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":11017},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352560,"byte_end":352568,"line_start":132,"line_end":132,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":2711}},{"kind":"Use","ref_id":{"krate":0,"index":3497},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12452,"byte_end":12464,"line_start":336,"line_end":336,"column_start":36,"column_end":48},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3514},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12466,"byte_end":12479,"line_start":336,"line_end":336,"column_start":50,"column_end":63},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3525},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12481,"byte_end":12493,"line_start":336,"line_end":336,"column_start":65,"column_end":77},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12495,"byte_end":12510,"line_start":336,"line_end":336,"column_start":79,"column_end":94},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11285},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754380,"byte_end":8754396,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":11183}},{"kind":"Use","ref_id":{"krate":0,"index":11206},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754398,"byte_end":8754403,"line_start":9,"line_end":9,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":11183}},{"kind":"Use","ref_id":{"krate":0,"index":11243},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754405,"byte_end":8754420,"line_start":9,"line_end":9,"column_start":48,"column_end":63},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":11183}},{"kind":"Use","ref_id":{"krate":0,"index":11262},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754422,"byte_end":8754432,"line_start":9,"line_end":9,"column_start":65,"column_end":75},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":11183}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":12599,"line_start":1,"line_end":344,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":15},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2709},{"krate":0,"index":2711},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":11183}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":650,"byte_end":671,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":876,"byte_end":953,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":972},{"krate":0,"index":6640},{"krate":0,"index":6669},{"krate":0,"index":6670},{"krate":0,"index":6671},{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":12470},{"krate":0,"index":973}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"/ Futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12601,"byte_end":12612,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12613,"byte_end":12616,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Future`s,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12617,"byte_end":12691,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12692,"byte_end":12770,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Future` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/mod.rs","byte_start":12771,"byte_end":12801,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3755},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35799,"byte_end":35804,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":3752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3757},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35823,"byte_end":35829,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":3752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3759},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35848,"byte_end":35853,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":3752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3752},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35773,"byte_end":35780,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3755},{"krate":0,"index":3757},{"krate":0,"index":3759}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = FlattenProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35709,"byte_end":35746,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35773,"byte_end":35780,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3785},{"krate":0,"index":3786},{"krate":0,"index":3787}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35709,"byte_end":35746,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3810},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40212,"byte_end":40216,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40133,"byte_end":40200,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40101,"byte_end":40115,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3833},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40212,"byte_end":40216,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40101,"byte_end":40115,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41998,"byte_end":42008,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40376,"byte_end":40444,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40449,"byte_end":40452,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40457,"byte_end":40525,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40530,"byte_end":40575,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40580,"byte_end":40583,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40588,"byte_end":40602,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40607,"byte_end":40610,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40615,"byte_end":40622,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40627,"byte_end":40668,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40673,"byte_end":40704,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40709,"byte_end":40765,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40770,"byte_end":40794,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40799,"byte_end":40834,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40839,"byte_end":40864,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40869,"byte_end":40872,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40877,"byte_end":40926,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40931,"byte_end":40934,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40939,"byte_end":40981,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40986,"byte_end":41025,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41030,"byte_end":41069,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41074,"byte_end":41091,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41096,"byte_end":41099,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41104,"byte_end":41174,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41179,"byte_end":41218,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41223,"byte_end":41264,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41269,"byte_end":41295,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41300,"byte_end":41303,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41308,"byte_end":41318,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41323,"byte_end":41340,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41345,"byte_end":41379,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41384,"byte_end":41431,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41436,"byte_end":41485,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41490,"byte_end":41552,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41557,"byte_end":41581,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41586,"byte_end":41629,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41634,"byte_end":41691,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41696,"byte_end":41771,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41776,"byte_end":41806,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41811,"byte_end":41828,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41833,"byte_end":41847,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41852,"byte_end":41936,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41941,"byte_end":41950,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41955,"byte_end":41960,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41965,"byte_end":41974,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":41979,"byte_end":41986,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":3858},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42984,"byte_end":42994,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":3855},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3860},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43058,"byte_end":43066,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":3855},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3855},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42966,"byte_end":42969,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        #[pin]\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":3858},{"krate":0,"index":3860}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42889,"byte_end":42956,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private(project = MapProj, project_replace = MapProjOwn))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42808,"byte_end":42871,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3887},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42966,"byte_end":42969,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":3891},{"krate":0,"index":3892}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":42808,"byte_end":42871,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":3917},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":3919}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3937},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":3940},{"krate":0,"index":3941}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3971},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":3973}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3991},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":3994},{"krate":0,"index":3995}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4027},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":4030}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4052},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":4056},{"krate":0,"index":4057}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4095},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":4097}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4115},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":4118},{"krate":0,"index":4119}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4151},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":4154}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4176},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":4180},{"krate":0,"index":4181}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4221},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":4225}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4251},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":4256},{"krate":0,"index":4257}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4304},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":4307}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4329},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4334}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4372},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":4374}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":4395},{"krate":0,"index":4396}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4426},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":4428}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4446},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":4449},{"krate":0,"index":4450}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4478},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44609,"byte_end":44620,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44530,"byte_end":44597,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44498,"byte_end":44512,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4501},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44609,"byte_end":44620,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::future::future::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":4504},{"krate":0,"index":4505}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44498,"byte_end":44512,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":173},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":45590,"byte_end":45596,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":45447,"byte_end":45510,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":45511,"byte_end":45578,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":47708,"byte_end":47712,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"pub fn peek(&Self) -> Option<&Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":47439,"byte_end":47513,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":47518,"byte_end":47591,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":47596,"byte_end":47664,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":47669,"byte_end":47696,"line_start":99,"line_end":99,"column_start":5,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19296,"byte_end":19305,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19197,"byte_end":19271,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19272,"byte_end":19285,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20137,"byte_end":20140,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19320,"byte_end":19395,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19400,"byte_end":19423,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19428,"byte_end":19431,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19436,"byte_end":19510,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19515,"byte_end":19586,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19591,"byte_end":19653,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19658,"byte_end":19661,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19666,"byte_end":19737,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19742,"byte_end":19813,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19818,"byte_end":19839,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19844,"byte_end":19847,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19852,"byte_end":19866,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19871,"byte_end":19874,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19879,"byte_end":19886,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19891,"byte_end":19932,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19937,"byte_end":19972,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19977,"byte_end":19980,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19985,"byte_end":20014,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20019,"byte_end":20062,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20067,"byte_end":20103,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20108,"byte_end":20117,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20122,"byte_end":20129,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20537,"byte_end":20545,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20310,"byte_end":20385,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20390,"byte_end":20413,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20418,"byte_end":20421,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20426,"byte_end":20504,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20509,"byte_end":20529,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21557,"byte_end":21561,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20704,"byte_end":20780,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20785,"byte_end":20828,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20833,"byte_end":20836,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20841,"byte_end":20912,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20917,"byte_end":20991,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":20996,"byte_end":21012,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21017,"byte_end":21020,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21025,"byte_end":21100,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21105,"byte_end":21116,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21121,"byte_end":21124,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21129,"byte_end":21200,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21205,"byte_end":21231,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21236,"byte_end":21239,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21244,"byte_end":21258,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21263,"byte_end":21266,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21271,"byte_end":21278,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21283,"byte_end":21324,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21329,"byte_end":21364,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21369,"byte_end":21372,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21377,"byte_end":21411,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21416,"byte_end":21481,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21486,"byte_end":21523,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21528,"byte_end":21537,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21542,"byte_end":21549,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22431,"byte_end":22442,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21773,"byte_end":21848,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21853,"byte_end":21874,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21879,"byte_end":21882,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21887,"byte_end":21967,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":21972,"byte_end":22044,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22049,"byte_end":22052,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22057,"byte_end":22071,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22076,"byte_end":22079,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22084,"byte_end":22091,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22096,"byte_end":22137,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22142,"byte_end":22177,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22182,"byte_end":22185,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22190,"byte_end":22204,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22209,"byte_end":22237,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22242,"byte_end":22278,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22283,"byte_end":22295,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22300,"byte_end":22338,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22343,"byte_end":22349,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22354,"byte_end":22357,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22362,"byte_end":22397,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22402,"byte_end":22411,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22416,"byte_end":22423,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23281,"byte_end":23293,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22622,"byte_end":22698,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22703,"byte_end":22724,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22729,"byte_end":22732,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22737,"byte_end":22816,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22821,"byte_end":22893,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22898,"byte_end":22901,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22906,"byte_end":22920,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22925,"byte_end":22928,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22933,"byte_end":22940,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22945,"byte_end":22986,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":22991,"byte_end":23026,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23031,"byte_end":23034,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23039,"byte_end":23053,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23058,"byte_end":23086,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23091,"byte_end":23127,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23132,"byte_end":23144,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23149,"byte_end":23187,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23192,"byte_end":23198,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23203,"byte_end":23206,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23211,"byte_end":23247,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23252,"byte_end":23261,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23266,"byte_end":23273,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24072,"byte_end":24083,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23474,"byte_end":23527,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23532,"byte_end":23535,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23540,"byte_end":23614,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23619,"byte_end":23682,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23687,"byte_end":23690,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23695,"byte_end":23709,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23714,"byte_end":23717,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23722,"byte_end":23729,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23734,"byte_end":23775,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23780,"byte_end":23815,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23820,"byte_end":23855,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23860,"byte_end":23863,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23868,"byte_end":23898,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23903,"byte_end":23941,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":23946,"byte_end":23997,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24002,"byte_end":24038,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24043,"byte_end":24052,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24057,"byte_end":24064,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24948,"byte_end":24955,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24222,"byte_end":24286,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24291,"byte_end":24327,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24332,"byte_end":24335,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24340,"byte_end":24409,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24414,"byte_end":24451,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24456,"byte_end":24459,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24464,"byte_end":24524,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24529,"byte_end":24532,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24537,"byte_end":24608,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24613,"byte_end":24639,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24644,"byte_end":24647,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24652,"byte_end":24666,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24671,"byte_end":24674,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24679,"byte_end":24686,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24691,"byte_end":24732,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24737,"byte_end":24772,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24777,"byte_end":24780,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24785,"byte_end":24831,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24836,"byte_end":24877,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24882,"byte_end":24914,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24919,"byte_end":24928,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":24933,"byte_end":24940,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26060,"byte_end":26074,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25169,"byte_end":25244,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25249,"byte_end":25272,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25277,"byte_end":25280,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25285,"byte_end":25357,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25362,"byte_end":25435,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25440,"byte_end":25454,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25459,"byte_end":25462,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25467,"byte_end":25537,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25542,"byte_end":25560,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25565,"byte_end":25568,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25573,"byte_end":25587,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25592,"byte_end":25595,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25600,"byte_end":25607,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25612,"byte_end":25653,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25658,"byte_end":25693,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25698,"byte_end":25741,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25746,"byte_end":25749,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25754,"byte_end":25794,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25799,"byte_end":25865,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25870,"byte_end":25873,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25878,"byte_end":25931,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25936,"byte_end":25982,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":25987,"byte_end":26026,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26031,"byte_end":26040,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26045,"byte_end":26052,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27162,"byte_end":27166,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26267,"byte_end":26340,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26345,"byte_end":26411,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26416,"byte_end":26434,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26439,"byte_end":26442,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26447,"byte_end":26514,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26519,"byte_end":26584,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26589,"byte_end":26661,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26666,"byte_end":26740,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26745,"byte_end":26771,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26776,"byte_end":26779,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26784,"byte_end":26855,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26860,"byte_end":26935,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26940,"byte_end":26994,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":26999,"byte_end":27002,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27007,"byte_end":27081,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27086,"byte_end":27154,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28006,"byte_end":28013,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27312,"byte_end":27378,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27383,"byte_end":27386,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27391,"byte_end":27466,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27471,"byte_end":27544,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27549,"byte_end":27618,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27623,"byte_end":27673,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27678,"byte_end":27681,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27686,"byte_end":27700,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27705,"byte_end":27708,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27713,"byte_end":27720,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27725,"byte_end":27766,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27771,"byte_end":27806,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27811,"byte_end":27814,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27819,"byte_end":27848,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27853,"byte_end":27931,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27936,"byte_end":27972,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27977,"byte_end":27986,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":27991,"byte_end":27998,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29551,"byte_end":29563,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28195,"byte_end":28249,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28254,"byte_end":28257,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28262,"byte_end":28337,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28342,"byte_end":28416,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28421,"byte_end":28495,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28500,"byte_end":28551,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28556,"byte_end":28559,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28564,"byte_end":28639,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28644,"byte_end":28714,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28719,"byte_end":28786,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28791,"byte_end":28866,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28871,"byte_end":28943,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28948,"byte_end":28951,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":28956,"byte_end":29020,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29025,"byte_end":29082,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29087,"byte_end":29090,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29095,"byte_end":29109,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29114,"byte_end":29117,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29122,"byte_end":29129,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29134,"byte_end":29175,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29180,"byte_end":29230,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29235,"byte_end":29238,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29243,"byte_end":29277,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29282,"byte_end":29331,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29336,"byte_end":29339,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29344,"byte_end":29393,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29398,"byte_end":29422,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29427,"byte_end":29434,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29439,"byte_end":29489,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29494,"byte_end":29503,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29508,"byte_end":29515,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29520,"byte_end":29543,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31315,"byte_end":31321,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"pub fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29793,"byte_end":29868,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29873,"byte_end":29896,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29901,"byte_end":29904,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29909,"byte_end":29983,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":29988,"byte_end":30061,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30066,"byte_end":30078,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30083,"byte_end":30086,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30091,"byte_end":30155,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30160,"byte_end":30217,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30222,"byte_end":30225,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30230,"byte_end":30244,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30249,"byte_end":30252,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30257,"byte_end":30264,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30269,"byte_end":30310,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30315,"byte_end":30350,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30355,"byte_end":30358,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30363,"byte_end":30392,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30397,"byte_end":30431,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30436,"byte_end":30470,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30475,"byte_end":30478,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30483,"byte_end":30516,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30521,"byte_end":30554,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30559,"byte_end":30568,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30573,"byte_end":30580,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30585,"byte_end":30588,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30593,"byte_end":30600,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30605,"byte_end":30674,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30679,"byte_end":30754,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30759,"byte_end":30790,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30795,"byte_end":30798,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30803,"byte_end":30844,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30849,"byte_end":30884,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30889,"byte_end":30925,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30930,"byte_end":30950,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30955,"byte_end":30958,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30963,"byte_end":30992,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":30997,"byte_end":31031,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31036,"byte_end":31070,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31075,"byte_end":31120,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31125,"byte_end":31166,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31171,"byte_end":31178,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31183,"byte_end":31216,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31221,"byte_end":31253,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31258,"byte_end":31267,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31272,"byte_end":31279,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":31284,"byte_end":31307,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32408,"byte_end":32413,"line_start":517,"line_end":517,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32179,"byte_end":32220,"line_start":512,"line_end":512,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32225,"byte_end":32228,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32233,"byte_end":32308,"line_start":514,"line_end":514,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32313,"byte_end":32370,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32375,"byte_end":32400,"line_start":516,"line_end":516,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32873,"byte_end":32884,"line_start":531,"line_end":531,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32572,"byte_end":32613,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32618,"byte_end":32621,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32626,"byte_end":32685,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32690,"byte_end":32693,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32698,"byte_end":32773,"line_start":528,"line_end":528,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32778,"byte_end":32835,"line_start":529,"line_end":529,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":32840,"byte_end":32865,"line_start":530,"line_end":530,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33174,"byte_end":33184,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33041,"byte_end":33090,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33095,"byte_end":33166,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33469,"byte_end":33480,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33333,"byte_end":33382,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33387,"byte_end":33461,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33711,"byte_end":33721,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33634,"byte_end":33703,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35117,"byte_end":35129,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33857,"byte_end":33929,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":33934,"byte_end":33997,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34002,"byte_end":34005,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34010,"byte_end":34076,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34081,"byte_end":34084,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34089,"byte_end":34162,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34167,"byte_end":34236,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34241,"byte_end":34311,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34316,"byte_end":34319,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34324,"byte_end":34338,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34343,"byte_end":34346,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34351,"byte_end":34358,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34363,"byte_end":34393,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34398,"byte_end":34448,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34453,"byte_end":34492,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34497,"byte_end":34548,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34553,"byte_end":34556,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34561,"byte_end":34621,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34626,"byte_end":34678,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34683,"byte_end":34690,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34695,"byte_end":34698,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34703,"byte_end":34772,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34777,"byte_end":34850,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34855,"byte_end":34887,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34892,"byte_end":34895,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34900,"byte_end":34907,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34912,"byte_end":34959,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":34964,"byte_end":35003,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35008,"byte_end":35011,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35016,"byte_end":35097,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":35102,"byte_end":35109,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4523},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76127,"byte_end":76137,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76048,"byte_end":76115,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76016,"byte_end":76030,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4546},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76127,"byte_end":76137,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":4549},{"krate":0,"index":4550}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76016,"byte_end":76030,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4571},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77045,"byte_end":77050,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4573},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77069,"byte_end":77075,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4575},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77094,"byte_end":77099,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":4568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77016,"byte_end":77026,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4575}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":76949,"byte_end":76989,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4597},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77016,"byte_end":77026,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4601},{"krate":0,"index":4602},{"krate":0,"index":4603}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":76949,"byte_end":76989,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4629},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82192,"byte_end":82197,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4631},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82216,"byte_end":82222,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4633},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82241,"byte_end":82246,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4626},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82160,"byte_end":82173,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":4629},{"krate":0,"index":4631},{"krate":0,"index":4633}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenErrProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82090,"byte_end":82133,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4655},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82160,"byte_end":82173,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4659},{"krate":0,"index":4660},{"krate":0,"index":4661}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82090,"byte_end":82133,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4687},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4690}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4712},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":4716},{"krate":0,"index":4717}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4756},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4759}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4781},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":4785},{"krate":0,"index":4786}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4824},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4826}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4844},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":4847},{"krate":0,"index":4848}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4881},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":4885}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4911},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":4916},{"krate":0,"index":4917}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4965},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":4969}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4995},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5048},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":5051}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5073},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":5077},{"krate":0,"index":5078}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5117},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":5120}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5142},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":5146},{"krate":0,"index":5147}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5186},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":5189}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5211},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5255},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":5258}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5280},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":5284},{"krate":0,"index":5285}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5324},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":5327}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5349},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":5353},{"krate":0,"index":5354}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5393},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":5396}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5418},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5423}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5463},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5467}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5493},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5499}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5546},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5549}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5571},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":5575},{"krate":0,"index":5576}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58961,"byte_end":58973,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":422}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58897,"byte_end":58950,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61683,"byte_end":61689,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60311,"byte_end":60369,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60374,"byte_end":60377,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60382,"byte_end":60457,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60462,"byte_end":60532,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60537,"byte_end":60610,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60615,"byte_end":60644,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60649,"byte_end":60652,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60657,"byte_end":60732,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60737,"byte_end":60812,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60817,"byte_end":60864,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60869,"byte_end":60872,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60877,"byte_end":60952,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60957,"byte_end":60983,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60988,"byte_end":60991,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":60996,"byte_end":61010,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61015,"byte_end":61018,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61023,"byte_end":61030,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61035,"byte_end":61073,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61078,"byte_end":61081,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61086,"byte_end":61127,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61132,"byte_end":61177,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61182,"byte_end":61224,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61229,"byte_end":61265,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61270,"byte_end":61279,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61284,"byte_end":61291,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61296,"byte_end":61299,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61304,"byte_end":61376,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61381,"byte_end":61392,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61397,"byte_end":61400,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61405,"byte_end":61412,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61417,"byte_end":61455,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61460,"byte_end":61463,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61468,"byte_end":61509,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61514,"byte_end":61560,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61565,"byte_end":61607,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61612,"byte_end":61649,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61654,"byte_end":61663,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61668,"byte_end":61675,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63248,"byte_end":63262,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":61880,"byte_end":61997,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62002,"byte_end":62005,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62010,"byte_end":62132,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62137,"byte_end":62187,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62192,"byte_end":62195,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62200,"byte_end":62275,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62280,"byte_end":62355,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62360,"byte_end":62407,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62412,"byte_end":62415,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62420,"byte_end":62495,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62500,"byte_end":62575,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62580,"byte_end":62627,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62632,"byte_end":62635,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62640,"byte_end":62715,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62720,"byte_end":62746,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62751,"byte_end":62754,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62759,"byte_end":62773,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62778,"byte_end":62781,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62786,"byte_end":62793,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62798,"byte_end":62836,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62841,"byte_end":62844,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62849,"byte_end":62890,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62895,"byte_end":62940,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":62945,"byte_end":63006,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63011,"byte_end":63043,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63048,"byte_end":63051,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63056,"byte_end":63102,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63107,"byte_end":63168,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63173,"byte_end":63206,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63211,"byte_end":63220,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63225,"byte_end":63232,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63237,"byte_end":63240,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64945,"byte_end":64952,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63496,"byte_end":63552,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63557,"byte_end":63560,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63565,"byte_end":63639,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63644,"byte_end":63705,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63710,"byte_end":63780,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63785,"byte_end":63860,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63865,"byte_end":63900,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63905,"byte_end":63908,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63913,"byte_end":63988,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":63993,"byte_end":64068,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64073,"byte_end":64120,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64125,"byte_end":64128,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64133,"byte_end":64208,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64213,"byte_end":64239,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64244,"byte_end":64247,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64252,"byte_end":64266,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64271,"byte_end":64274,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64279,"byte_end":64286,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64291,"byte_end":64329,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64334,"byte_end":64337,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64342,"byte_end":64383,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64388,"byte_end":64434,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64439,"byte_end":64482,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64487,"byte_end":64524,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64529,"byte_end":64538,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64543,"byte_end":64550,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64555,"byte_end":64558,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64563,"byte_end":64636,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64641,"byte_end":64655,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64660,"byte_end":64663,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64668,"byte_end":64675,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64680,"byte_end":64718,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64723,"byte_end":64726,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64731,"byte_end":64772,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64777,"byte_end":64822,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64827,"byte_end":64870,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64875,"byte_end":64911,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64916,"byte_end":64925,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":64930,"byte_end":64937,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66042,"byte_end":66050,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65145,"byte_end":65215,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65220,"byte_end":65269,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65274,"byte_end":65277,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65282,"byte_end":65345,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65350,"byte_end":65418,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65423,"byte_end":65496,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65501,"byte_end":65577,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65582,"byte_end":65627,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65632,"byte_end":65635,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65640,"byte_end":65715,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65720,"byte_end":65746,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65751,"byte_end":65754,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65759,"byte_end":65773,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65778,"byte_end":65781,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65786,"byte_end":65793,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65798,"byte_end":65836,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65841,"byte_end":65844,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65849,"byte_end":65890,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65895,"byte_end":65946,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":65951,"byte_end":66008,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66013,"byte_end":66022,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66027,"byte_end":66034,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66346,"byte_end":66353,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66226,"byte_end":66284,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66289,"byte_end":66338,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67908,"byte_end":67916,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66527,"byte_end":66596,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66601,"byte_end":66675,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66680,"byte_end":66683,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66688,"byte_end":66763,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66768,"byte_end":66838,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66843,"byte_end":66908,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66913,"byte_end":66979,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":66984,"byte_end":67018,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67023,"byte_end":67026,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67031,"byte_end":67106,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67111,"byte_end":67137,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67142,"byte_end":67145,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67150,"byte_end":67164,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67169,"byte_end":67172,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67177,"byte_end":67184,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67189,"byte_end":67227,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67232,"byte_end":67235,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67240,"byte_end":67281,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67286,"byte_end":67331,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67336,"byte_end":67411,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67416,"byte_end":67452,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67457,"byte_end":67466,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67471,"byte_end":67478,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67483,"byte_end":67486,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67491,"byte_end":67567,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67572,"byte_end":67583,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67588,"byte_end":67591,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67596,"byte_end":67603,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67608,"byte_end":67646,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67651,"byte_end":67654,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67659,"byte_end":67700,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67705,"byte_end":67751,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67756,"byte_end":67832,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67837,"byte_end":67874,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67879,"byte_end":67888,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":67893,"byte_end":67900,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69537,"byte_end":69544,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68170,"byte_end":68235,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68240,"byte_end":68312,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68317,"byte_end":68320,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68325,"byte_end":68400,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68405,"byte_end":68475,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68480,"byte_end":68545,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68550,"byte_end":68626,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68631,"byte_end":68649,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68654,"byte_end":68657,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68662,"byte_end":68737,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68742,"byte_end":68768,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68773,"byte_end":68776,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68781,"byte_end":68795,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68800,"byte_end":68803,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68808,"byte_end":68815,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68820,"byte_end":68858,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68863,"byte_end":68866,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68871,"byte_end":68912,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68917,"byte_end":68963,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":68968,"byte_end":69043,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69048,"byte_end":69085,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69090,"byte_end":69099,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69104,"byte_end":69111,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69116,"byte_end":69119,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69124,"byte_end":69197,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69202,"byte_end":69216,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69221,"byte_end":69224,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69229,"byte_end":69236,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69241,"byte_end":69279,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69284,"byte_end":69287,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69292,"byte_end":69333,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69338,"byte_end":69383,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69388,"byte_end":69462,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69467,"byte_end":69503,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69508,"byte_end":69517,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69522,"byte_end":69529,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70520,"byte_end":70530,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69793,"byte_end":69866,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69871,"byte_end":69874,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69879,"byte_end":69954,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":69959,"byte_end":70032,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70037,"byte_end":70106,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70111,"byte_end":70164,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70169,"byte_end":70172,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70177,"byte_end":70191,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70196,"byte_end":70199,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70204,"byte_end":70211,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70216,"byte_end":70257,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70262,"byte_end":70300,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70305,"byte_end":70308,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70313,"byte_end":70355,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70360,"byte_end":70441,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70446,"byte_end":70486,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70491,"byte_end":70500,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70505,"byte_end":70512,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71456,"byte_end":71467,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70729,"byte_end":70800,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70805,"byte_end":70808,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70813,"byte_end":70888,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70893,"byte_end":70966,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":70971,"byte_end":71040,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71045,"byte_end":71099,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71104,"byte_end":71107,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71112,"byte_end":71126,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71131,"byte_end":71134,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71139,"byte_end":71146,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71151,"byte_end":71192,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71197,"byte_end":71235,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71240,"byte_end":71243,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71248,"byte_end":71291,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71296,"byte_end":71376,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71381,"byte_end":71422,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71427,"byte_end":71436,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71441,"byte_end":71448,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71852,"byte_end":71863,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71671,"byte_end":71746,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71751,"byte_end":71780,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71785,"byte_end":71788,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":71793,"byte_end":71844,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72972,"byte_end":72990,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72028,"byte_end":72103,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72108,"byte_end":72131,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72136,"byte_end":72139,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72144,"byte_end":72216,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72221,"byte_end":72294,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72299,"byte_end":72313,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72318,"byte_end":72321,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72326,"byte_end":72396,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72401,"byte_end":72419,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72424,"byte_end":72427,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72432,"byte_end":72446,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72451,"byte_end":72454,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72459,"byte_end":72466,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72471,"byte_end":72512,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72517,"byte_end":72555,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72560,"byte_end":72606,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72611,"byte_end":72614,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72619,"byte_end":72679,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72684,"byte_end":72763,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72768,"byte_end":72771,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72776,"byte_end":72833,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72838,"byte_end":72890,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72895,"byte_end":72938,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72943,"byte_end":72952,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":72957,"byte_end":72964,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74080,"byte_end":74094,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73250,"byte_end":73320,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73325,"byte_end":73362,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73367,"byte_end":73416,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73421,"byte_end":73424,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73429,"byte_end":73498,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73503,"byte_end":73576,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73581,"byte_end":73651,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73656,"byte_end":73674,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73679,"byte_end":73682,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73687,"byte_end":73755,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73760,"byte_end":73763,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73768,"byte_end":73782,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73787,"byte_end":73790,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73795,"byte_end":73802,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73807,"byte_end":73845,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73850,"byte_end":73853,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73858,"byte_end":73899,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73904,"byte_end":73956,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":73961,"byte_end":74008,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74013,"byte_end":74046,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74051,"byte_end":74060,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74065,"byte_end":74072,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75348,"byte_end":75359,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74647,"byte_end":74700,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74705,"byte_end":74741,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74746,"byte_end":74749,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74754,"byte_end":74803,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74808,"byte_end":74875,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74880,"byte_end":74893,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74898,"byte_end":74901,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74906,"byte_end":74920,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74925,"byte_end":74928,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74933,"byte_end":74940,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":74945,"byte_end":75004,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75009,"byte_end":75012,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75017,"byte_end":75036,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75041,"byte_end":75059,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75064,"byte_end":75136,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75141,"byte_end":75173,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75178,"byte_end":75185,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75190,"byte_end":75266,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75271,"byte_end":75274,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75279,"byte_end":75328,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75333,"byte_end":75340,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75618,"byte_end":75632,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75515,"byte_end":75588,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":75593,"byte_end":75610,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5612},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":83969,"byte_end":83973,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":5614}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":83835,"byte_end":83872,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":83890,"byte_end":83957,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":448},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84514,"byte_end":84518,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84077,"byte_end":84145,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84146,"byte_end":84149,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84150,"byte_end":84213,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84214,"byte_end":84217,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84218,"byte_end":84232,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84233,"byte_end":84236,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84237,"byte_end":84244,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84245,"byte_end":84286,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84287,"byte_end":84311,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84312,"byte_end":84315,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84316,"byte_end":84348,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84349,"byte_end":84376,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84377,"byte_end":84380,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84381,"byte_end":84418,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84419,"byte_end":84443,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84444,"byte_end":84451,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84452,"byte_end":84488,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84489,"byte_end":84498,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84499,"byte_end":84506,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5618},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85284,"byte_end":85291,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":5620}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85145,"byte_end":85187,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85205,"byte_end":85272,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":475},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85810,"byte_end":85817,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85432,"byte_end":85512,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85513,"byte_end":85526,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85527,"byte_end":85530,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85531,"byte_end":85593,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85594,"byte_end":85597,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85598,"byte_end":85612,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85613,"byte_end":85616,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85617,"byte_end":85630,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85631,"byte_end":85672,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85673,"byte_end":85697,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85698,"byte_end":85701,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85702,"byte_end":85737,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85738,"byte_end":85764,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85765,"byte_end":85784,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85785,"byte_end":85794,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85795,"byte_end":85802,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5626},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86620,"byte_end":86626,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":5624},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86585,"byte_end":86615,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5628},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86687,"byte_end":86691,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":5624},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86644,"byte_end":86682,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5631},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86853,"byte_end":86857,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":5624},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86710,"byte_end":86776,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86781,"byte_end":86848,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":5624},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86556,"byte_end":86565,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5626},{"krate":0,"index":5628},{"krate":0,"index":5631}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private(project = MaybeDoneProj, project_replace = MaybeDoneProjOwn))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86454,"byte_end":86529,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":5661},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86556,"byte_end":86565,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":5664},{"krate":0,"index":5665}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86454,"byte_end":86529,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":498},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87323,"byte_end":87333,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86862,"byte_end":86899,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86900,"byte_end":86903,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86904,"byte_end":86918,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86919,"byte_end":86922,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86923,"byte_end":86930,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86931,"byte_end":86972,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86973,"byte_end":86997,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":86998,"byte_end":87023,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87024,"byte_end":87027,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87028,"byte_end":87077,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87078,"byte_end":87099,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87100,"byte_end":87152,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87153,"byte_end":87188,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87189,"byte_end":87244,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87245,"byte_end":87297,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87298,"byte_end":87307,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87308,"byte_end":87315,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87750,"byte_end":87760,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87452,"byte_end":87537,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87542,"byte_end":87613,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87618,"byte_end":87691,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87696,"byte_end":87724,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87729,"byte_end":87738,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":88059,"byte_end":88070,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87939,"byte_end":88005,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":88010,"byte_end":88033,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":88038,"byte_end":88047,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5685},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89650,"byte_end":89656,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":5683},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89615,"byte_end":89645,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5687},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89717,"byte_end":89721,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":5683},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89674,"byte_end":89712,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5690},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89929,"byte_end":89933,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":5683},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89736,"byte_end":89805,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89810,"byte_end":89880,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89885,"byte_end":89924,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":5683},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89580,"byte_end":89592,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":5685},{"krate":0,"index":5687},{"krate":0,"index":5690}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private(project = TryMaybeDoneProj, project_replace =\n                TryMaybeDoneProjOwn))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89472,"byte_end":89553,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":5720},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89580,"byte_end":89592,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":5723},{"krate":0,"index":5724}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89472,"byte_end":89553,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":524},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89986,"byte_end":90000,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":89938,"byte_end":89978,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90443,"byte_end":90453,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90134,"byte_end":90219,"line_start":30,"line_end":30,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90224,"byte_end":90295,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90300,"byte_end":90384,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90389,"byte_end":90417,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90422,"byte_end":90431,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90754,"byte_end":90765,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90631,"byte_end":90700,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90705,"byte_end":90728,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90733,"byte_end":90742,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5742},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":92877,"byte_end":92889,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":92798,"byte_end":92865,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":92759,"byte_end":92773,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5765},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":92877,"byte_end":92889,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":5768},{"krate":0,"index":5769}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":92759,"byte_end":92773,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93859,"byte_end":93865,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":569}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93739,"byte_end":93779,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93780,"byte_end":93847,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":572},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94452,"byte_end":94459,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93916,"byte_end":93987,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93988,"byte_end":93991,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93992,"byte_end":94058,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94059,"byte_end":94062,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94063,"byte_end":94077,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94078,"byte_end":94081,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94082,"byte_end":94089,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94090,"byte_end":94131,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94132,"byte_end":94165,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94166,"byte_end":94205,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94206,"byte_end":94209,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94210,"byte_end":94267,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94268,"byte_end":94311,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94312,"byte_end":94317,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94318,"byte_end":94321,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94322,"byte_end":94363,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94364,"byte_end":94426,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94427,"byte_end":94436,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94437,"byte_end":94444,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5790},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95179,"byte_end":95184,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95028,"byte_end":95075,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95100,"byte_end":95167,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95307,"byte_end":95317,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95224,"byte_end":95281,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95286,"byte_end":95295,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":606},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95983,"byte_end":95988,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95737,"byte_end":95797,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95798,"byte_end":95801,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95802,"byte_end":95816,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95817,"byte_end":95820,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95821,"byte_end":95828,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95829,"byte_end":95870,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95871,"byte_end":95895,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95896,"byte_end":95899,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95900,"byte_end":95929,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95930,"byte_end":95957,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95958,"byte_end":95967,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95968,"byte_end":95975,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":608},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96300,"byte_end":96302,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96034,"byte_end":96101,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96102,"byte_end":96105,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96106,"byte_end":96120,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96121,"byte_end":96124,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96125,"byte_end":96132,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96133,"byte_end":96174,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96175,"byte_end":96199,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96200,"byte_end":96203,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96204,"byte_end":96242,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96243,"byte_end":96274,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96275,"byte_end":96284,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96285,"byte_end":96292,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":611},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96633,"byte_end":96636,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96366,"byte_end":96432,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96433,"byte_end":96436,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96437,"byte_end":96451,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96452,"byte_end":96455,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96456,"byte_end":96463,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96464,"byte_end":96505,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96506,"byte_end":96530,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96531,"byte_end":96534,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96535,"byte_end":96574,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96575,"byte_end":96607,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96608,"byte_end":96617,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":96618,"byte_end":96625,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5892},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":98901,"byte_end":98905,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":5895},{"krate":0,"index":5896}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97124,"byte_end":97191,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5920},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":5924},{"krate":0,"index":5925},{"krate":0,"index":5926}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5945},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":98971,"byte_end":98976,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5951}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97124,"byte_end":97191,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5981},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5987},{"krate":0,"index":5988},{"krate":0,"index":5989}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6012},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99048,"byte_end":99053,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6019},{"krate":0,"index":6020}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97124,"byte_end":97191,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6056},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":6062},{"krate":0,"index":6063},{"krate":0,"index":6064},{"krate":0,"index":6065},{"krate":0,"index":6066}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6093},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99131,"byte_end":99136,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":6099},{"krate":0,"index":6100},{"krate":0,"index":6101},{"krate":0,"index":6102},{"krate":0,"index":6103}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97124,"byte_end":97191,"line_start":19,"line_end":19,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6145},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":6152},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6155},{"krate":0,"index":6156},{"krate":0,"index":6157}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":97101,"byte_end":97115,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":634},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99751,"byte_end":99755,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99174,"byte_end":99245,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99246,"byte_end":99249,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99250,"byte_end":99321,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99322,"byte_end":99397,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99398,"byte_end":99401,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99402,"byte_end":99471,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99472,"byte_end":99498,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99499,"byte_end":99502,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99503,"byte_end":99517,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99518,"byte_end":99521,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99522,"byte_end":99529,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99530,"byte_end":99571,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99572,"byte_end":99596,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99597,"byte_end":99600,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99601,"byte_end":99625,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99626,"byte_end":99650,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99651,"byte_end":99685,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99686,"byte_end":99689,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99690,"byte_end":99725,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99726,"byte_end":99735,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99736,"byte_end":99743,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":637},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100301,"byte_end":100306,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":99962,"byte_end":100014,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100015,"byte_end":100018,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100019,"byte_end":100033,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100034,"byte_end":100037,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100038,"byte_end":100045,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100046,"byte_end":100087,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100088,"byte_end":100112,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100113,"byte_end":100116,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100117,"byte_end":100141,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100142,"byte_end":100166,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100167,"byte_end":100191,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100192,"byte_end":100231,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100232,"byte_end":100235,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100236,"byte_end":100275,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100276,"byte_end":100285,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100286,"byte_end":100293,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100889,"byte_end":100894,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100519,"byte_end":100571,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100572,"byte_end":100575,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100576,"byte_end":100590,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100591,"byte_end":100594,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100595,"byte_end":100602,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100603,"byte_end":100644,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100645,"byte_end":100669,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100670,"byte_end":100673,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100674,"byte_end":100698,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100699,"byte_end":100723,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100724,"byte_end":100748,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100749,"byte_end":100773,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100774,"byte_end":100816,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100817,"byte_end":100820,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100821,"byte_end":100863,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100864,"byte_end":100873,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":100874,"byte_end":100881,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101566,"byte_end":101571,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101165,"byte_end":101217,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101218,"byte_end":101221,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101222,"byte_end":101236,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101237,"byte_end":101240,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101241,"byte_end":101248,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101249,"byte_end":101290,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101291,"byte_end":101315,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101316,"byte_end":101319,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101320,"byte_end":101344,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101345,"byte_end":101369,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101370,"byte_end":101394,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101395,"byte_end":101419,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101420,"byte_end":101444,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101445,"byte_end":101490,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101491,"byte_end":101494,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101495,"byte_end":101540,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101541,"byte_end":101550,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join.rs","byte_start":101551,"byte_end":101558,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":677},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":102732,"byte_end":102739,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":679}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":102611,"byte_end":102652,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":102653,"byte_end":102720,"line_start":25,"line_end":25,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104379,"byte_end":104387,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"pub fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator,\nI::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103072,"byte_end":103152,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103153,"byte_end":103163,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103164,"byte_end":103167,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103168,"byte_end":103247,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103248,"byte_end":103328,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103329,"byte_end":103347,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103348,"byte_end":103351,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103352,"byte_end":103429,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103430,"byte_end":103487,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103488,"byte_end":103491,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103492,"byte_end":103506,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103507,"byte_end":103510,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This is purposefully a very simple API for basic use-cases. In a lot of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103511,"byte_end":103586,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ cases you will want to use the more powerful","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103587,"byte_end":103635,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/ [`FuturesOrdered`][crate::stream::FuturesOrdered] APIs, or, if order does","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103636,"byte_end":103713,"line_start":59,"line_end":59,"column_start":1,"column_end":78}},{"value":"/ not matter, [`FuturesUnordered`][crate::stream::FuturesUnordered].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103714,"byte_end":103784,"line_start":60,"line_end":60,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103785,"byte_end":103788,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103789,"byte_end":103858,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103859,"byte_end":103862,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103863,"byte_end":103931,"line_start":64,"line_end":64,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103932,"byte_end":103935,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":103936,"byte_end":104013,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104014,"byte_end":104095,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104096,"byte_end":104099,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104100,"byte_end":104114,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104115,"byte_end":104118,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104119,"byte_end":104126,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104127,"byte_end":104168,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104169,"byte_end":104203,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104204,"byte_end":104207,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104208,"byte_end":104245,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104246,"byte_end":104249,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104250,"byte_end":104297,"line_start":77,"line_end":77,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104298,"byte_end":104301,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104302,"byte_end":104353,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104354,"byte_end":104363,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104364,"byte_end":104371,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6188},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105700,"byte_end":105706,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":6191}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105562,"byte_end":105603,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105604,"byte_end":105671,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":711},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107854,"byte_end":107860,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105797,"byte_end":105867,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105868,"byte_end":105871,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105872,"byte_end":105950,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105951,"byte_end":106027,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106028,"byte_end":106100,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106101,"byte_end":106104,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106105,"byte_end":106177,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106178,"byte_end":106206,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106207,"byte_end":106210,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106211,"byte_end":106278,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106279,"byte_end":106343,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106344,"byte_end":106394,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106395,"byte_end":106398,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106399,"byte_end":106413,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106414,"byte_end":106417,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106418,"byte_end":106438,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106439,"byte_end":106442,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106443,"byte_end":106450,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106451,"byte_end":106492,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106493,"byte_end":106533,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106534,"byte_end":106559,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106560,"byte_end":106563,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106564,"byte_end":106654,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106655,"byte_end":106685,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106686,"byte_end":106716,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106717,"byte_end":106720,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106721,"byte_end":106767,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106768,"byte_end":106790,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106791,"byte_end":106813,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106814,"byte_end":106817,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106818,"byte_end":106880,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106881,"byte_end":106964,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":106965,"byte_end":107037,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107038,"byte_end":107122,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107123,"byte_end":107196,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107197,"byte_end":107203,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107204,"byte_end":107207,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107208,"byte_end":107246,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107247,"byte_end":107256,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107257,"byte_end":107264,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107265,"byte_end":107268,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107269,"byte_end":107295,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107296,"byte_end":107299,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107300,"byte_end":107307,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107308,"byte_end":107367,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107368,"byte_end":107371,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107372,"byte_end":107425,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107426,"byte_end":107429,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107430,"byte_end":107505,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107506,"byte_end":107538,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107539,"byte_end":107571,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107572,"byte_end":107577,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107578,"byte_end":107622,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107623,"byte_end":107649,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107650,"byte_end":107727,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107728,"byte_end":107807,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107808,"byte_end":107821,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107822,"byte_end":107832,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107833,"byte_end":107838,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":107839,"byte_end":107846,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6196},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109212,"byte_end":109221,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":6198}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109072,"byte_end":109115,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109133,"byte_end":109200,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":738},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":110001,"byte_end":110011,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109299,"byte_end":109365,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109366,"byte_end":109369,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109370,"byte_end":109450,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109451,"byte_end":109529,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109530,"byte_end":109598,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109599,"byte_end":109602,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109603,"byte_end":109683,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109684,"byte_end":109758,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109759,"byte_end":109762,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109763,"byte_end":109840,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109841,"byte_end":109898,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109899,"byte_end":109902,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109903,"byte_end":109915,"line_start":30,"line_end":30,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109916,"byte_end":109919,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109920,"byte_end":109993,"line_start":32,"line_end":32,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6272},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":113945,"byte_end":113952,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":6275},{"krate":0,"index":6276}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111503,"byte_end":111570,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6300},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6325},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114022,"byte_end":114030,"line_start":96,"line_end":96,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6329},{"krate":0,"index":6330},{"krate":0,"index":6331}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111503,"byte_end":111570,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6361},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6369}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114106,"byte_end":114114,"line_start":99,"line_end":99,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6397},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6400}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111503,"byte_end":111570,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6436},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":6442},{"krate":0,"index":6443},{"krate":0,"index":6444},{"krate":0,"index":6445},{"krate":0,"index":6446}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6473},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114196,"byte_end":114204,"line_start":102,"line_end":102,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6479},{"krate":0,"index":6480},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6483}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111503,"byte_end":111570,"line_start":17,"line_end":17,"column_start":9,"column_end":76}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":6525},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6537}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":111480,"byte_end":111494,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":766},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115476,"byte_end":115484,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114242,"byte_end":114315,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114316,"byte_end":114348,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114349,"byte_end":114352,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114353,"byte_end":114424,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114425,"byte_end":114501,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114502,"byte_end":114573,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114574,"byte_end":114590,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114591,"byte_end":114594,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114595,"byte_end":114664,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114665,"byte_end":114691,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114692,"byte_end":114695,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114696,"byte_end":114710,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114711,"byte_end":114714,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114715,"byte_end":114791,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114792,"byte_end":114828,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114829,"byte_end":114832,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114833,"byte_end":114840,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114841,"byte_end":114882,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114883,"byte_end":114907,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114908,"byte_end":114911,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114912,"byte_end":114957,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":114958,"byte_end":115003,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115004,"byte_end":115042,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115043,"byte_end":115046,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115047,"byte_end":115086,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115087,"byte_end":115096,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115097,"byte_end":115104,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115105,"byte_end":115108,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115109,"byte_end":115179,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115180,"byte_end":115195,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115196,"byte_end":115199,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115200,"byte_end":115207,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115208,"byte_end":115249,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115250,"byte_end":115274,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115275,"byte_end":115278,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115279,"byte_end":115324,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115325,"byte_end":115371,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115372,"byte_end":115410,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115411,"byte_end":115414,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115415,"byte_end":115450,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115451,"byte_end":115460,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115461,"byte_end":115468,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":769},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116077,"byte_end":116086,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115659,"byte_end":115719,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115720,"byte_end":115723,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115724,"byte_end":115738,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115739,"byte_end":115742,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115743,"byte_end":115750,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115751,"byte_end":115792,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115793,"byte_end":115817,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115818,"byte_end":115821,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115822,"byte_end":115867,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115868,"byte_end":115913,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115914,"byte_end":115959,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":115960,"byte_end":116003,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116004,"byte_end":116007,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116008,"byte_end":116051,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116052,"byte_end":116061,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116062,"byte_end":116069,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":773},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116826,"byte_end":116835,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116356,"byte_end":116416,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116417,"byte_end":116420,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116421,"byte_end":116435,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116436,"byte_end":116439,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116440,"byte_end":116447,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116448,"byte_end":116489,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116490,"byte_end":116514,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116515,"byte_end":116518,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116519,"byte_end":116564,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116565,"byte_end":116610,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116611,"byte_end":116656,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116657,"byte_end":116702,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116703,"byte_end":116749,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116750,"byte_end":116753,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116754,"byte_end":116800,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116801,"byte_end":116810,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":116811,"byte_end":116818,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117709,"byte_end":117718,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117187,"byte_end":117247,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117248,"byte_end":117251,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117252,"byte_end":117266,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117267,"byte_end":117270,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117271,"byte_end":117278,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117279,"byte_end":117320,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117321,"byte_end":117345,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117346,"byte_end":117349,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117350,"byte_end":117395,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117396,"byte_end":117441,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117442,"byte_end":117487,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117488,"byte_end":117533,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117534,"byte_end":117579,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117580,"byte_end":117629,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117630,"byte_end":117633,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117634,"byte_end":117683,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117684,"byte_end":117693,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join.rs","byte_start":117694,"byte_end":117701,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":820},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119104,"byte_end":119114,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":822}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":118979,"byte_end":119024,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119025,"byte_end":119092,"line_start":31,"line_end":31,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":826},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120733,"byte_end":120745,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"pub fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119484,"byte_end":119563,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119564,"byte_end":119594,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119595,"byte_end":119598,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119599,"byte_end":119678,"line_start":55,"line_end":55,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119679,"byte_end":119759,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119760,"byte_end":119778,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119779,"byte_end":119782,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119783,"byte_end":119861,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119862,"byte_end":119942,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119943,"byte_end":120017,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120018,"byte_end":120041,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120042,"byte_end":120045,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120046,"byte_end":120123,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120124,"byte_end":120181,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120182,"byte_end":120185,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120186,"byte_end":120200,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120201,"byte_end":120204,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120205,"byte_end":120212,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120213,"byte_end":120254,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120255,"byte_end":120301,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120302,"byte_end":120305,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120306,"byte_end":120329,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120330,"byte_end":120364,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120365,"byte_end":120399,"line_start":75,"line_end":75,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120400,"byte_end":120434,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120435,"byte_end":120441,"line_start":77,"line_end":77,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120442,"byte_end":120445,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120446,"byte_end":120509,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120510,"byte_end":120513,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120514,"byte_end":120537,"line_start":81,"line_end":81,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120538,"byte_end":120572,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120573,"byte_end":120608,"line_start":83,"line_end":83,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120609,"byte_end":120643,"line_start":84,"line_end":84,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120644,"byte_end":120650,"line_start":85,"line_end":85,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120651,"byte_end":120654,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120655,"byte_end":120707,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120708,"byte_end":120717,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120718,"byte_end":120725,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122574,"byte_end":122583,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":6571}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122432,"byte_end":122477,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122478,"byte_end":122545,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":854},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124168,"byte_end":124178,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122677,"byte_end":122747,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122748,"byte_end":122751,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122752,"byte_end":122830,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122831,"byte_end":122907,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122908,"byte_end":122980,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122981,"byte_end":122984,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122985,"byte_end":123057,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123058,"byte_end":123086,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123087,"byte_end":123090,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123091,"byte_end":123158,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123159,"byte_end":123230,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123231,"byte_end":123281,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123282,"byte_end":123285,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123286,"byte_end":123300,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123301,"byte_end":123304,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123305,"byte_end":123312,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123313,"byte_end":123397,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123398,"byte_end":123401,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123402,"byte_end":123459,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123460,"byte_end":123463,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123464,"byte_end":123546,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123547,"byte_end":123604,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123605,"byte_end":123662,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123663,"byte_end":123689,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123690,"byte_end":123695,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123696,"byte_end":123791,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123792,"byte_end":123815,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123816,"byte_end":123896,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123897,"byte_end":123978,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":123979,"byte_end":124049,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124050,"byte_end":124121,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124122,"byte_end":124135,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124136,"byte_end":124146,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124147,"byte_end":124152,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124153,"byte_end":124160,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":6576},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125667,"byte_end":125675,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":6578}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125528,"byte_end":125570,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125588,"byte_end":125655,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":879},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126397,"byte_end":126406,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"pub fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125752,"byte_end":125846,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125847,"byte_end":125850,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125851,"byte_end":125940,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125941,"byte_end":126025,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126026,"byte_end":126107,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126108,"byte_end":126153,"line_start":23,"line_end":23,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126154,"byte_end":126157,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126158,"byte_end":126236,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126237,"byte_end":126294,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126295,"byte_end":126298,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126299,"byte_end":126311,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126312,"byte_end":126315,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126316,"byte_end":126389,"line_start":30,"line_end":30,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6585},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128742,"byte_end":128746,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":6582},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128709,"byte_end":128737,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6587},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128796,"byte_end":128801,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":6582},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128762,"byte_end":128791,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":6582},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128690,"byte_end":128696,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(\n         #[pin]\n         A),\n\n    /// Second branch of the type\n    Right(\n          #[pin]\n          B),\n}","parent":null,"children":[{"krate":0,"index":6585},{"krate":0,"index":6587}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128620,"byte_end":128656,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6607},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128690,"byte_end":128696,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":6611},{"krate":0,"index":6612},{"krate":0,"index":6613}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128620,"byte_end":128656,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129007,"byte_end":129019,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128859,"byte_end":128917,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128922,"byte_end":128925,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128930,"byte_end":128995,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129399,"byte_end":129412,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129250,"byte_end":129308,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129313,"byte_end":129316,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129321,"byte_end":129387,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129700,"byte_end":129710,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129627,"byte_end":129688,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":11738},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645588,"byte_end":8645597,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"Abortable","qualname":"::future::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":11741},{"krate":0,"index":11740}],"decl_id":null,"docs":" A future which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645509,"byte_end":8645576,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645470,"byte_end":8645484,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11761},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645588,"byte_end":8645597,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__Abortable","qualname":"::future::abortable::_::__Abortable","value":"__Abortable {  }","parent":null,"children":[{"krate":0,"index":11764},{"krate":0,"index":11765}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645470,"byte_end":8645484,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646480,"byte_end":8646483,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<Fut>>::new","value":"pub fn new(Fut, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future using an existing `AbortRegistration`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645713,"byte_end":8645788,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645793,"byte_end":8645861,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645866,"byte_end":8645869,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645874,"byte_end":8645946,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ already been called, the future will complete immediately without making","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645951,"byte_end":8646027,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ any further progress.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646032,"byte_end":8646057,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646062,"byte_end":8646065,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646070,"byte_end":8646082,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646087,"byte_end":8646090,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646095,"byte_end":8646102,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646107,"byte_end":8646148,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646153,"byte_end":8646212,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646217,"byte_end":8646220,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646225,"byte_end":8646294,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646299,"byte_end":8646364,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646369,"byte_end":8646394,"line_start":36,"line_end":36,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646399,"byte_end":8646442,"line_start":37,"line_end":37,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646447,"byte_end":8646456,"line_start":38,"line_end":38,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646461,"byte_end":8646468,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6675},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646811,"byte_end":8646828,"line_start":52,"line_end":52,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::future::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":6676}],"decl_id":null,"docs":" A registration handle for a `Abortable` future.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for a `Abortable` future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646620,"byte_end":8646671,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646672,"byte_end":8646748,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646749,"byte_end":8646782,"line_start":50,"line_end":50,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6679},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646935,"byte_end":8646946,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::future::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":6680}],"decl_id":null,"docs":" A handle to a `Abortable` future.\n","sig":null,"attributes":[{"value":"/ A handle to a `Abortable` future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646862,"byte_end":8646899,"line_start":56,"line_end":56,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6657},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647616,"byte_end":8647624,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"pub fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647003,"byte_end":8647077,"line_start":63,"line_end":63,"column_start":5,"column_end":79}},{"value":"/ to abort a running future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647082,"byte_end":8647112,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647117,"byte_end":8647120,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to `Abortable::new`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647125,"byte_end":8647193,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647198,"byte_end":8647201,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647206,"byte_end":8647218,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647223,"byte_end":8647226,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647231,"byte_end":8647238,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647243,"byte_end":8647284,"line_start":71,"line_end":71,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647289,"byte_end":8647348,"line_start":72,"line_end":72,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647353,"byte_end":8647356,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647361,"byte_end":8647430,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647435,"byte_end":8647500,"line_start":75,"line_end":75,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647505,"byte_end":8647530,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647535,"byte_end":8647578,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647583,"byte_end":8647592,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8647597,"byte_end":8647604,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":6658},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648527,"byte_end":8648536,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"pub fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and a `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648158,"byte_end":8648244,"line_start":105,"line_end":105,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648245,"byte_end":8648248,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648249,"byte_end":8648325,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648326,"byte_end":8648379,"line_start":108,"line_end":108,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648380,"byte_end":8648383,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648384,"byte_end":8648461,"line_start":110,"line_end":110,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648462,"byte_end":8648519,"line_start":111,"line_end":111,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6690},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648840,"byte_end":8648847,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::future::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` future was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` future was aborted.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648729,"byte_end":8648783,"line_start":122,"line_end":122,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6668},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650460,"byte_end":8650465,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` future associated with this handle.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650096,"byte_end":8650157,"line_start":165,"line_end":165,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650162,"byte_end":8650165,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable future associated with this handle that it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650170,"byte_end":8650239,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ should abort. Note that if the future is currently being polled on","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650244,"byte_end":8650314,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650319,"byte_end":8650393,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650398,"byte_end":8650448,"line_start":170,"line_end":170,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":979},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":10009},{"krate":0,"index":10083},{"krate":0,"index":10084},{"krate":0,"index":10314},{"krate":0,"index":10315},{"krate":0,"index":10363},{"krate":0,"index":10364},{"krate":0,"index":10365},{"krate":0,"index":2664}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"/ Streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136094,"byte_end":136105,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136106,"byte_end":136109,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136110,"byte_end":136184,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136185,"byte_end":136263,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ methods to `Stream` types","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":136264,"byte_end":136293,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6703},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187160,"byte_end":187165,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":6706},{"krate":0,"index":6707}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187100,"byte_end":187148,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187068,"byte_end":187082,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6731},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187160,"byte_end":187165,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6737}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187068,"byte_end":187082,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6760},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189278,"byte_end":189285,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":6764},{"krate":0,"index":6763}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189199,"byte_end":189266,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189167,"byte_end":189181,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6788},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189278,"byte_end":189285,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189167,"byte_end":189181,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6816},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":190684,"byte_end":190690,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":6819},{"krate":0,"index":6818}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":190605,"byte_end":190672,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":190573,"byte_end":190587,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6839},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":190684,"byte_end":190690,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":6842},{"krate":0,"index":6843}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":190573,"byte_end":190587,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6861},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192429,"byte_end":192438,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":6864},{"krate":0,"index":6863}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192369,"byte_end":192417,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192337,"byte_end":192351,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6884},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192429,"byte_end":192438,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":6887},{"krate":0,"index":6888}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192337,"byte_end":192351,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6910},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194080,"byte_end":194086,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":6916},{"krate":0,"index":6914},{"krate":0,"index":6917},{"krate":0,"index":6915}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194020,"byte_end":194068,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194005,"byte_end":194019,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6949},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194080,"byte_end":194086,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":6954},{"krate":0,"index":6955},{"krate":0,"index":6956}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194005,"byte_end":194019,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6983},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197528,"byte_end":197537,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":6988},{"krate":0,"index":6987},{"krate":0,"index":6989}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197468,"byte_end":197516,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197453,"byte_end":197467,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7019},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197528,"byte_end":197537,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197453,"byte_end":197467,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7053},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200558,"byte_end":200565,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7056},{"krate":0,"index":7057}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200498,"byte_end":200546,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200466,"byte_end":200480,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7081},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200558,"byte_end":200565,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7085},{"krate":0,"index":7086},{"krate":0,"index":7087}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200466,"byte_end":200480,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7116},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":7118}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7136},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":7139},{"krate":0,"index":7140}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7175},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202318,"byte_end":202322,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":7182},{"krate":0,"index":7180},{"krate":0,"index":7181},{"krate":0,"index":7183}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202239,"byte_end":202306,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202224,"byte_end":202238,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7219},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202318,"byte_end":202322,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":7225},{"krate":0,"index":7226},{"krate":0,"index":7227}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202224,"byte_end":202238,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7254},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":204828,"byte_end":204835,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":7259},{"krate":0,"index":7258},{"krate":0,"index":7260}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":204749,"byte_end":204816,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":204734,"byte_end":204748,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7290},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":204828,"byte_end":204835,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":7295},{"krate":0,"index":7296},{"krate":0,"index":7297}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":204734,"byte_end":204748,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7320},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206807,"byte_end":206811,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7323},{"krate":0,"index":7322}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206747,"byte_end":206795,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206715,"byte_end":206729,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7343},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206807,"byte_end":206811,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":7346},{"krate":0,"index":7347}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206715,"byte_end":206729,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207249,"byte_end":207256,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206980,"byte_end":207042,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207047,"byte_end":207050,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207055,"byte_end":207123,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207128,"byte_end":207194,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207199,"byte_end":207237,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":7369},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208613,"byte_end":208625,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":7371}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208443,"byte_end":208516,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208534,"byte_end":208601,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209208,"byte_end":209215,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208816,"byte_end":208889,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208894,"byte_end":208911,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208916,"byte_end":208919,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208924,"byte_end":209005,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209010,"byte_end":209092,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209097,"byte_end":209176,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209181,"byte_end":209196,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209826,"byte_end":209833,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209280,"byte_end":209347,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209352,"byte_end":209383,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209388,"byte_end":209391,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209396,"byte_end":209469,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209474,"byte_end":209529,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209534,"byte_end":209537,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209542,"byte_end":209623,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209628,"byte_end":209710,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209715,"byte_end":209794,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209799,"byte_end":209814,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210459,"byte_end":210470,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209906,"byte_end":209980,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":209985,"byte_end":210016,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210021,"byte_end":210024,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210029,"byte_end":210102,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210107,"byte_end":210162,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210167,"byte_end":210170,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210175,"byte_end":210256,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210261,"byte_end":210343,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210348,"byte_end":210427,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210432,"byte_end":210447,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":211103,"byte_end":211113,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210583,"byte_end":210645,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210650,"byte_end":210653,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210658,"byte_end":210730,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210735,"byte_end":210806,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210811,"byte_end":210814,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210819,"byte_end":210900,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210905,"byte_end":210987,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":210992,"byte_end":211071,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":211076,"byte_end":211091,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7378},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7381}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7403},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":7407},{"krate":0,"index":7408}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7452},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212118,"byte_end":212121,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7456},{"krate":0,"index":7455}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212058,"byte_end":212106,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212043,"byte_end":212057,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7480},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212118,"byte_end":212121,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":7484},{"krate":0,"index":7485}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212043,"byte_end":212057,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7512},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":7516}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7542},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":7547},{"krate":0,"index":7548}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7601},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":213835,"byte_end":213839,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":7604}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":213679,"byte_end":213738,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":213756,"byte_end":213823,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7609},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":214845,"byte_end":214859,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":7612}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":214661,"byte_end":214736,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":214737,"byte_end":214748,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":214766,"byte_end":214833,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7617},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216342,"byte_end":216350,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":7620},{"krate":0,"index":7619}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216282,"byte_end":216330,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216250,"byte_end":216264,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7640},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216342,"byte_end":216350,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":7643},{"krate":0,"index":7644}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216250,"byte_end":216264,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216817,"byte_end":216821,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216662,"byte_end":216735,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216740,"byte_end":216805,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":217146,"byte_end":217155,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216908,"byte_end":216970,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216975,"byte_end":216978,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216983,"byte_end":217056,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":217061,"byte_end":217134,"line_start":44,"line_end":44,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":7666},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":218865,"byte_end":218869,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":7669}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":218805,"byte_end":218853,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":218790,"byte_end":218804,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7691},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":218865,"byte_end":218869,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7696}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":218790,"byte_end":218804,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7715},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220121,"byte_end":220125,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7718},{"krate":0,"index":7717}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220061,"byte_end":220109,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220029,"byte_end":220043,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7738},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220121,"byte_end":220125,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":7741},{"krate":0,"index":7742}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220029,"byte_end":220043,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7764},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":221971,"byte_end":221980,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7771},{"krate":0,"index":7768},{"krate":0,"index":7772},{"krate":0,"index":7769},{"krate":0,"index":7770}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":221911,"byte_end":221959,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":221896,"byte_end":221910,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7806},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":221971,"byte_end":221980,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7811},{"krate":0,"index":7812},{"krate":0,"index":7813}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":221896,"byte_end":221910,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7840},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225566,"byte_end":225570,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7843},{"krate":0,"index":7842}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225506,"byte_end":225554,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225474,"byte_end":225488,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7863},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225566,"byte_end":225570,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":7866},{"krate":0,"index":7867}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225474,"byte_end":225488,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7889},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":227605,"byte_end":227614,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7896},{"krate":0,"index":7893},{"krate":0,"index":7897},{"krate":0,"index":7894},{"krate":0,"index":7895}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":227545,"byte_end":227593,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":227530,"byte_end":227544,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7931},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":227605,"byte_end":227614,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7937},{"krate":0,"index":7938}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":227530,"byte_end":227544,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7965},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231168,"byte_end":231177,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":7970},{"krate":0,"index":7971},{"krate":0,"index":7968},{"krate":0,"index":7969}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231108,"byte_end":231156,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231093,"byte_end":231107,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7999},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231168,"byte_end":231177,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":8003},{"krate":0,"index":8004},{"krate":0,"index":8005}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231093,"byte_end":231107,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232534,"byte_end":232545,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232234,"byte_end":232288,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232293,"byte_end":232387,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232392,"byte_end":232455,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232460,"byte_end":232522,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233829,"byte_end":233840,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232682,"byte_end":232747,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232752,"byte_end":232809,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232814,"byte_end":232817,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232822,"byte_end":232887,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232892,"byte_end":232952,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232957,"byte_end":232960,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":232965,"byte_end":233033,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233038,"byte_end":233081,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233086,"byte_end":233089,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233094,"byte_end":233108,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233113,"byte_end":233116,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233121,"byte_end":233128,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233133,"byte_end":233174,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233179,"byte_end":233203,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233208,"byte_end":233251,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233256,"byte_end":233284,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233289,"byte_end":233292,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233297,"byte_end":233335,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233340,"byte_end":233343,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233348,"byte_end":233366,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233371,"byte_end":233413,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233418,"byte_end":233433,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233438,"byte_end":233457,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233462,"byte_end":233487,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233492,"byte_end":233508,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233513,"byte_end":233546,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233551,"byte_end":233560,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233565,"byte_end":233572,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233577,"byte_end":233580,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233585,"byte_end":233634,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233639,"byte_end":233693,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233698,"byte_end":233701,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233706,"byte_end":233753,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233758,"byte_end":233791,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233796,"byte_end":233805,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233810,"byte_end":233817,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":234016,"byte_end":234026,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233919,"byte_end":233980,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":233985,"byte_end":234004,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8028},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":235916,"byte_end":235920,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":8033},{"krate":0,"index":8034},{"krate":0,"index":8032}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":235856,"byte_end":235904,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":235841,"byte_end":235855,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8064},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":235916,"byte_end":235920,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":8069},{"krate":0,"index":8070},{"krate":0,"index":8071}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":235841,"byte_end":235855,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8098},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":238562,"byte_end":238565,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":8103},{"krate":0,"index":8104},{"krate":0,"index":8101},{"krate":0,"index":8102}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":238502,"byte_end":238550,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":238470,"byte_end":238484,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8132},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":238562,"byte_end":238565,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8138}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":238470,"byte_end":238484,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239118,"byte_end":239125,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239010,"byte_end":239084,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239089,"byte_end":239106,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239481,"byte_end":239488,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239219,"byte_end":239287,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239292,"byte_end":239323,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239328,"byte_end":239331,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239336,"byte_end":239409,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239414,"byte_end":239469,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239863,"byte_end":239874,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239594,"byte_end":239669,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239674,"byte_end":239705,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239710,"byte_end":239713,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239718,"byte_end":239791,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":239796,"byte_end":239851,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240280,"byte_end":240290,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240044,"byte_end":240107,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240112,"byte_end":240115,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240120,"byte_end":240192,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240197,"byte_end":240268,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8161},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":243086,"byte_end":243092,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":8165},{"krate":0,"index":8163},{"krate":0,"index":8164}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":243026,"byte_end":243074,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":242994,"byte_end":243008,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8187},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":243086,"byte_end":243092,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"__Chunks","qualname":"::stream::stream::chunks::_::__Chunks","value":"__Chunks {  }","parent":null,"children":[{"krate":0,"index":8190},{"krate":0,"index":8191}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":242994,"byte_end":243008,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8213},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246177,"byte_end":246188,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8217},{"krate":0,"index":8215},{"krate":0,"index":8216}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246117,"byte_end":246165,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246085,"byte_end":246099,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8239},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246177,"byte_end":246188,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"__ReadyChunks","qualname":"::stream::stream::ready_chunks::_::__ReadyChunks","value":"__ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":8242},{"krate":0,"index":8243}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246085,"byte_end":246099,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8265},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":249622,"byte_end":249626,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":8271},{"krate":0,"index":8270},{"krate":0,"index":8272}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":249562,"byte_end":249610,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":249547,"byte_end":249561,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8306},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":249622,"byte_end":249626,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":8312},{"krate":0,"index":8313},{"krate":0,"index":8314}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":249547,"byte_end":249561,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11693},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8666592,"byte_end":8666607,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11697},{"krate":0,"index":11695},{"krate":0,"index":11696}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8666532,"byte_end":8666580,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8666517,"byte_end":8666531,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11719},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8666592,"byte_end":8666607,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"__BufferUnordered","qualname":"::stream::stream::buffer_unordered::_::__BufferUnordered","value":"__BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11722},{"krate":0,"index":11723}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8666517,"byte_end":8666531,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11648},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8669891,"byte_end":8669899,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":11652},{"krate":0,"index":11650},{"krate":0,"index":11651}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8669831,"byte_end":8669879,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8669816,"byte_end":8669830,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11674},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8669891,"byte_end":8669899,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"__Buffered","qualname":"::stream::stream::buffered::_::__Buffered","value":"__Buffered {  }","parent":null,"children":[{"krate":0,"index":11677},{"krate":0,"index":11678}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8669816,"byte_end":8669830,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11580},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8672914,"byte_end":8672931,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11587},{"krate":0,"index":11584},{"krate":0,"index":11585},{"krate":0,"index":11586}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8672835,"byte_end":8672902,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8672820,"byte_end":8672834,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11619},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8672914,"byte_end":8672931,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"__ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::_::__ForEachConcurrent","value":"__ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11624},{"krate":0,"index":11625}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8672820,"byte_end":8672834,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8446},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":253032,"byte_end":253043,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8449},{"krate":0,"index":8448}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":252972,"byte_end":253020,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":252940,"byte_end":252954,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8469},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":253032,"byte_end":253043,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"__CatchUnwind","qualname":"::stream::stream::catch_unwind::_::__CatchUnwind","value":"__CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":8472},{"krate":0,"index":8473}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":252940,"byte_end":252954,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Trait","id":{"krate":0,"index":1781},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145477,"byte_end":145486,"line_start":202,"line_end":202,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1814},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1854}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145366,"byte_end":145440,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145441,"byte_end":145466,"line_start":201,"line_end":201,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146396,"byte_end":146400,"line_start":226,"line_end":226,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145501,"byte_end":145567,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145572,"byte_end":145575,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145580,"byte_end":145648,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145653,"byte_end":145728,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145733,"byte_end":145808,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145813,"byte_end":145867,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145872,"byte_end":145947,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145952,"byte_end":145962,"line_start":210,"line_end":210,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145967,"byte_end":145970,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145975,"byte_end":145989,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145994,"byte_end":145997,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146002,"byte_end":146009,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146014,"byte_end":146055,"line_start":215,"line_end":215,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146060,"byte_end":146103,"line_start":216,"line_end":216,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146108,"byte_end":146111,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146116,"byte_end":146157,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146162,"byte_end":146165,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146170,"byte_end":146215,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146220,"byte_end":146265,"line_start":221,"line_end":221,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146270,"byte_end":146315,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146320,"byte_end":146362,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146367,"byte_end":146376,"line_start":224,"line_end":224,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146381,"byte_end":146388,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147639,"byte_end":147650,"line_start":261,"line_end":261,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146542,"byte_end":146614,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146619,"byte_end":146680,"line_start":234,"line_end":234,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146685,"byte_end":146688,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146693,"byte_end":146768,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146773,"byte_end":146827,"line_start":237,"line_end":237,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146832,"byte_end":146835,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146840,"byte_end":146913,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146918,"byte_end":146980,"line_start":240,"line_end":240,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":146985,"byte_end":147060,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147065,"byte_end":147119,"line_start":242,"line_end":242,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147124,"byte_end":147199,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147204,"byte_end":147214,"line_start":244,"line_end":244,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147219,"byte_end":147222,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147227,"byte_end":147241,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147246,"byte_end":147249,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147254,"byte_end":147261,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147266,"byte_end":147307,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147312,"byte_end":147355,"line_start":250,"line_end":250,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147360,"byte_end":147363,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147368,"byte_end":147405,"line_start":252,"line_end":252,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147410,"byte_end":147413,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147418,"byte_end":147470,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147475,"byte_end":147505,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147510,"byte_end":147513,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147518,"byte_end":147570,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147575,"byte_end":147605,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147610,"byte_end":147619,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147624,"byte_end":147631,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1784},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148651,"byte_end":148654,"line_start":291,"line_end":291,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147815,"byte_end":147890,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147895,"byte_end":147918,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147923,"byte_end":147926,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":147931,"byte_end":148003,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148008,"byte_end":148072,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148077,"byte_end":148114,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148119,"byte_end":148122,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148127,"byte_end":148203,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148208,"byte_end":148279,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148284,"byte_end":148305,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148310,"byte_end":148313,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148318,"byte_end":148332,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148337,"byte_end":148340,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148345,"byte_end":148352,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148357,"byte_end":148398,"line_start":282,"line_end":282,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148403,"byte_end":148446,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148451,"byte_end":148454,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148459,"byte_end":148496,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148501,"byte_end":148540,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148545,"byte_end":148548,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148553,"byte_end":148617,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148622,"byte_end":148631,"line_start":289,"line_end":289,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148636,"byte_end":148643,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150214,"byte_end":150223,"line_start":337,"line_end":337,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148821,"byte_end":148892,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148897,"byte_end":148916,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148921,"byte_end":148924,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148929,"byte_end":148994,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":148999,"byte_end":149068,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149073,"byte_end":149084,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149089,"byte_end":149092,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149097,"byte_end":149172,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149177,"byte_end":149259,"line_start":307,"line_end":307,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149264,"byte_end":149282,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149287,"byte_end":149290,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149295,"byte_end":149318,"line_start":310,"line_end":310,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149323,"byte_end":149326,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149331,"byte_end":149406,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149411,"byte_end":149498,"line_start":313,"line_end":313,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149503,"byte_end":149559,"line_start":314,"line_end":314,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149564,"byte_end":149567,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149572,"byte_end":149584,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149589,"byte_end":149592,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149597,"byte_end":149666,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149671,"byte_end":149696,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149701,"byte_end":149704,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149709,"byte_end":149723,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149728,"byte_end":149731,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149736,"byte_end":149743,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149748,"byte_end":149789,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149794,"byte_end":149837,"line_start":325,"line_end":325,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149842,"byte_end":149845,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149850,"byte_end":149901,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149906,"byte_end":149909,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149914,"byte_end":149954,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149959,"byte_end":149962,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":149967,"byte_end":150019,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150024,"byte_end":150076,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150081,"byte_end":150133,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150138,"byte_end":150180,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150185,"byte_end":150194,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150199,"byte_end":150206,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151452,"byte_end":151458,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150367,"byte_end":150439,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150444,"byte_end":150471,"line_start":345,"line_end":345,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150476,"byte_end":150479,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150484,"byte_end":150559,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150564,"byte_end":150635,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150640,"byte_end":150712,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150717,"byte_end":150791,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150796,"byte_end":150854,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150859,"byte_end":150862,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150867,"byte_end":150943,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":150948,"byte_end":151022,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151027,"byte_end":151048,"line_start":355,"line_end":355,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151053,"byte_end":151056,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151061,"byte_end":151075,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151080,"byte_end":151083,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151088,"byte_end":151095,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151100,"byte_end":151141,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151146,"byte_end":151170,"line_start":361,"line_end":361,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151175,"byte_end":151218,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151223,"byte_end":151226,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151231,"byte_end":151269,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151274,"byte_end":151335,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151340,"byte_end":151343,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151348,"byte_end":151418,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151423,"byte_end":151432,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151437,"byte_end":151444,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152783,"byte_end":152793,"line_start":404,"line_end":404,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151686,"byte_end":151761,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151766,"byte_end":151842,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151847,"byte_end":151850,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151855,"byte_end":151930,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":151935,"byte_end":152010,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152015,"byte_end":152091,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152096,"byte_end":152161,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152166,"byte_end":152169,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152174,"byte_end":152250,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152255,"byte_end":152329,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152334,"byte_end":152359,"line_start":389,"line_end":389,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152364,"byte_end":152367,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152372,"byte_end":152386,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152391,"byte_end":152398,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152403,"byte_end":152444,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152449,"byte_end":152492,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152497,"byte_end":152500,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152505,"byte_end":152543,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152548,"byte_end":152598,"line_start":397,"line_end":397,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152603,"byte_end":152654,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152659,"byte_end":152666,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152671,"byte_end":152674,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152679,"byte_end":152749,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152754,"byte_end":152763,"line_start":402,"line_end":402,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":152768,"byte_end":152775,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153822,"byte_end":153826,"line_start":435,"line_end":435,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153025,"byte_end":153098,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153103,"byte_end":153131,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153136,"byte_end":153139,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153144,"byte_end":153218,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153223,"byte_end":153290,"line_start":417,"line_end":417,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153295,"byte_end":153340,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153345,"byte_end":153348,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153353,"byte_end":153429,"line_start":420,"line_end":420,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153434,"byte_end":153460,"line_start":421,"line_end":421,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153465,"byte_end":153468,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153473,"byte_end":153487,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153492,"byte_end":153495,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153500,"byte_end":153507,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153512,"byte_end":153553,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153558,"byte_end":153601,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153606,"byte_end":153609,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153614,"byte_end":153651,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153656,"byte_end":153711,"line_start":430,"line_end":430,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153716,"byte_end":153719,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153724,"byte_end":153788,"line_start":432,"line_end":432,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153793,"byte_end":153802,"line_start":433,"line_end":433,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":153807,"byte_end":153814,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154760,"byte_end":154767,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154035,"byte_end":154089,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154094,"byte_end":154149,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154154,"byte_end":154157,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154162,"byte_end":154230,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154235,"byte_end":154238,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154243,"byte_end":154257,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154262,"byte_end":154265,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154270,"byte_end":154277,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154282,"byte_end":154323,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154328,"byte_end":154359,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154364,"byte_end":154399,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154404,"byte_end":154424,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154429,"byte_end":154432,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154437,"byte_end":154474,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154479,"byte_end":154482,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154487,"byte_end":154514,"line_start":459,"line_end":459,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154519,"byte_end":154543,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154548,"byte_end":154590,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154595,"byte_end":154604,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154609,"byte_end":154616,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154621,"byte_end":154624,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154629,"byte_end":154677,"line_start":465,"line_end":465,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154682,"byte_end":154726,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154731,"byte_end":154740,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154745,"byte_end":154752,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155960,"byte_end":155966,"line_start":508,"line_end":508,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154925,"byte_end":154987,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":154992,"byte_end":155056,"line_start":477,"line_end":477,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155061,"byte_end":155064,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155069,"byte_end":155133,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155138,"byte_end":155203,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155208,"byte_end":155254,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155259,"byte_end":155262,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155267,"byte_end":155316,"line_start":483,"line_end":483,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155321,"byte_end":155361,"line_start":484,"line_end":484,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155366,"byte_end":155369,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155374,"byte_end":155388,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155393,"byte_end":155396,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155401,"byte_end":155408,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155413,"byte_end":155454,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155459,"byte_end":155490,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155495,"byte_end":155530,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155535,"byte_end":155555,"line_start":492,"line_end":492,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155560,"byte_end":155563,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155568,"byte_end":155605,"line_start":494,"line_end":494,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155610,"byte_end":155613,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155618,"byte_end":155645,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155650,"byte_end":155681,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155686,"byte_end":155712,"line_start":498,"line_end":498,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155717,"byte_end":155783,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155788,"byte_end":155797,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155802,"byte_end":155809,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155814,"byte_end":155817,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155822,"byte_end":155857,"line_start":503,"line_end":503,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155862,"byte_end":155865,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155870,"byte_end":155926,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155931,"byte_end":155940,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":155945,"byte_end":155952,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157011,"byte_end":157015,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156196,"byte_end":156263,"line_start":516,"line_end":516,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156268,"byte_end":156320,"line_start":517,"line_end":517,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156325,"byte_end":156328,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156333,"byte_end":156403,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156408,"byte_end":156484,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156489,"byte_end":156565,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156570,"byte_end":156640,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156645,"byte_end":156671,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156676,"byte_end":156679,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156684,"byte_end":156698,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156703,"byte_end":156706,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156711,"byte_end":156718,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156723,"byte_end":156764,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156769,"byte_end":156812,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156817,"byte_end":156820,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156825,"byte_end":156868,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156873,"byte_end":156942,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156947,"byte_end":156977,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156982,"byte_end":156991,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":156996,"byte_end":157003,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158209,"byte_end":158216,"line_start":576,"line_end":576,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157250,"byte_end":157315,"line_start":545,"line_end":545,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157320,"byte_end":157323,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157328,"byte_end":157342,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157347,"byte_end":157350,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157355,"byte_end":157362,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157367,"byte_end":157408,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157413,"byte_end":157444,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157449,"byte_end":157484,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157489,"byte_end":157509,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157514,"byte_end":157517,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157522,"byte_end":157561,"line_start":555,"line_end":555,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157566,"byte_end":157605,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157610,"byte_end":157649,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157654,"byte_end":157657,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157662,"byte_end":157689,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157694,"byte_end":157733,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157738,"byte_end":157777,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157782,"byte_end":157789,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157794,"byte_end":157821,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157826,"byte_end":157865,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157870,"byte_end":157909,"line_start":565,"line_end":565,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157914,"byte_end":157921,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157926,"byte_end":157953,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":157958,"byte_end":157999,"line_start":568,"line_end":568,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158004,"byte_end":158045,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158050,"byte_end":158057,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158062,"byte_end":158065,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158070,"byte_end":158129,"line_start":572,"line_end":572,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158134,"byte_end":158175,"line_start":573,"line_end":573,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158180,"byte_end":158189,"line_start":574,"line_end":574,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158194,"byte_end":158201,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159478,"byte_end":159486,"line_start":609,"line_end":609,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158393,"byte_end":158465,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158470,"byte_end":158473,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158478,"byte_end":158555,"line_start":586,"line_end":586,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158560,"byte_end":158635,"line_start":587,"line_end":587,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158640,"byte_end":158716,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158721,"byte_end":158724,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158729,"byte_end":158811,"line_start":590,"line_end":590,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158816,"byte_end":158899,"line_start":591,"line_end":591,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158904,"byte_end":158907,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158912,"byte_end":158988,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":158993,"byte_end":159069,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159074,"byte_end":159095,"line_start":595,"line_end":595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159100,"byte_end":159103,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159108,"byte_end":159122,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159127,"byte_end":159130,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159135,"byte_end":159142,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159147,"byte_end":159188,"line_start":600,"line_end":600,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159193,"byte_end":159236,"line_start":601,"line_end":601,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159241,"byte_end":159244,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159249,"byte_end":159286,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159291,"byte_end":159358,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159363,"byte_end":159366,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159371,"byte_end":159444,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159449,"byte_end":159458,"line_start":607,"line_end":607,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159463,"byte_end":159470,"line_start":608,"line_end":608,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160469,"byte_end":160473,"line_start":642,"line_end":642,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159660,"byte_end":159731,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159736,"byte_end":159766,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159771,"byte_end":159774,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159779,"byte_end":159854,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159859,"byte_end":159930,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159935,"byte_end":159975,"line_start":623,"line_end":623,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159980,"byte_end":159983,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":159988,"byte_end":160002,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160007,"byte_end":160010,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160015,"byte_end":160022,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160027,"byte_end":160068,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160073,"byte_end":160097,"line_start":629,"line_end":629,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160102,"byte_end":160145,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160150,"byte_end":160153,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160158,"byte_end":160196,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160201,"byte_end":160204,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160209,"byte_end":160253,"line_start":634,"line_end":634,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160258,"byte_end":160278,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160283,"byte_end":160346,"line_start":636,"line_end":636,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160351,"byte_end":160358,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160363,"byte_end":160366,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160371,"byte_end":160435,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160440,"byte_end":160449,"line_start":640,"line_end":640,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160454,"byte_end":160461,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161497,"byte_end":161507,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160719,"byte_end":160793,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160798,"byte_end":160821,"line_start":652,"line_end":652,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160826,"byte_end":160829,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160834,"byte_end":160907,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160912,"byte_end":160984,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":160989,"byte_end":161066,"line_start":656,"line_end":656,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161071,"byte_end":161082,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161087,"byte_end":161090,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161095,"byte_end":161109,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161114,"byte_end":161117,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161122,"byte_end":161129,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161134,"byte_end":161175,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161180,"byte_end":161204,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161209,"byte_end":161252,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161257,"byte_end":161260,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161265,"byte_end":161303,"line_start":666,"line_end":666,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161308,"byte_end":161311,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161316,"byte_end":161379,"line_start":668,"line_end":668,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161384,"byte_end":161387,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161392,"byte_end":161463,"line_start":670,"line_end":670,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161468,"byte_end":161477,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161482,"byte_end":161489,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162496,"byte_end":162506,"line_start":703,"line_end":703,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161741,"byte_end":161817,"line_start":682,"line_end":682,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161822,"byte_end":161845,"line_start":683,"line_end":683,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161850,"byte_end":161853,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161858,"byte_end":161933,"line_start":685,"line_end":685,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":161938,"byte_end":162010,"line_start":686,"line_end":686,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162015,"byte_end":162082,"line_start":687,"line_end":687,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162087,"byte_end":162090,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162095,"byte_end":162109,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162114,"byte_end":162117,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162122,"byte_end":162129,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162134,"byte_end":162175,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162180,"byte_end":162204,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162209,"byte_end":162252,"line_start":694,"line_end":694,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162257,"byte_end":162260,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162265,"byte_end":162303,"line_start":696,"line_end":696,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162308,"byte_end":162311,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162316,"byte_end":162379,"line_start":698,"line_end":698,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162384,"byte_end":162387,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162392,"byte_end":162462,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162467,"byte_end":162476,"line_start":701,"line_end":701,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162481,"byte_end":162488,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164022,"byte_end":164032,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162740,"byte_end":162810,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162815,"byte_end":162818,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162823,"byte_end":162894,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162899,"byte_end":162971,"line_start":715,"line_end":715,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":162976,"byte_end":163046,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163051,"byte_end":163054,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163059,"byte_end":163130,"line_start":718,"line_end":718,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163135,"byte_end":163221,"line_start":719,"line_end":719,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163226,"byte_end":163293,"line_start":720,"line_end":720,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163298,"byte_end":163362,"line_start":721,"line_end":721,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163367,"byte_end":163370,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163375,"byte_end":163389,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163394,"byte_end":163397,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163402,"byte_end":163409,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163414,"byte_end":163455,"line_start":726,"line_end":726,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163460,"byte_end":163484,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163489,"byte_end":163532,"line_start":728,"line_end":728,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163537,"byte_end":163565,"line_start":729,"line_end":729,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163570,"byte_end":163573,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163578,"byte_end":163616,"line_start":731,"line_end":731,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163621,"byte_end":163624,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163629,"byte_end":163647,"line_start":733,"line_end":733,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163652,"byte_end":163694,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163699,"byte_end":163714,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163719,"byte_end":163738,"line_start":736,"line_end":736,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163743,"byte_end":163768,"line_start":737,"line_end":737,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163773,"byte_end":163789,"line_start":738,"line_end":738,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163794,"byte_end":163821,"line_start":739,"line_end":739,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163826,"byte_end":163835,"line_start":740,"line_end":740,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163840,"byte_end":163847,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163852,"byte_end":163855,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163860,"byte_end":163905,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163910,"byte_end":163913,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163918,"byte_end":163988,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":163993,"byte_end":164002,"line_start":746,"line_end":746,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164007,"byte_end":164014,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165239,"byte_end":165247,"line_start":789,"line_end":789,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164181,"byte_end":164252,"line_start":756,"line_end":756,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164257,"byte_end":164300,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164305,"byte_end":164308,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164313,"byte_end":164388,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164393,"byte_end":164463,"line_start":760,"line_end":760,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164468,"byte_end":164506,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164511,"byte_end":164514,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164519,"byte_end":164594,"line_start":763,"line_end":763,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164599,"byte_end":164642,"line_start":764,"line_end":764,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164647,"byte_end":164650,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164655,"byte_end":164728,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164733,"byte_end":164776,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164781,"byte_end":164784,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164789,"byte_end":164803,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164808,"byte_end":164811,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164816,"byte_end":164823,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164828,"byte_end":164869,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164874,"byte_end":164898,"line_start":773,"line_end":773,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164903,"byte_end":164946,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164951,"byte_end":164954,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164959,"byte_end":164977,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164982,"byte_end":164985,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":164990,"byte_end":164995,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165000,"byte_end":165061,"line_start":779,"line_end":779,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165066,"byte_end":165088,"line_start":780,"line_end":780,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165093,"byte_end":165122,"line_start":781,"line_end":781,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165127,"byte_end":165138,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165143,"byte_end":165161,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165166,"byte_end":165171,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165176,"byte_end":165179,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165184,"byte_end":165205,"line_start":786,"line_end":786,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165210,"byte_end":165219,"line_start":787,"line_end":787,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165224,"byte_end":165231,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167453,"byte_end":167472,"line_start":845,"line_end":845,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"pub fn for_each_concurrent<Fut, F,\n                           impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                          impl Into<Option<usize>>,\n                                                                          F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165466,"byte_end":165537,"line_start":798,"line_end":798,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165542,"byte_end":165616,"line_start":799,"line_end":799,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165621,"byte_end":165635,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165640,"byte_end":165643,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165648,"byte_end":165711,"line_start":802,"line_end":802,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165716,"byte_end":165787,"line_start":803,"line_end":803,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165792,"byte_end":165844,"line_start":804,"line_end":804,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165849,"byte_end":165852,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165857,"byte_end":165932,"line_start":806,"line_end":806,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":165937,"byte_end":166007,"line_start":807,"line_end":807,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166012,"byte_end":166076,"line_start":808,"line_end":808,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166081,"byte_end":166084,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166089,"byte_end":166160,"line_start":810,"line_end":810,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166165,"byte_end":166235,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166240,"byte_end":166301,"line_start":812,"line_end":812,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166306,"byte_end":166373,"line_start":813,"line_end":813,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166378,"byte_end":166447,"line_start":814,"line_end":814,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166452,"byte_end":166524,"line_start":815,"line_end":815,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166529,"byte_end":166532,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166537,"byte_end":166612,"line_start":817,"line_end":817,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166617,"byte_end":166674,"line_start":818,"line_end":818,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166679,"byte_end":166682,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166687,"byte_end":166701,"line_start":820,"line_end":820,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166706,"byte_end":166709,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166714,"byte_end":166721,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166726,"byte_end":166767,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166772,"byte_end":166806,"line_start":824,"line_end":824,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166811,"byte_end":166854,"line_start":825,"line_end":825,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166859,"byte_end":166862,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166867,"byte_end":166907,"line_start":827,"line_end":827,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166912,"byte_end":166952,"line_start":828,"line_end":828,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":166957,"byte_end":166997,"line_start":829,"line_end":829,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167002,"byte_end":167005,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167010,"byte_end":167078,"line_start":831,"line_end":831,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167083,"byte_end":167105,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167110,"byte_end":167135,"line_start":833,"line_end":833,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167140,"byte_end":167170,"line_start":834,"line_end":834,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167175,"byte_end":167184,"line_start":835,"line_end":835,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167189,"byte_end":167195,"line_start":836,"line_end":836,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167200,"byte_end":167226,"line_start":837,"line_end":837,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167231,"byte_end":167257,"line_start":838,"line_end":838,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167262,"byte_end":167288,"line_start":839,"line_end":839,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167293,"byte_end":167307,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167312,"byte_end":167320,"line_start":841,"line_end":841,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167325,"byte_end":167332,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167420,"byte_end":167445,"line_start":844,"line_end":844,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168297,"byte_end":168301,"line_start":874,"line_end":874,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167789,"byte_end":167860,"line_start":858,"line_end":858,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167865,"byte_end":167868,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167873,"byte_end":167946,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167951,"byte_end":167986,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167991,"byte_end":167994,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":167999,"byte_end":168013,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168018,"byte_end":168021,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168026,"byte_end":168033,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168038,"byte_end":168079,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168084,"byte_end":168127,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168132,"byte_end":168135,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168140,"byte_end":168186,"line_start":869,"line_end":869,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168191,"byte_end":168194,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168199,"byte_end":168263,"line_start":871,"line_end":871,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168268,"byte_end":168277,"line_start":872,"line_end":872,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168282,"byte_end":168289,"line_start":873,"line_end":873,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168966,"byte_end":168970,"line_start":897,"line_end":897,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168439,"byte_end":168511,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168516,"byte_end":168519,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168524,"byte_end":168597,"line_start":883,"line_end":883,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168602,"byte_end":168648,"line_start":884,"line_end":884,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168653,"byte_end":168656,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168661,"byte_end":168675,"line_start":886,"line_end":886,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168680,"byte_end":168683,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168688,"byte_end":168695,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168700,"byte_end":168741,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168746,"byte_end":168789,"line_start":890,"line_end":890,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168794,"byte_end":168797,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168802,"byte_end":168848,"line_start":892,"line_end":892,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168853,"byte_end":168856,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168861,"byte_end":168932,"line_start":894,"line_end":894,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168937,"byte_end":168946,"line_start":895,"line_end":895,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":168951,"byte_end":168958,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170591,"byte_end":170595,"line_start":943,"line_end":943,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169108,"byte_end":169179,"line_start":904,"line_end":904,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169184,"byte_end":169257,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169262,"byte_end":169300,"line_start":906,"line_end":906,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169305,"byte_end":169308,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169313,"byte_end":169367,"line_start":908,"line_end":908,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169372,"byte_end":169444,"line_start":909,"line_end":909,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169449,"byte_end":169525,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169530,"byte_end":169598,"line_start":911,"line_end":911,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169603,"byte_end":169679,"line_start":912,"line_end":912,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169684,"byte_end":169706,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169711,"byte_end":169714,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169719,"byte_end":169786,"line_start":915,"line_end":915,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169791,"byte_end":169859,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169864,"byte_end":169877,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169882,"byte_end":169885,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169890,"byte_end":169904,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169909,"byte_end":169912,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169917,"byte_end":169924,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169929,"byte_end":169972,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":169977,"byte_end":170020,"line_start":923,"line_end":923,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170025,"byte_end":170053,"line_start":924,"line_end":924,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170058,"byte_end":170061,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170066,"byte_end":170084,"line_start":926,"line_end":926,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170089,"byte_end":170127,"line_start":927,"line_end":927,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170132,"byte_end":170147,"line_start":928,"line_end":928,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170152,"byte_end":170169,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170174,"byte_end":170216,"line_start":930,"line_end":930,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170221,"byte_end":170256,"line_start":931,"line_end":931,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170261,"byte_end":170305,"line_start":932,"line_end":932,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170310,"byte_end":170319,"line_start":933,"line_end":933,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170324,"byte_end":170338,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170343,"byte_end":170346,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170351,"byte_end":170394,"line_start":936,"line_end":936,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170399,"byte_end":170436,"line_start":937,"line_end":937,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170441,"byte_end":170478,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170483,"byte_end":170517,"line_start":939,"line_end":939,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170522,"byte_end":170556,"line_start":940,"line_end":940,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170561,"byte_end":170571,"line_start":941,"line_end":941,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170576,"byte_end":170583,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171524,"byte_end":171530,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170720,"byte_end":170767,"line_start":950,"line_end":950,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170772,"byte_end":170775,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170780,"byte_end":170854,"line_start":952,"line_end":952,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170859,"byte_end":170896,"line_start":953,"line_end":953,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170901,"byte_end":170904,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170909,"byte_end":170923,"line_start":955,"line_end":955,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170928,"byte_end":170931,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170936,"byte_end":170943,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170948,"byte_end":170989,"line_start":958,"line_end":958,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":170994,"byte_end":171037,"line_start":959,"line_end":959,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171042,"byte_end":171045,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171050,"byte_end":171090,"line_start":961,"line_end":961,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171095,"byte_end":171098,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171103,"byte_end":171132,"line_start":963,"line_end":963,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171137,"byte_end":171165,"line_start":964,"line_end":964,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171170,"byte_end":171227,"line_start":965,"line_end":965,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171232,"byte_end":171259,"line_start":966,"line_end":966,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171264,"byte_end":171287,"line_start":967,"line_end":967,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171292,"byte_end":171295,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171300,"byte_end":171335,"line_start":969,"line_end":969,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171340,"byte_end":171368,"line_start":970,"line_end":970,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171373,"byte_end":171430,"line_start":971,"line_end":971,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171435,"byte_end":171462,"line_start":972,"line_end":972,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171467,"byte_end":171490,"line_start":973,"line_end":973,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171495,"byte_end":171504,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171509,"byte_end":171516,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173289,"byte_end":173301,"line_start":1021,"line_end":1021,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"pub fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171581,"byte_end":171635,"line_start":980,"line_end":980,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171640,"byte_end":171643,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171648,"byte_end":171723,"line_start":982,"line_end":982,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171728,"byte_end":171731,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171736,"byte_end":171811,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171816,"byte_end":171890,"line_start":985,"line_end":985,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171895,"byte_end":171969,"line_start":986,"line_end":986,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":171974,"byte_end":172023,"line_start":987,"line_end":987,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172028,"byte_end":172031,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172036,"byte_end":172111,"line_start":989,"line_end":989,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172116,"byte_end":172186,"line_start":990,"line_end":990,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172191,"byte_end":172258,"line_start":991,"line_end":991,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172263,"byte_end":172335,"line_start":992,"line_end":992,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172340,"byte_end":172409,"line_start":993,"line_end":993,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172414,"byte_end":172429,"line_start":994,"line_end":994,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172434,"byte_end":172437,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172442,"byte_end":172506,"line_start":996,"line_end":996,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172511,"byte_end":172568,"line_start":997,"line_end":997,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172573,"byte_end":172576,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172581,"byte_end":172595,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172600,"byte_end":172603,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172608,"byte_end":172615,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172620,"byte_end":172661,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172666,"byte_end":172709,"line_start":1003,"line_end":1003,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172714,"byte_end":172717,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172722,"byte_end":172784,"line_start":1005,"line_end":1005,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172789,"byte_end":172819,"line_start":1006,"line_end":1006,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172824,"byte_end":172878,"line_start":1007,"line_end":1007,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172883,"byte_end":172913,"line_start":1008,"line_end":1008,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172918,"byte_end":172967,"line_start":1009,"line_end":1009,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172972,"byte_end":172975,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":172980,"byte_end":173042,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173047,"byte_end":173069,"line_start":1012,"line_end":1012,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173074,"byte_end":173094,"line_start":1013,"line_end":1013,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173099,"byte_end":173141,"line_start":1014,"line_end":1014,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173146,"byte_end":173151,"line_start":1015,"line_end":1015,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173156,"byte_end":173189,"line_start":1016,"line_end":1016,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173194,"byte_end":173227,"line_start":1017,"line_end":1017,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173232,"byte_end":173241,"line_start":1018,"line_end":1018,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173246,"byte_end":173253,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173258,"byte_end":173281,"line_start":1020,"line_end":1020,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173677,"byte_end":173682,"line_start":1033,"line_end":1033,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"pub fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173448,"byte_end":173489,"line_start":1028,"line_end":1028,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173494,"byte_end":173497,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173502,"byte_end":173577,"line_start":1030,"line_end":1030,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173582,"byte_end":173639,"line_start":1031,"line_end":1031,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173644,"byte_end":173669,"line_start":1032,"line_end":1032,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174138,"byte_end":174149,"line_start":1047,"line_end":1047,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"pub fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173837,"byte_end":173878,"line_start":1040,"line_end":1040,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173883,"byte_end":173886,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173891,"byte_end":173950,"line_start":1042,"line_end":1042,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173955,"byte_end":173958,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":173963,"byte_end":174038,"line_start":1044,"line_end":1044,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174043,"byte_end":174100,"line_start":1045,"line_end":1045,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174105,"byte_end":174130,"line_start":1046,"line_end":1046,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175086,"byte_end":175094,"line_start":1068,"line_end":1068,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"pub fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174302,"byte_end":174365,"line_start":1054,"line_end":1054,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174370,"byte_end":174373,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174378,"byte_end":174453,"line_start":1056,"line_end":1056,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174458,"byte_end":174534,"line_start":1057,"line_end":1057,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174539,"byte_end":174612,"line_start":1058,"line_end":1058,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174617,"byte_end":174690,"line_start":1059,"line_end":1059,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174695,"byte_end":174737,"line_start":1060,"line_end":1060,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174742,"byte_end":174745,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174750,"byte_end":174815,"line_start":1062,"line_end":1062,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174820,"byte_end":174823,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174828,"byte_end":174903,"line_start":1064,"line_end":1064,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":174908,"byte_end":174965,"line_start":1065,"line_end":1065,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175053,"byte_end":175078,"line_start":1067,"line_end":1067,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1839},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176818,"byte_end":176834,"line_start":1113,"line_end":1113,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"pub fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175288,"byte_end":175363,"line_start":1076,"line_end":1076,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175368,"byte_end":175371,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175376,"byte_end":175451,"line_start":1078,"line_end":1078,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175456,"byte_end":175530,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175535,"byte_end":175607,"line_start":1080,"line_end":1080,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175612,"byte_end":175686,"line_start":1081,"line_end":1081,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175691,"byte_end":175720,"line_start":1082,"line_end":1082,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175725,"byte_end":175728,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175733,"byte_end":175798,"line_start":1084,"line_end":1084,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175803,"byte_end":175806,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175811,"byte_end":175886,"line_start":1086,"line_end":1086,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175891,"byte_end":175948,"line_start":1087,"line_end":1087,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175953,"byte_end":175956,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175961,"byte_end":175975,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175980,"byte_end":175983,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":175988,"byte_end":175995,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176000,"byte_end":176041,"line_start":1092,"line_end":1092,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176046,"byte_end":176080,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176085,"byte_end":176128,"line_start":1094,"line_end":1094,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176133,"byte_end":176136,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176141,"byte_end":176191,"line_start":1096,"line_end":1096,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176196,"byte_end":176246,"line_start":1097,"line_end":1097,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176251,"byte_end":176254,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176259,"byte_end":176326,"line_start":1099,"line_end":1099,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176331,"byte_end":176393,"line_start":1100,"line_end":1100,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176398,"byte_end":176401,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176406,"byte_end":176431,"line_start":1102,"line_end":1102,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176436,"byte_end":176490,"line_start":1103,"line_end":1103,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176495,"byte_end":176498,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176503,"byte_end":176528,"line_start":1105,"line_end":1105,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176533,"byte_end":176587,"line_start":1106,"line_end":1106,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176592,"byte_end":176595,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176600,"byte_end":176644,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176649,"byte_end":176685,"line_start":1109,"line_end":1109,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176690,"byte_end":176697,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":176785,"byte_end":176810,"line_start":1112,"line_end":1112,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177730,"byte_end":177733,"line_start":1143,"line_end":1143,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177042,"byte_end":177090,"line_start":1121,"line_end":1121,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177095,"byte_end":177098,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177103,"byte_end":177176,"line_start":1123,"line_end":1123,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177181,"byte_end":177253,"line_start":1124,"line_end":1124,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177258,"byte_end":177271,"line_start":1125,"line_end":1125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177276,"byte_end":177279,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177284,"byte_end":177298,"line_start":1127,"line_end":1127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177303,"byte_end":177306,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177311,"byte_end":177318,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177323,"byte_end":177364,"line_start":1130,"line_end":1130,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177369,"byte_end":177412,"line_start":1131,"line_end":1131,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177417,"byte_end":177420,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177425,"byte_end":177463,"line_start":1133,"line_end":1133,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177468,"byte_end":177507,"line_start":1134,"line_end":1134,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177512,"byte_end":177515,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177520,"byte_end":177554,"line_start":1136,"line_end":1136,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177559,"byte_end":177600,"line_start":1137,"line_end":1137,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177605,"byte_end":177633,"line_start":1138,"line_end":1138,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177638,"byte_end":177688,"line_start":1139,"line_end":1139,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177693,"byte_end":177702,"line_start":1140,"line_end":1140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177707,"byte_end":177714,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177719,"byte_end":177722,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178641,"byte_end":178646,"line_start":1174,"line_end":1174,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177914,"byte_end":177951,"line_start":1151,"line_end":1151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177956,"byte_end":177959,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":177964,"byte_end":178035,"line_start":1153,"line_end":1153,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178040,"byte_end":178116,"line_start":1154,"line_end":1154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178121,"byte_end":178124,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178129,"byte_end":178136,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178141,"byte_end":178182,"line_start":1157,"line_end":1157,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178187,"byte_end":178230,"line_start":1158,"line_end":1158,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178235,"byte_end":178238,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178243,"byte_end":178300,"line_start":1160,"line_end":1160,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178305,"byte_end":178361,"line_start":1161,"line_end":1161,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178366,"byte_end":178369,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178374,"byte_end":178414,"line_start":1163,"line_end":1163,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178419,"byte_end":178422,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178427,"byte_end":178475,"line_start":1165,"line_end":1165,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178480,"byte_end":178508,"line_start":1166,"line_end":1166,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178513,"byte_end":178528,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178533,"byte_end":178552,"line_start":1168,"line_end":1168,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178557,"byte_end":178575,"line_start":1169,"line_end":1169,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178580,"byte_end":178595,"line_start":1170,"line_end":1170,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178600,"byte_end":178607,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178612,"byte_end":178621,"line_start":1172,"line_end":1172,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178626,"byte_end":178633,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178984,"byte_end":178992,"line_start":1185,"line_end":1185,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178838,"byte_end":178893,"line_start":1182,"line_end":1182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178898,"byte_end":178901,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":178906,"byte_end":178976,"line_start":1184,"line_end":1184,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1845},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180027,"byte_end":180033,"line_start":1211,"line_end":1211,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"pub fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179125,"byte_end":179192,"line_start":1192,"line_end":1192,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179197,"byte_end":179200,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179205,"byte_end":179279,"line_start":1194,"line_end":1194,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179284,"byte_end":179356,"line_start":1195,"line_end":1195,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179361,"byte_end":179413,"line_start":1196,"line_end":1196,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179418,"byte_end":179421,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179426,"byte_end":179499,"line_start":1198,"line_end":1198,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179504,"byte_end":179578,"line_start":1199,"line_end":1199,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179583,"byte_end":179658,"line_start":1200,"line_end":1200,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179663,"byte_end":179735,"line_start":1201,"line_end":1201,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179740,"byte_end":179752,"line_start":1202,"line_end":1202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179757,"byte_end":179760,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179765,"byte_end":179840,"line_start":1204,"line_end":1204,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179845,"byte_end":179902,"line_start":1205,"line_end":1205,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179907,"byte_end":179910,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179915,"byte_end":179927,"line_start":1207,"line_end":1207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179932,"byte_end":179935,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179940,"byte_end":179989,"line_start":1209,"line_end":1209,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":179994,"byte_end":180019,"line_start":1210,"line_end":1210,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181142,"byte_end":181154,"line_start":1237,"line_end":1237,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"pub fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180206,"byte_end":180279,"line_start":1218,"line_end":1218,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180284,"byte_end":180287,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180292,"byte_end":180365,"line_start":1220,"line_end":1220,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180370,"byte_end":180440,"line_start":1221,"line_end":1221,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180445,"byte_end":180520,"line_start":1222,"line_end":1222,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180525,"byte_end":180602,"line_start":1223,"line_end":1223,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180607,"byte_end":180635,"line_start":1224,"line_end":1224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180640,"byte_end":180643,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180648,"byte_end":180721,"line_start":1226,"line_end":1226,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180726,"byte_end":180801,"line_start":1227,"line_end":1227,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180806,"byte_end":180867,"line_start":1228,"line_end":1228,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180872,"byte_end":180875,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180880,"byte_end":180955,"line_start":1230,"line_end":1230,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":180960,"byte_end":181017,"line_start":1231,"line_end":1231,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181022,"byte_end":181025,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181030,"byte_end":181042,"line_start":1233,"line_end":1233,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181047,"byte_end":181050,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181055,"byte_end":181104,"line_start":1235,"line_end":1235,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":181109,"byte_end":181134,"line_start":1236,"line_end":1236,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183384,"byte_end":183391,"line_start":1290,"line_end":1290,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183081,"byte_end":183154,"line_start":1285,"line_end":1285,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183159,"byte_end":183162,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183167,"byte_end":183236,"line_start":1287,"line_end":1287,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183241,"byte_end":183310,"line_start":1288,"line_end":1288,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183315,"byte_end":183376,"line_start":1289,"line_end":1289,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183847,"byte_end":183858,"line_start":1303,"line_end":1303,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183568,"byte_end":183643,"line_start":1298,"line_end":1298,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183648,"byte_end":183669,"line_start":1299,"line_end":1299,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183674,"byte_end":183677,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183682,"byte_end":183762,"line_start":1301,"line_end":1301,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":183767,"byte_end":183839,"line_start":1302,"line_end":1302,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184311,"byte_end":184323,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184032,"byte_end":184108,"line_start":1311,"line_end":1311,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184113,"byte_end":184134,"line_start":1312,"line_end":1312,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184139,"byte_end":184142,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184147,"byte_end":184226,"line_start":1314,"line_end":1314,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184231,"byte_end":184303,"line_start":1315,"line_end":1315,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184599,"byte_end":184614,"line_start":1326,"line_end":1326,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184498,"byte_end":184569,"line_start":1324,"line_end":1324,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184574,"byte_end":184591,"line_start":1325,"line_end":1325,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186715,"byte_end":186731,"line_start":1381,"line_end":1381,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1781},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184761,"byte_end":184836,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184841,"byte_end":184851,"line_start":1334,"line_end":1334,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184856,"byte_end":184859,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184864,"byte_end":184937,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":184942,"byte_end":185010,"line_start":1337,"line_end":1337,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185015,"byte_end":185063,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185068,"byte_end":185143,"line_start":1339,"line_end":1339,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185148,"byte_end":185224,"line_start":1340,"line_end":1340,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185229,"byte_end":185255,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185260,"byte_end":185263,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185268,"byte_end":185341,"line_start":1343,"line_end":1343,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185346,"byte_end":185416,"line_start":1344,"line_end":1344,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185421,"byte_end":185461,"line_start":1345,"line_end":1345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185466,"byte_end":185469,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185474,"byte_end":185528,"line_start":1347,"line_end":1347,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185533,"byte_end":185617,"line_start":1348,"line_end":1348,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185622,"byte_end":185625,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185630,"byte_end":185644,"line_start":1350,"line_end":1350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185649,"byte_end":185652,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185657,"byte_end":185664,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185669,"byte_end":185710,"line_start":1353,"line_end":1353,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185715,"byte_end":185749,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185754,"byte_end":185809,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185814,"byte_end":185817,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185822,"byte_end":185857,"line_start":1357,"line_end":1357,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185862,"byte_end":185912,"line_start":1358,"line_end":1358,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185917,"byte_end":185939,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185944,"byte_end":185954,"line_start":1360,"line_end":1360,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185959,"byte_end":185976,"line_start":1361,"line_end":1361,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":185981,"byte_end":186007,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186012,"byte_end":186067,"line_start":1363,"line_end":1363,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186072,"byte_end":186101,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186106,"byte_end":186169,"line_start":1365,"line_end":1365,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186174,"byte_end":186220,"line_start":1366,"line_end":1366,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186225,"byte_end":186239,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186244,"byte_end":186313,"line_start":1368,"line_end":1368,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186318,"byte_end":186343,"line_start":1369,"line_end":1369,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186348,"byte_end":186401,"line_start":1370,"line_end":1370,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186406,"byte_end":186435,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186440,"byte_end":186453,"line_start":1372,"line_end":1372,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186458,"byte_end":186528,"line_start":1373,"line_end":1373,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186533,"byte_end":186592,"line_start":1374,"line_end":1374,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186597,"byte_end":186627,"line_start":1375,"line_end":1375,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186632,"byte_end":186641,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186646,"byte_end":186651,"line_start":1377,"line_end":1377,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186656,"byte_end":186681,"line_start":1378,"line_end":1378,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186686,"byte_end":186695,"line_start":1379,"line_end":1379,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":186700,"byte_end":186707,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8495},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":287768,"byte_end":287775,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8499}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":287708,"byte_end":287756,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":287693,"byte_end":287707,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8531},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":287768,"byte_end":287775,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":8536},{"krate":0,"index":8537},{"krate":0,"index":8538}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":287693,"byte_end":287707,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8568},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":8571}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8593},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":8597},{"krate":0,"index":8598}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8645},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":8648}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8670},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":8674},{"krate":0,"index":8675}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8722},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":8725}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8747},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":8751},{"krate":0,"index":8752}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8796},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290529,"byte_end":290539,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":8798}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290469,"byte_end":290517,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290437,"byte_end":290451,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8816},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290529,"byte_end":290539,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":8819},{"krate":0,"index":8820}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290437,"byte_end":290451,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8845},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":8848}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8870},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":8874},{"krate":0,"index":8875}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8922},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":8925}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8947},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":8951},{"krate":0,"index":8952}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":10907,"byte_end":10934,"line_start":292,"line_end":292,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":8996},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":291860,"byte_end":291866,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":9001},{"krate":0,"index":9002},{"krate":0,"index":9000}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":291800,"byte_end":291848,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":291785,"byte_end":291799,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9032},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":291860,"byte_end":291866,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":9037},{"krate":0,"index":9038},{"krate":0,"index":9039}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":291785,"byte_end":291799,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9066},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":294736,"byte_end":294743,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":9069}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":294569,"byte_end":294639,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":294657,"byte_end":294724,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9074},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":295812,"byte_end":295822,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":9079},{"krate":0,"index":9078},{"krate":0,"index":9080}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":295733,"byte_end":295800,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":295718,"byte_end":295732,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9110},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":295812,"byte_end":295822,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":9115},{"krate":0,"index":9116},{"krate":0,"index":9117}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":295718,"byte_end":295732,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9140},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":297717,"byte_end":297726,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":9146},{"krate":0,"index":9144},{"krate":0,"index":9147},{"krate":0,"index":9145}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":297657,"byte_end":297705,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":297642,"byte_end":297656,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9179},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":297717,"byte_end":297726,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":9184},{"krate":0,"index":9185},{"krate":0,"index":9186}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":297642,"byte_end":297656,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9213},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":300887,"byte_end":300899,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9218},{"krate":0,"index":9217},{"krate":0,"index":9219}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":300827,"byte_end":300875,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":300812,"byte_end":300826,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9249},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":300887,"byte_end":300899,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":9254},{"krate":0,"index":9255},{"krate":0,"index":9256}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":300812,"byte_end":300826,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9283},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":303856,"byte_end":303866,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9285},{"krate":0,"index":9286}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":303796,"byte_end":303844,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":303764,"byte_end":303778,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9306},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":303856,"byte_end":303866,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9309},{"krate":0,"index":9310},{"krate":0,"index":9311}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":303764,"byte_end":303778,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9333},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":305964,"byte_end":305974,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":9337},{"krate":0,"index":9336}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":305885,"byte_end":305952,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":305853,"byte_end":305867,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9361},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":305964,"byte_end":305974,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":9365},{"krate":0,"index":9366}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":305853,"byte_end":305867,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9389},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307334,"byte_end":307343,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":9392},{"krate":0,"index":9391}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307255,"byte_end":307322,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307223,"byte_end":307237,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9412},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307334,"byte_end":307343,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":9415},{"krate":0,"index":9416}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307223,"byte_end":307237,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9434},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":308744,"byte_end":308751,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":9441},{"krate":0,"index":9439},{"krate":0,"index":9440},{"krate":0,"index":9442}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":308665,"byte_end":308732,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":308650,"byte_end":308664,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9478},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":308744,"byte_end":308751,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":9484},{"krate":0,"index":9485},{"krate":0,"index":9486}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":308650,"byte_end":308664,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2244},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313215,"byte_end":313225,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311358,"byte_end":311434,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311435,"byte_end":311438,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311439,"byte_end":311515,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311516,"byte_end":311586,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311587,"byte_end":311646,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311647,"byte_end":311650,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311651,"byte_end":311729,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311730,"byte_end":311807,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311808,"byte_end":311872,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311873,"byte_end":311876,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311877,"byte_end":311949,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":311950,"byte_end":312028,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312029,"byte_end":312058,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312059,"byte_end":312062,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312063,"byte_end":312140,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312141,"byte_end":312205,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312206,"byte_end":312258,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312259,"byte_end":312262,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312263,"byte_end":312340,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312341,"byte_end":312413,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312414,"byte_end":312483,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312484,"byte_end":312562,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312563,"byte_end":312566,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312567,"byte_end":312580,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312581,"byte_end":312584,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312585,"byte_end":312592,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312593,"byte_end":312626,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312627,"byte_end":312650,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312651,"byte_end":312692,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312693,"byte_end":312739,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312740,"byte_end":312743,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312744,"byte_end":312803,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312804,"byte_end":312826,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312827,"byte_end":312861,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312862,"byte_end":312871,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312872,"byte_end":312875,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312876,"byte_end":312899,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312900,"byte_end":312939,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312940,"byte_end":312976,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":312977,"byte_end":313020,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313021,"byte_end":313037,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313038,"byte_end":313058,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313059,"byte_end":313068,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313069,"byte_end":313076,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313077,"byte_end":313080,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313081,"byte_end":313146,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313147,"byte_end":313189,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313190,"byte_end":313199,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313200,"byte_end":313207,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9513},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313559,"byte_end":313568,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9517},{"krate":0,"index":9518},{"krate":0,"index":9519}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313499,"byte_end":313547,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313484,"byte_end":313498,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9549},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313559,"byte_end":313568,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":9554},{"krate":0,"index":9555}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313484,"byte_end":313498,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9578},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":315470,"byte_end":315482,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9585},{"krate":0,"index":9582},{"krate":0,"index":9586},{"krate":0,"index":9583},{"krate":0,"index":9584}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":315410,"byte_end":315458,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":315395,"byte_end":315409,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9620},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":315470,"byte_end":315482,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":9625},{"krate":0,"index":9626},{"krate":0,"index":9627}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":315395,"byte_end":315409,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9654},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":319071,"byte_end":319083,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9661},{"krate":0,"index":9658},{"krate":0,"index":9662},{"krate":0,"index":9659},{"krate":0,"index":9660}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":319011,"byte_end":319059,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":318996,"byte_end":319010,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9696},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":319071,"byte_end":319083,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryTakeWhile","qualname":"::stream::try_stream::try_take_while::_::__TryTakeWhile","value":"__TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":9701},{"krate":0,"index":9702},{"krate":0,"index":9703}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":318996,"byte_end":319010,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11532},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8687905,"byte_end":8687923,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11536},{"krate":0,"index":11534},{"krate":0,"index":11535}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8687845,"byte_end":8687893,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8687813,"byte_end":8687827,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11558},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8687905,"byte_end":8687923,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"__TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::_::__TryBufferUnordered","value":"__TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":11561},{"krate":0,"index":11562}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8687813,"byte_end":8687827,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11464},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8690448,"byte_end":8690468,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11471},{"krate":0,"index":11468},{"krate":0,"index":11469},{"krate":0,"index":11470}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8690369,"byte_end":8690436,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8690354,"byte_end":8690368,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11503},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8690448,"byte_end":8690468,"line_start":16,"line_end":16,"column_start":12,"column_end":32},"name":"__TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::_::__TryForEachConcurrent","value":"__TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11508},{"krate":0,"index":11509}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8690354,"byte_end":8690368,"line_start":14,"line_end":14,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9799},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":322762,"byte_end":322775,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":9801},{"krate":0,"index":9802}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"/ Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":322554,"byte_end":322638,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":322656,"byte_end":322704,"line_start":11,"line_end":11,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2371},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259172,"byte_end":259184,"line_start":138,"line_end":138,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2395},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2410},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259110,"byte_end":259161,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259726,"byte_end":259734,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259202,"byte_end":259276,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259281,"byte_end":259307,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259312,"byte_end":259315,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259320,"byte_end":259334,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259339,"byte_end":259342,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259347,"byte_end":259354,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259359,"byte_end":259400,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259405,"byte_end":259451,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259456,"byte_end":259459,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259464,"byte_end":259484,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259489,"byte_end":259534,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259539,"byte_end":259570,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259575,"byte_end":259578,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259583,"byte_end":259637,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259642,"byte_end":259693,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259698,"byte_end":259706,"line_start":154,"line_end":154,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259711,"byte_end":259718,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260430,"byte_end":260436,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259910,"byte_end":259983,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259988,"byte_end":260019,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260024,"byte_end":260027,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260032,"byte_end":260046,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260051,"byte_end":260054,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260059,"byte_end":260066,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260071,"byte_end":260112,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260117,"byte_end":260163,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260168,"byte_end":260171,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260176,"byte_end":260196,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260201,"byte_end":260242,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260247,"byte_end":260278,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260283,"byte_end":260286,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260291,"byte_end":260344,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260349,"byte_end":260397,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260402,"byte_end":260410,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260415,"byte_end":260422,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261145,"byte_end":261152,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260626,"byte_end":260697,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260702,"byte_end":260733,"line_start":190,"line_end":190,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260738,"byte_end":260741,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260746,"byte_end":260760,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260765,"byte_end":260768,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260773,"byte_end":260780,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260785,"byte_end":260826,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260831,"byte_end":260877,"line_start":196,"line_end":196,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260882,"byte_end":260885,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260890,"byte_end":260910,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260915,"byte_end":260956,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260961,"byte_end":260993,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":260998,"byte_end":261001,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261006,"byte_end":261059,"line_start":202,"line_end":202,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261064,"byte_end":261112,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261117,"byte_end":261125,"line_start":204,"line_end":204,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261130,"byte_end":261137,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262757,"byte_end":262765,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261344,"byte_end":261420,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261425,"byte_end":261465,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261470,"byte_end":261473,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261478,"byte_end":261554,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261559,"byte_end":261635,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261640,"byte_end":261713,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261718,"byte_end":261760,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261765,"byte_end":261768,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261773,"byte_end":261846,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261851,"byte_end":261882,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261887,"byte_end":261890,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261895,"byte_end":261969,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":261974,"byte_end":262048,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262053,"byte_end":262069,"line_start":227,"line_end":227,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262074,"byte_end":262077,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262082,"byte_end":262153,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262158,"byte_end":262184,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262189,"byte_end":262192,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262197,"byte_end":262269,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262274,"byte_end":262323,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262328,"byte_end":262331,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262336,"byte_end":262350,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262355,"byte_end":262358,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262363,"byte_end":262370,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262375,"byte_end":262406,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262411,"byte_end":262435,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262440,"byte_end":262478,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262483,"byte_end":262486,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262491,"byte_end":262547,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262552,"byte_end":262555,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262560,"byte_end":262595,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262600,"byte_end":262639,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262644,"byte_end":262668,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262673,"byte_end":262689,"line_start":247,"line_end":247,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262694,"byte_end":262710,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262715,"byte_end":262725,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262730,"byte_end":262737,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":262742,"byte_end":262749,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263917,"byte_end":263924,"line_start":278,"line_end":278,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263018,"byte_end":263083,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263088,"byte_end":263137,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263142,"byte_end":263145,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263150,"byte_end":263229,"line_start":264,"line_end":264,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263234,"byte_end":263308,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263313,"byte_end":263389,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263394,"byte_end":263439,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263444,"byte_end":263447,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263452,"byte_end":263527,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263532,"byte_end":263572,"line_start":270,"line_end":270,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263577,"byte_end":263580,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263585,"byte_end":263694,"line_start":272,"line_end":272,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263699,"byte_end":263773,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263778,"byte_end":263794,"line_start":274,"line_end":274,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263799,"byte_end":263802,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263807,"byte_end":263878,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":263883,"byte_end":263909,"line_start":277,"line_end":277,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264476,"byte_end":264486,"line_start":293,"line_end":293,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264173,"byte_end":264247,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264252,"byte_end":264262,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264267,"byte_end":264270,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264275,"byte_end":264345,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264350,"byte_end":264426,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264431,"byte_end":264468,"line_start":292,"line_end":292,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264975,"byte_end":264986,"line_start":306,"line_end":306,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264684,"byte_end":264763,"line_start":301,"line_end":301,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264768,"byte_end":264771,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264776,"byte_end":264846,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264851,"byte_end":264925,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":264930,"byte_end":264967,"line_start":305,"line_end":305,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265907,"byte_end":265918,"line_start":335,"line_end":335,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265189,"byte_end":265242,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265247,"byte_end":265291,"line_start":315,"line_end":315,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265296,"byte_end":265299,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265304,"byte_end":265353,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265358,"byte_end":265431,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265436,"byte_end":265456,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265461,"byte_end":265464,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265469,"byte_end":265483,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265488,"byte_end":265491,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265496,"byte_end":265503,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265508,"byte_end":265567,"line_start":324,"line_end":324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265572,"byte_end":265575,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265580,"byte_end":265599,"line_start":326,"line_end":326,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265604,"byte_end":265622,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265627,"byte_end":265699,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265704,"byte_end":265734,"line_start":329,"line_end":329,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265739,"byte_end":265746,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265751,"byte_end":265825,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265830,"byte_end":265833,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265838,"byte_end":265887,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":265892,"byte_end":265899,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266813,"byte_end":266821,"line_start":362,"line_end":362,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266074,"byte_end":266148,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266153,"byte_end":266227,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266232,"byte_end":266244,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266249,"byte_end":266252,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266257,"byte_end":266324,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266329,"byte_end":266401,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266406,"byte_end":266445,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266450,"byte_end":266453,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266458,"byte_end":266472,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266477,"byte_end":266480,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266485,"byte_end":266492,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266497,"byte_end":266538,"line_start":353,"line_end":353,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266543,"byte_end":266589,"line_start":354,"line_end":354,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266594,"byte_end":266597,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266602,"byte_end":266659,"line_start":356,"line_end":356,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266664,"byte_end":266667,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266672,"byte_end":266726,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266731,"byte_end":266780,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266785,"byte_end":266793,"line_start":360,"line_end":360,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266798,"byte_end":266805,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268173,"byte_end":268185,"line_start":402,"line_end":402,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":266988,"byte_end":267057,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267062,"byte_end":267118,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267123,"byte_end":267126,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267131,"byte_end":267206,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267211,"byte_end":267281,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267286,"byte_end":267324,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267329,"byte_end":267332,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267337,"byte_end":267415,"line_start":376,"line_end":376,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267420,"byte_end":267480,"line_start":377,"line_end":377,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267485,"byte_end":267542,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267547,"byte_end":267614,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267619,"byte_end":267649,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267654,"byte_end":267657,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267662,"byte_end":267676,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267681,"byte_end":267684,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267689,"byte_end":267696,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267701,"byte_end":267742,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267747,"byte_end":267771,"line_start":386,"line_end":386,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267776,"byte_end":267822,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267827,"byte_end":267830,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267835,"byte_end":267856,"line_start":389,"line_end":389,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267861,"byte_end":267864,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267869,"byte_end":267874,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267879,"byte_end":267940,"line_start":392,"line_end":392,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267945,"byte_end":267967,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":267972,"byte_end":268036,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268041,"byte_end":268052,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268057,"byte_end":268096,"line_start":396,"line_end":396,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268101,"byte_end":268106,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268111,"byte_end":268114,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268119,"byte_end":268140,"line_start":399,"line_end":399,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268145,"byte_end":268153,"line_start":400,"line_end":400,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268158,"byte_end":268165,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269198,"byte_end":269212,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268449,"byte_end":268523,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268528,"byte_end":268551,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268556,"byte_end":268559,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268564,"byte_end":268595,"line_start":414,"line_end":414,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268600,"byte_end":268677,"line_start":415,"line_end":415,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268682,"byte_end":268711,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268716,"byte_end":268719,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268724,"byte_end":268738,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268743,"byte_end":268746,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268751,"byte_end":268758,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268763,"byte_end":268804,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268809,"byte_end":268833,"line_start":422,"line_end":422,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268838,"byte_end":268884,"line_start":423,"line_end":423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268889,"byte_end":268892,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268897,"byte_end":268966,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":268971,"byte_end":269041,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269046,"byte_end":269049,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269054,"byte_end":269121,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269126,"byte_end":269165,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269170,"byte_end":269178,"line_start":430,"line_end":430,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269183,"byte_end":269190,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270245,"byte_end":270259,"line_start":462,"line_end":462,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269489,"byte_end":269563,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269568,"byte_end":269591,"line_start":442,"line_end":442,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269596,"byte_end":269599,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269604,"byte_end":269635,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269640,"byte_end":269717,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269722,"byte_end":269751,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269756,"byte_end":269759,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269764,"byte_end":269778,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269783,"byte_end":269786,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269791,"byte_end":269798,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269803,"byte_end":269844,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269849,"byte_end":269873,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269878,"byte_end":269924,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269929,"byte_end":269932,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":269937,"byte_end":270013,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270018,"byte_end":270088,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270093,"byte_end":270096,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270101,"byte_end":270168,"line_start":458,"line_end":458,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270173,"byte_end":270212,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270217,"byte_end":270225,"line_start":460,"line_end":460,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270230,"byte_end":270237,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272167,"byte_end":272190,"line_start":514,"line_end":514,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"pub fn try_for_each_concurrent<Fut, F,\n                               impl Into<Option<usize>>: Into<Option<usize>>>(Self,\n                                                                              impl Into<Option<usize>>,\n                                                                              F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270485,"byte_end":270567,"line_start":471,"line_end":471,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270572,"byte_end":270646,"line_start":472,"line_end":472,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270651,"byte_end":270701,"line_start":473,"line_end":473,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270706,"byte_end":270709,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270714,"byte_end":270736,"line_start":475,"line_end":475,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270741,"byte_end":270827,"line_start":476,"line_end":476,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270832,"byte_end":270917,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270922,"byte_end":270950,"line_start":478,"line_end":478,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270955,"byte_end":270958,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":270963,"byte_end":271038,"line_start":480,"line_end":480,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271043,"byte_end":271100,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271105,"byte_end":271108,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271113,"byte_end":271127,"line_start":483,"line_end":483,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271132,"byte_end":271135,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271140,"byte_end":271147,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271152,"byte_end":271193,"line_start":486,"line_end":486,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271198,"byte_end":271232,"line_start":487,"line_end":487,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271237,"byte_end":271294,"line_start":488,"line_end":488,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271299,"byte_end":271302,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271307,"byte_end":271347,"line_start":490,"line_end":490,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271352,"byte_end":271392,"line_start":491,"line_end":491,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271397,"byte_end":271438,"line_start":492,"line_end":492,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271443,"byte_end":271446,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271451,"byte_end":271502,"line_start":494,"line_end":494,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271507,"byte_end":271560,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271565,"byte_end":271587,"line_start":496,"line_end":496,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271592,"byte_end":271617,"line_start":497,"line_end":497,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271622,"byte_end":271684,"line_start":498,"line_end":498,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271689,"byte_end":271704,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271709,"byte_end":271718,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271723,"byte_end":271729,"line_start":501,"line_end":501,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271734,"byte_end":271737,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271742,"byte_end":271768,"line_start":503,"line_end":503,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271773,"byte_end":271840,"line_start":504,"line_end":504,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271845,"byte_end":271859,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271864,"byte_end":271867,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271872,"byte_end":271933,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271938,"byte_end":271966,"line_start":508,"line_end":508,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":271971,"byte_end":272021,"line_start":509,"line_end":509,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272026,"byte_end":272034,"line_start":510,"line_end":510,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272039,"byte_end":272046,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272134,"byte_end":272159,"line_start":513,"line_end":513,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273639,"byte_end":273650,"line_start":561,"line_end":561,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272600,"byte_end":272652,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272657,"byte_end":272724,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272729,"byte_end":272732,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272737,"byte_end":272811,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272816,"byte_end":272897,"line_start":535,"line_end":535,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272902,"byte_end":272972,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272977,"byte_end":272980,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":272985,"byte_end":273053,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273058,"byte_end":273061,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273066,"byte_end":273080,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273085,"byte_end":273088,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273093,"byte_end":273100,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273105,"byte_end":273146,"line_start":543,"line_end":543,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273151,"byte_end":273182,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273187,"byte_end":273225,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273230,"byte_end":273250,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273255,"byte_end":273258,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273263,"byte_end":273300,"line_start":548,"line_end":548,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273305,"byte_end":273308,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273313,"byte_end":273340,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273345,"byte_end":273369,"line_start":551,"line_end":551,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273374,"byte_end":273420,"line_start":552,"line_end":552,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273425,"byte_end":273434,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273439,"byte_end":273482,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273487,"byte_end":273494,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273499,"byte_end":273502,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273507,"byte_end":273570,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273575,"byte_end":273606,"line_start":558,"line_end":558,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273611,"byte_end":273619,"line_start":559,"line_end":559,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273624,"byte_end":273631,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275121,"byte_end":275131,"line_start":598,"line_end":598,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273833,"byte_end":273906,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273911,"byte_end":273945,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273950,"byte_end":273953,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":273958,"byte_end":274033,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274038,"byte_end":274113,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274118,"byte_end":274191,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274196,"byte_end":274267,"line_start":574,"line_end":574,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274272,"byte_end":274322,"line_start":575,"line_end":575,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274327,"byte_end":274330,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274335,"byte_end":274406,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274411,"byte_end":274414,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274419,"byte_end":274495,"line_start":579,"line_end":579,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274500,"byte_end":274570,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274575,"byte_end":274600,"line_start":581,"line_end":581,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274605,"byte_end":274608,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274613,"byte_end":274627,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274632,"byte_end":274639,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274644,"byte_end":274685,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274690,"byte_end":274714,"line_start":586,"line_end":586,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274719,"byte_end":274776,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274781,"byte_end":274784,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274789,"byte_end":274869,"line_start":589,"line_end":589,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274874,"byte_end":274917,"line_start":590,"line_end":590,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274922,"byte_end":274955,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274960,"byte_end":274967,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274972,"byte_end":274975,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":274980,"byte_end":275028,"line_start":594,"line_end":594,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275033,"byte_end":275088,"line_start":595,"line_end":595,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275093,"byte_end":275101,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275106,"byte_end":275113,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276758,"byte_end":276772,"line_start":639,"line_end":639,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275382,"byte_end":275444,"line_start":607,"line_end":607,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275449,"byte_end":275517,"line_start":608,"line_end":608,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275522,"byte_end":275556,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275561,"byte_end":275564,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275569,"byte_end":275644,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275649,"byte_end":275724,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275729,"byte_end":275805,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275810,"byte_end":275875,"line_start":614,"line_end":614,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275880,"byte_end":275883,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275888,"byte_end":275959,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275964,"byte_end":275967,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":275972,"byte_end":276048,"line_start":618,"line_end":618,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276053,"byte_end":276127,"line_start":619,"line_end":619,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276132,"byte_end":276157,"line_start":620,"line_end":620,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276162,"byte_end":276165,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276170,"byte_end":276184,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276189,"byte_end":276196,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276201,"byte_end":276242,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276247,"byte_end":276304,"line_start":625,"line_end":625,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276309,"byte_end":276334,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276339,"byte_end":276342,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276347,"byte_end":276417,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276422,"byte_end":276477,"line_start":629,"line_end":629,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276482,"byte_end":276544,"line_start":630,"line_end":630,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276549,"byte_end":276564,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276569,"byte_end":276576,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276581,"byte_end":276584,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276589,"byte_end":276610,"line_start":634,"line_end":634,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276615,"byte_end":276664,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276669,"byte_end":276725,"line_start":636,"line_end":636,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276730,"byte_end":276738,"line_start":637,"line_end":637,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":276743,"byte_end":276750,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278464,"byte_end":278475,"line_start":686,"line_end":686,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277049,"byte_end":277114,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277119,"byte_end":277122,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277127,"byte_end":277200,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277205,"byte_end":277278,"line_start":651,"line_end":651,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277283,"byte_end":277356,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277361,"byte_end":277431,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277436,"byte_end":277439,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277444,"byte_end":277458,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277463,"byte_end":277466,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277471,"byte_end":277478,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277483,"byte_end":277524,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277529,"byte_end":277560,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277565,"byte_end":277616,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277621,"byte_end":277641,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277646,"byte_end":277649,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277654,"byte_end":277693,"line_start":663,"line_end":663,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277698,"byte_end":277737,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277742,"byte_end":277781,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277786,"byte_end":277789,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277794,"byte_end":277821,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277826,"byte_end":277869,"line_start":668,"line_end":668,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277874,"byte_end":277881,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277886,"byte_end":277913,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277918,"byte_end":277961,"line_start":671,"line_end":671,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":277966,"byte_end":278010,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278015,"byte_end":278022,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278027,"byte_end":278054,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278059,"byte_end":278104,"line_start":675,"line_end":675,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278109,"byte_end":278154,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278159,"byte_end":278203,"line_start":677,"line_end":677,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278208,"byte_end":278215,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278220,"byte_end":278223,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278228,"byte_end":278267,"line_start":680,"line_end":680,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278272,"byte_end":278321,"line_start":681,"line_end":681,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278326,"byte_end":278375,"line_start":682,"line_end":682,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278380,"byte_end":278430,"line_start":683,"line_end":683,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278435,"byte_end":278444,"line_start":684,"line_end":684,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278449,"byte_end":278456,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280067,"byte_end":280075,"line_start":725,"line_end":725,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278780,"byte_end":278850,"line_start":697,"line_end":697,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278855,"byte_end":278915,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278920,"byte_end":278923,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":278928,"byte_end":278998,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279003,"byte_end":279079,"line_start":701,"line_end":701,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279084,"byte_end":279160,"line_start":702,"line_end":702,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279165,"byte_end":279235,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279240,"byte_end":279266,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279271,"byte_end":279274,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279279,"byte_end":279359,"line_start":706,"line_end":706,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279364,"byte_end":279433,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279438,"byte_end":279459,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279464,"byte_end":279467,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279472,"byte_end":279486,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279491,"byte_end":279494,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279499,"byte_end":279506,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279511,"byte_end":279552,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279557,"byte_end":279603,"line_start":714,"line_end":714,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279608,"byte_end":279611,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279616,"byte_end":279685,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279690,"byte_end":279767,"line_start":717,"line_end":717,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279772,"byte_end":279805,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279810,"byte_end":279813,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279818,"byte_end":279904,"line_start":720,"line_end":720,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":279909,"byte_end":279995,"line_start":721,"line_end":721,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280000,"byte_end":280034,"line_start":722,"line_end":722,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280039,"byte_end":280047,"line_start":723,"line_end":723,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280052,"byte_end":280059,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281601,"byte_end":281611,"line_start":768,"line_end":768,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280355,"byte_end":280417,"line_start":734,"line_end":734,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280422,"byte_end":280497,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280502,"byte_end":280505,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280510,"byte_end":280581,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280586,"byte_end":280662,"line_start":738,"line_end":738,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280667,"byte_end":280706,"line_start":739,"line_end":739,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280711,"byte_end":280714,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280719,"byte_end":280805,"line_start":741,"line_end":741,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280810,"byte_end":280813,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280818,"byte_end":280902,"line_start":743,"line_end":743,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280907,"byte_end":280963,"line_start":744,"line_end":744,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280968,"byte_end":280971,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280976,"byte_end":280990,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":280995,"byte_end":280998,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281003,"byte_end":281010,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281015,"byte_end":281056,"line_start":749,"line_end":749,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281061,"byte_end":281092,"line_start":750,"line_end":750,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281097,"byte_end":281135,"line_start":751,"line_end":751,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281140,"byte_end":281160,"line_start":752,"line_end":752,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281165,"byte_end":281168,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281173,"byte_end":281234,"line_start":754,"line_end":754,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281239,"byte_end":281242,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281247,"byte_end":281274,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281279,"byte_end":281310,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281315,"byte_end":281341,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281346,"byte_end":281416,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281421,"byte_end":281430,"line_start":760,"line_end":760,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281435,"byte_end":281442,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281447,"byte_end":281450,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281455,"byte_end":281494,"line_start":763,"line_end":763,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281499,"byte_end":281502,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281507,"byte_end":281567,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281572,"byte_end":281581,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281586,"byte_end":281593,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284365,"byte_end":284385,"line_start":835,"line_end":835,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"pub fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281865,"byte_end":281931,"line_start":776,"line_end":776,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281936,"byte_end":281939,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":281944,"byte_end":282049,"line_start":778,"line_end":778,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282054,"byte_end":282097,"line_start":779,"line_end":779,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282102,"byte_end":282105,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282110,"byte_end":282178,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282183,"byte_end":282256,"line_start":782,"line_end":782,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282261,"byte_end":282317,"line_start":783,"line_end":783,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282322,"byte_end":282325,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282330,"byte_end":282405,"line_start":785,"line_end":785,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282410,"byte_end":282483,"line_start":786,"line_end":786,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282488,"byte_end":282553,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282558,"byte_end":282561,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282566,"byte_end":282641,"line_start":789,"line_end":789,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282646,"byte_end":282703,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282708,"byte_end":282711,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282716,"byte_end":282730,"line_start":792,"line_end":792,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282735,"byte_end":282738,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282743,"byte_end":282795,"line_start":794,"line_end":794,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282800,"byte_end":282807,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282812,"byte_end":282853,"line_start":796,"line_end":796,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282858,"byte_end":282892,"line_start":797,"line_end":797,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282897,"byte_end":282954,"line_start":798,"line_end":798,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282959,"byte_end":282962,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":282967,"byte_end":283017,"line_start":800,"line_end":800,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283022,"byte_end":283072,"line_start":801,"line_end":801,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283077,"byte_end":283080,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283085,"byte_end":283160,"line_start":803,"line_end":803,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283165,"byte_end":283168,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283173,"byte_end":283239,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283244,"byte_end":283247,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283252,"byte_end":283277,"line_start":807,"line_end":807,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283282,"byte_end":283336,"line_start":808,"line_end":808,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283341,"byte_end":283344,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283349,"byte_end":283374,"line_start":810,"line_end":810,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283379,"byte_end":283433,"line_start":811,"line_end":811,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283438,"byte_end":283441,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283446,"byte_end":283490,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283495,"byte_end":283531,"line_start":814,"line_end":814,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283536,"byte_end":283543,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283548,"byte_end":283551,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283556,"byte_end":283616,"line_start":817,"line_end":817,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283621,"byte_end":283628,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283633,"byte_end":283674,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283679,"byte_end":283710,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283715,"byte_end":283766,"line_start":821,"line_end":821,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283771,"byte_end":283774,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283779,"byte_end":283833,"line_start":823,"line_end":823,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283838,"byte_end":283904,"line_start":824,"line_end":824,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283909,"byte_end":283912,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283917,"byte_end":283966,"line_start":826,"line_end":826,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":283971,"byte_end":284025,"line_start":827,"line_end":827,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284030,"byte_end":284033,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284038,"byte_end":284091,"line_start":829,"line_end":829,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284096,"byte_end":284168,"line_start":830,"line_end":830,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284173,"byte_end":284232,"line_start":831,"line_end":831,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284237,"byte_end":284244,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284332,"byte_end":284357,"line_start":834,"line_end":834,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284854,"byte_end":284873,"line_start":849,"line_end":849,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284746,"byte_end":284824,"line_start":847,"line_end":847,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":284829,"byte_end":284846,"line_start":848,"line_end":848,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287167,"byte_end":287182,"line_start":915,"line_end":915,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"pub fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error> + Unpin, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":285945,"byte_end":286027,"line_start":887,"line_end":887,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286032,"byte_end":286035,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_async_read` moves the stream, the [`Stream`](futures_core::stream::Stream) type must be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286040,"byte_end":286155,"line_start":889,"line_end":889,"column_start":5,"column_end":120}},{"value":"/ [`Unpin`]. If you want to use `into_async_read` with a [`!Unpin`](Unpin) stream, you'll","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286160,"byte_end":286251,"line_start":890,"line_end":890,"column_start":5,"column_end":96}},{"value":"/ first have to pin the stream. This can be done by boxing the stream using [`Box::pin`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286256,"byte_end":286346,"line_start":891,"line_end":891,"column_start":5,"column_end":95}},{"value":"/ or pinning it to the stack using the `pin_mut!` macro from the `pin_utils` crate.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286351,"byte_end":286436,"line_start":892,"line_end":892,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286441,"byte_end":286444,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286449,"byte_end":286513,"line_start":894,"line_end":894,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286518,"byte_end":286575,"line_start":895,"line_end":895,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286580,"byte_end":286583,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286588,"byte_end":286602,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286607,"byte_end":286610,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286615,"byte_end":286622,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286627,"byte_end":286668,"line_start":900,"line_end":900,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286673,"byte_end":286719,"line_start":901,"line_end":901,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286724,"byte_end":286758,"line_start":902,"line_end":902,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286763,"byte_end":286766,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(vec![1, 2, 3, 4, 5])]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286771,"byte_end":286832,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286837,"byte_end":286883,"line_start":905,"line_end":905,"column_start":5,"column_end":51}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286888,"byte_end":286917,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286922,"byte_end":286925,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ assert!(reader.read_to_end(&mut buf).await.is_ok());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286930,"byte_end":286986,"line_start":908,"line_end":908,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(buf, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":286991,"byte_end":287029,"line_start":909,"line_end":909,"column_start":5,"column_end":43}},{"value":"/ # })","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287034,"byte_end":287042,"line_start":910,"line_end":910,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287047,"byte_end":287054,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287059,"byte_end":287081,"line_start":912,"line_end":912,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":287136,"byte_end":287159,"line_start":914,"line_end":914,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":9818},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328054,"byte_end":328058,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":9820}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":327939,"byte_end":327976,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":327994,"byte_end":328042,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2457},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328576,"byte_end":328580,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328110,"byte_end":328174,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328175,"byte_end":328203,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328204,"byte_end":328207,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328208,"byte_end":328281,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328282,"byte_end":328337,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328338,"byte_end":328341,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328342,"byte_end":328349,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328350,"byte_end":328391,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328392,"byte_end":328435,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328436,"byte_end":328439,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328440,"byte_end":328484,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328485,"byte_end":328550,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328551,"byte_end":328560,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328561,"byte_end":328568,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9824},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329222,"byte_end":329228,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":9826}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329105,"byte_end":329144,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329162,"byte_end":329210,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2475},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329752,"byte_end":329758,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329250,"byte_end":329310,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329311,"byte_end":329314,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329315,"byte_end":329382,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329383,"byte_end":329455,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329456,"byte_end":329513,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329514,"byte_end":329517,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329518,"byte_end":329525,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329526,"byte_end":329567,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329568,"byte_end":329611,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329612,"byte_end":329615,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329616,"byte_end":329651,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329652,"byte_end":329726,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329727,"byte_end":329736,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329737,"byte_end":329744,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9830},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330543,"byte_end":330548,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":9832}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330427,"byte_end":330465,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330483,"byte_end":330531,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2499},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330716,"byte_end":330721,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330586,"byte_end":330634,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330635,"byte_end":330638,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330639,"byte_end":330708,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2524},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331655,"byte_end":331659,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331348,"byte_end":331389,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331390,"byte_end":331393,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331394,"byte_end":331401,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331402,"byte_end":331443,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331444,"byte_end":331487,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331488,"byte_end":331491,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331492,"byte_end":331536,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331537,"byte_end":331592,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331593,"byte_end":331629,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331630,"byte_end":331639,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331640,"byte_end":331647,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9836},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331872,"byte_end":331876,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":9838}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331812,"byte_end":331860,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331780,"byte_end":331794,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9856},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331872,"byte_end":331876,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":9859},{"krate":0,"index":9860}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331780,"byte_end":331794,"line_start":23,"line_end":23,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9878},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333012,"byte_end":333019,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":9880}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":332892,"byte_end":332934,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":332952,"byte_end":333000,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2549},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333195,"byte_end":333202,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333063,"byte_end":333117,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333118,"byte_end":333121,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333122,"byte_end":333187,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2571},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":333908,"byte_end":333914,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2573}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":333807,"byte_end":333847,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":333848,"byte_end":333896,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2579},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334602,"byte_end":334609,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334114,"byte_end":334187,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334188,"byte_end":334191,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334192,"byte_end":334251,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334252,"byte_end":334255,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334256,"byte_end":334270,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334271,"byte_end":334274,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334275,"byte_end":334282,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334283,"byte_end":334316,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334317,"byte_end":334345,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334346,"byte_end":334349,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334350,"byte_end":334379,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334380,"byte_end":334383,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334384,"byte_end":334448,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334449,"byte_end":334502,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334503,"byte_end":334524,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334525,"byte_end":334578,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334579,"byte_end":334586,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334587,"byte_end":334594,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9884},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335259,"byte_end":335265,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":9888},{"krate":0,"index":9889},{"krate":0,"index":9887}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335199,"byte_end":335247,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335167,"byte_end":335181,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9915},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335259,"byte_end":335265,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":9919},{"krate":0,"index":9920},{"krate":0,"index":9921}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335167,"byte_end":335181,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2602},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335843,"byte_end":335849,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335367,"byte_end":335435,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335436,"byte_end":335512,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335513,"byte_end":335561,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335562,"byte_end":335565,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335566,"byte_end":335640,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335641,"byte_end":335710,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335711,"byte_end":335738,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335739,"byte_end":335742,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335743,"byte_end":335814,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":335815,"byte_end":335835,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336228,"byte_end":336235,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336120,"byte_end":336194,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336199,"byte_end":336216,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336591,"byte_end":336598,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336329,"byte_end":336397,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336402,"byte_end":336433,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336438,"byte_end":336441,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336446,"byte_end":336519,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336524,"byte_end":336579,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336973,"byte_end":336984,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336704,"byte_end":336779,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336784,"byte_end":336815,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336820,"byte_end":336823,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336828,"byte_end":336901,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336906,"byte_end":336961,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337390,"byte_end":337400,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337154,"byte_end":337217,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337222,"byte_end":337225,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337230,"byte_end":337302,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337307,"byte_end":337378,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2638},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340573,"byte_end":340579,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339131,"byte_end":339201,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339202,"byte_end":339205,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339206,"byte_end":339275,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339276,"byte_end":339357,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339358,"byte_end":339389,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339390,"byte_end":339393,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339394,"byte_end":339473,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339474,"byte_end":339553,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339554,"byte_end":339608,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339609,"byte_end":339612,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339613,"byte_end":339693,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339694,"byte_end":339764,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339765,"byte_end":339787,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339788,"byte_end":339791,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339792,"byte_end":339869,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339870,"byte_end":339942,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":339943,"byte_end":340020,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340021,"byte_end":340081,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340082,"byte_end":340085,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340086,"byte_end":340099,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340100,"byte_end":340103,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340104,"byte_end":340111,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340112,"byte_end":340153,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340154,"byte_end":340197,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340198,"byte_end":340201,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340202,"byte_end":340257,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340258,"byte_end":340281,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340282,"byte_end":340321,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340322,"byte_end":340359,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340360,"byte_end":340399,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340400,"byte_end":340416,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340417,"byte_end":340433,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340434,"byte_end":340443,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340444,"byte_end":340451,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340452,"byte_end":340455,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340456,"byte_end":340508,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340509,"byte_end":340547,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340548,"byte_end":340557,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340558,"byte_end":340565,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":9944},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340910,"byte_end":340916,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":9948},{"krate":0,"index":9949},{"krate":0,"index":9950}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340850,"byte_end":340898,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340835,"byte_end":340849,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":9980},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340910,"byte_end":340916,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":9985},{"krate":0,"index":9986}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":340835,"byte_end":340849,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10046},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699162,"byte_end":8699176,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":10048},{"krate":0,"index":10049},{"krate":0,"index":10050},{"krate":0,"index":10051}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697096,"byte_end":8697130,"line_start":57,"line_end":57,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697131,"byte_end":8697134,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697135,"byte_end":8697214,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697215,"byte_end":8697286,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697287,"byte_end":8697363,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697364,"byte_end":8697412,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697413,"byte_end":8697416,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697417,"byte_end":8697496,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697497,"byte_end":8697572,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697573,"byte_end":8697651,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697652,"byte_end":8697732,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697733,"byte_end":8697762,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697763,"byte_end":8697766,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697767,"byte_end":8697845,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697846,"byte_end":8697920,"line_start":71,"line_end":71,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697921,"byte_end":8697996,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8697997,"byte_end":8698072,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698073,"byte_end":8698148,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698149,"byte_end":8698207,"line_start":75,"line_end":75,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698208,"byte_end":8698211,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698212,"byte_end":8698285,"line_start":77,"line_end":77,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698286,"byte_end":8698364,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698365,"byte_end":8698423,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698424,"byte_end":8698497,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698498,"byte_end":8698566,"line_start":81,"line_end":81,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698567,"byte_end":8698643,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698644,"byte_end":8698712,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698713,"byte_end":8698766,"line_start":84,"line_end":84,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698767,"byte_end":8698770,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698771,"byte_end":8698837,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698838,"byte_end":8698917,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698918,"byte_end":8698965,"line_start":88,"line_end":88,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698966,"byte_end":8698969,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8698970,"byte_end":8699043,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699044,"byte_end":8699101,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699102,"byte_end":8699150,"line_start":92,"line_end":92,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10056},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699684,"byte_end":8699687,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"pub fn new() -> FuturesOrdered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699464,"byte_end":8699508,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699513,"byte_end":8699516,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699521,"byte_end":8699596,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699601,"byte_end":8699672,"line_start":106,"line_end":106,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":10057},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700209,"byte_end":8700212,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699936,"byte_end":8699993,"line_start":116,"line_end":116,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699998,"byte_end":8700001,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700006,"byte_end":8700069,"line_start":118,"line_end":118,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700074,"byte_end":8700138,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700143,"byte_end":8700197,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10058},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700370,"byte_end":8700378,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700307,"byte_end":8700358,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10059},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700802,"byte_end":8700806,"line_start":136,"line_end":136,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"pub fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700483,"byte_end":8700516,"line_start":130,"line_end":130,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700521,"byte_end":8700524,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700529,"byte_end":8700605,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700610,"byte_end":8700684,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700689,"byte_end":8700762,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8700767,"byte_end":8700790,"line_start":135,"line_end":135,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":10084},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":10085},{"krate":0,"index":10086},{"krate":0,"index":10087},{"krate":0,"index":10088},{"krate":0,"index":10089},{"krate":0,"index":10090},{"krate":0,"index":10091},{"krate":0,"index":10092},{"krate":0,"index":10093},{"krate":0,"index":10094},{"krate":0,"index":10095},{"krate":0,"index":10096},{"krate":0,"index":10097},{"krate":0,"index":10098},{"krate":0,"index":10099},{"krate":0,"index":10100},{"krate":0,"index":10101},{"krate":0,"index":10102},{"krate":0,"index":13730},{"krate":0,"index":10103},{"krate":0,"index":10104},{"krate":0,"index":13734},{"krate":0,"index":10105},{"krate":0,"index":10106},{"krate":0,"index":10107},{"krate":0,"index":10108},{"krate":0,"index":10109},{"krate":0,"index":13742},{"krate":0,"index":10110},{"krate":0,"index":13744},{"krate":0,"index":10111},{"krate":0,"index":13746},{"krate":0,"index":10112},{"krate":0,"index":13748},{"krate":0,"index":10113},{"krate":0,"index":13750},{"krate":0,"index":10114},{"krate":0,"index":10115},{"krate":0,"index":10116},{"krate":0,"index":10117},{"krate":0,"index":10118},{"krate":0,"index":10119},{"krate":0,"index":10120},{"krate":0,"index":10126},{"krate":0,"index":10164},{"krate":0,"index":10165},{"krate":0,"index":13770},{"krate":0,"index":10166},{"krate":0,"index":13772},{"krate":0,"index":10167},{"krate":0,"index":10168},{"krate":0,"index":10169},{"krate":0,"index":10209},{"krate":0,"index":10210},{"krate":0,"index":10246},{"krate":0,"index":10247},{"krate":0,"index":10248},{"krate":0,"index":10249},{"krate":0,"index":10250},{"krate":0,"index":10255},{"krate":0,"index":10257},{"krate":0,"index":10259},{"krate":0,"index":10261},{"krate":0,"index":10263},{"krate":0,"index":10265},{"krate":0,"index":10268},{"krate":0,"index":10283},{"krate":0,"index":10296},{"krate":0,"index":10299},{"krate":0,"index":10302},{"krate":0,"index":10307},{"krate":0,"index":10310}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138703,"byte_end":138728,"line_start":92,"line_end":92,"column_start":5,"column_end":30}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8703241,"byte_end":8703273,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8703274,"byte_end":8703277,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8703278,"byte_end":8703353,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8703354,"byte_end":8703411,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10366},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8729660,"byte_end":8729670,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":10369},{"krate":0,"index":10370},{"krate":0,"index":10371}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8729589,"byte_end":8729648,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10376},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8729906,"byte_end":8729913,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8729835,"byte_end":8729894,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":10385},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8730055,"byte_end":8730065,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":10388},{"krate":0,"index":10389},{"krate":0,"index":10390},{"krate":0,"index":10391}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8729982,"byte_end":8730043,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":10396},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8730352,"byte_end":8730356,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8730275,"byte_end":8730340,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10250},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706125,"byte_end":8706141,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":10252},{"krate":0,"index":10253},{"krate":0,"index":10254}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705030,"byte_end":8705083,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705084,"byte_end":8705087,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705088,"byte_end":8705156,"line_start":52,"line_end":52,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705157,"byte_end":8705230,"line_start":53,"line_end":53,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705231,"byte_end":8705307,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705308,"byte_end":8705352,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705353,"byte_end":8705356,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705357,"byte_end":8705435,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705436,"byte_end":8705494,"line_start":58,"line_end":58,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705495,"byte_end":8705559,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705560,"byte_end":8705613,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705614,"byte_end":8705693,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705694,"byte_end":8705723,"line_start":62,"line_end":62,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705724,"byte_end":8705727,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705728,"byte_end":8705798,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705799,"byte_end":8705876,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705877,"byte_end":8705928,"line_start":66,"line_end":66,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705929,"byte_end":8705932,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8705933,"byte_end":8706006,"line_start":68,"line_end":68,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706007,"byte_end":8706064,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706065,"byte_end":8706113,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10270},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708811,"byte_end":8708814,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"pub fn new() -> FuturesUnordered<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708540,"byte_end":8708589,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708594,"byte_end":8708597,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708602,"byte_end":8708669,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708674,"byte_end":8708748,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708753,"byte_end":8708799,"line_start":135,"line_end":135,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":10271},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8709838,"byte_end":8709841,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8709700,"byte_end":8709755,"line_start":161,"line_end":161,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8709760,"byte_end":8709763,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8709768,"byte_end":8709826,"line_start":163,"line_end":163,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10272},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710005,"byte_end":8710013,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8709943,"byte_end":8709993,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10273},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710596,"byte_end":8710600,"line_start":182,"line_end":182,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"pub fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710226,"byte_end":8710257,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710262,"byte_end":8710265,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710270,"byte_end":8710340,"line_start":178,"line_end":178,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710345,"byte_end":8710431,"line_start":179,"line_end":179,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710436,"byte_end":8710512,"line_start":180,"line_end":180,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8710517,"byte_end":8710584,"line_start":181,"line_end":181,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10274},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8711875,"byte_end":8711879,"line_start":210,"line_end":210,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"pub fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8711793,"byte_end":8711863,"line_start":209,"line_end":209,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":10276},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8712423,"byte_end":8712431,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8712342,"byte_end":8712411,"line_start":226,"line_end":226,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10277},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8712621,"byte_end":8712633,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"pub fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8712540,"byte_end":8712609,"line_start":231,"line_end":231,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":10331},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741641,"byte_end":8741650,"line_start":25,"line_end":25,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":10333}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"/ An unbounded set of streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741017,"byte_end":8741048,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741049,"byte_end":8741052,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" provides the ability to maintain a set of streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741053,"byte_end":8741124,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ and drive them all to completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741125,"byte_end":8741162,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741163,"byte_end":8741166,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Streams are pushed into this set and their realized values are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741167,"byte_end":8741233,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ yielded as they become ready. Streams will only be polled when they","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741234,"byte_end":8741305,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ generate notifications. This allows to coordinate a large number of streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741306,"byte_end":8741386,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741387,"byte_end":8741390,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `SelectAll` via the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741391,"byte_end":8741452,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/ `select_all` function in the `stream` module, or you can start with an","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741453,"byte_end":8741527,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ empty set with the `SelectAll::new` constructor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741528,"byte_end":8741580,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741581,"byte_end":8741629,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10339},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742107,"byte_end":8742110,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"pub fn new() -> SelectAll<St>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741907,"byte_end":8741946,"line_start":36,"line_end":36,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741951,"byte_end":8741954,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741959,"byte_end":8742029,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742034,"byte_end":8742095,"line_start":39,"line_end":39,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10340},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742334,"byte_end":8742337,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742196,"byte_end":8742251,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742256,"byte_end":8742259,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742264,"byte_end":8742322,"line_start":46,"line_end":46,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":10341},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742453,"byte_end":8742461,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742392,"byte_end":8742441,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10342},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742823,"byte_end":8742827,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"pub fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742520,"byte_end":8742551,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742556,"byte_end":8742559,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742564,"byte_end":8742636,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742641,"byte_end":8742715,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742720,"byte_end":8742788,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742793,"byte_end":8742811,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":10353},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744603,"byte_end":8744613,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"pub fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8743982,"byte_end":8744056,"line_start":104,"line_end":104,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744057,"byte_end":8744060,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744061,"byte_end":8744140,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744141,"byte_end":8744192,"line_start":107,"line_end":107,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744193,"byte_end":8744267,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744268,"byte_end":8744327,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744328,"byte_end":8744331,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744332,"byte_end":8744404,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ futures into the set as they become available.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744405,"byte_end":8744455,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744456,"byte_end":8744459,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744460,"byte_end":8744537,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744538,"byte_end":8744595,"line_start":115,"line_end":115,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2670},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":10405},{"krate":0,"index":10406},{"krate":0,"index":10407},{"krate":0,"index":10408},{"krate":0,"index":10409},{"krate":0,"index":10410},{"krate":0,"index":2671},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2696},{"krate":0,"index":2697},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2703},{"krate":0,"index":2704},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2707},{"krate":0,"index":2708}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"/ Task notification","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/mod.rs","byte_start":342336,"byte_end":342357,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2685},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343547,"byte_end":343555,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":2686}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343504,"byte_end":343536,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344552,"byte_end":344557,"line_start":46,"line_end":46,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":2685},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343569,"byte_end":343634,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343639,"byte_end":343654,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343659,"byte_end":343662,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343667,"byte_end":343737,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343742,"byte_end":343761,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343766,"byte_end":343769,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343774,"byte_end":343843,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343848,"byte_end":343921,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343926,"byte_end":343965,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343970,"byte_end":343973,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343978,"byte_end":344044,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344049,"byte_end":344115,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344120,"byte_end":344191,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344196,"byte_end":344252,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344257,"byte_end":344260,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344265,"byte_end":344272,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344277,"byte_end":344315,"line_start":37,"line_end":37,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344320,"byte_end":344352,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344357,"byte_end":344360,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344365,"byte_end":344411,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344416,"byte_end":344419,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344424,"byte_end":344461,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344466,"byte_end":344502,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344507,"byte_end":344514,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":344519,"byte_end":344544,"line_start":45,"line_end":45,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":2688},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346311,"byte_end":346324,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":2689}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346263,"byte_end":346300,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347367,"byte_end":347378,"line_start":124,"line_end":124,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"pub fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346343,"byte_end":346408,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346413,"byte_end":346428,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346433,"byte_end":346436,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346441,"byte_end":346511,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346516,"byte_end":346535,"line_start":102,"line_end":102,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346540,"byte_end":346543,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346548,"byte_end":346617,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346622,"byte_end":346695,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346700,"byte_end":346739,"line_start":106,"line_end":106,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346744,"byte_end":346747,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346752,"byte_end":346818,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346823,"byte_end":346889,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346894,"byte_end":346965,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346970,"byte_end":347026,"line_start":111,"line_end":111,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347031,"byte_end":347034,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347039,"byte_end":347046,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347051,"byte_end":347088,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347093,"byte_end":347130,"line_start":115,"line_end":115,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347135,"byte_end":347138,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347143,"byte_end":347179,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347184,"byte_end":347221,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347226,"byte_end":347229,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347234,"byte_end":347271,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347276,"byte_end":347317,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347322,"byte_end":347329,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":347334,"byte_end":347359,"line_start":123,"line_end":123,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":2709},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","parent":null,"children":[{"krate":0,"index":2710}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"/ Definition of the `Never` type,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":348783,"byte_end":348818,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/ a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":348819,"byte_end":348875,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2710},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349512,"byte_end":349517,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":348877,"byte_end":348912,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":348913,"byte_end":348916,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":348917,"byte_end":348992,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":348993,"byte_end":349030,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349031,"byte_end":349034,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349035,"byte_end":349099,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349100,"byte_end":349103,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349104,"byte_end":349175,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349176,"byte_end":349227,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349228,"byte_end":349320,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349321,"byte_end":349324,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349325,"byte_end":349396,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/never.rs","byte_start":349397,"byte_end":349502,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":2711},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2729},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3282},{"krate":0,"index":3283},{"krate":0,"index":3284},{"krate":0,"index":3285},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":14394},{"krate":0,"index":3390},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3476},{"krate":0,"index":3477},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3523},{"krate":0,"index":3525},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3537}],"decl_id":null,"docs":" IO","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12265,"byte_end":12287,"line_start":330,"line_end":330,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12334,"byte_end":12357,"line_start":332,"line_end":332,"column_start":1,"column_end":24}},{"value":"/ IO","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349548,"byte_end":349554,"line_start":1,"line_end":1,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349555,"byte_end":349558,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a number of functions for working with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349559,"byte_end":349622,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"/ `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` types, including","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349623,"byte_end":349702,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ the `AsyncReadExt`, `AsyncWriteExt`, `AsyncSeekExt`, and `AsyncBufReadExt`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349703,"byte_end":349781,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ traits which add methods to the `AsyncRead`, `AsyncWrite`, `AsyncSeek`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349782,"byte_end":349857,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ and `AsyncBufRead` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349858,"byte_end":349887,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349888,"byte_end":349891,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `io` and `std` features of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349892,"byte_end":349966,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":349967,"byte_end":350024,"line_start":10,"line_end":10,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10411},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375831,"byte_end":375841,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375182,"byte_end":375247,"line_start":8,"line_end":8,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375248,"byte_end":375297,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375298,"byte_end":375369,"line_start":10,"line_end":10,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375370,"byte_end":375373,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375374,"byte_end":375450,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375451,"byte_end":375522,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375523,"byte_end":375591,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375592,"byte_end":375660,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375661,"byte_end":375736,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375737,"byte_end":375751,"line_start":17,"line_end":17,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376405,"byte_end":376408,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376335,"byte_end":376393,"line_start":42,"line_end":42,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376523,"byte_end":376530,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376460,"byte_end":376511,"line_start":47,"line_end":47,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376644,"byte_end":376651,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376573,"byte_end":376632,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376772,"byte_end":376782,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376706,"byte_end":376760,"line_start":57,"line_end":57,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":10448},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381700,"byte_end":381709,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":10453},{"krate":0,"index":10450},{"krate":0,"index":10451},{"krate":0,"index":10452}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381674,"byte_end":381688,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10477},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381700,"byte_end":381709,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufReader","qualname":"::io::buf_reader::_::__BufReader","value":"__BufReader {  }","parent":null,"children":[{"krate":0,"index":10480},{"krate":0,"index":10481}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381674,"byte_end":381688,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381978,"byte_end":381981,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381836,"byte_end":381928,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381933,"byte_end":381966,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":382143,"byte_end":382156,"line_start":47,"line_end":47,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":382066,"byte_end":382131,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":382739,"byte_end":382745,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":382579,"byte_end":382635,"line_start":63,"line_end":63,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":382640,"byte_end":382643,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":382648,"byte_end":382727,"line_start":65,"line_end":65,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":10504},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389659,"byte_end":389668,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":10508},{"krate":0,"index":10506},{"krate":0,"index":10507}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389633,"byte_end":389647,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10530},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389659,"byte_end":389668,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"__BufWriter","qualname":"::io::buf_writer::_::__BufWriter","value":"__BufWriter {  }","parent":null,"children":[{"krate":0,"index":10533},{"krate":0,"index":10534}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389633,"byte_end":389647,"line_start":30,"line_end":30,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389921,"byte_end":389924,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389779,"byte_end":389871,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389876,"byte_end":389909,"line_start":40,"line_end":40,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":390086,"byte_end":390099,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":390009,"byte_end":390074,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":391256,"byte_end":391262,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":391188,"byte_end":391244,"line_start":84,"line_end":84,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10557},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394100,"byte_end":394105,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":10561},{"krate":0,"index":10562},{"krate":0,"index":10560}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394040,"byte_end":394088,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394025,"byte_end":394039,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10588},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394100,"byte_end":394105,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::io::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":10592},{"krate":0,"index":10593},{"krate":0,"index":10594}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394025,"byte_end":394039,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394490,"byte_end":394497,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394416,"byte_end":394478,"line_start":34,"line_end":34,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394829,"byte_end":394836,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394566,"byte_end":394636,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394641,"byte_end":394644,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394649,"byte_end":394722,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394727,"byte_end":394800,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394805,"byte_end":394817,"line_start":43,"line_end":43,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395195,"byte_end":395206,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394925,"byte_end":395002,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395007,"byte_end":395010,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395015,"byte_end":395088,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395093,"byte_end":395166,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395171,"byte_end":395183,"line_start":52,"line_end":52,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395409,"byte_end":395419,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395341,"byte_end":395397,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":10613},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398233,"byte_end":398238,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":10616}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398071,"byte_end":398136,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398154,"byte_end":398221,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":2949},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399787,"byte_end":399791,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"pub fn copy<R, W: ?Sized>(R, &mut W) -> Copy<, R, W> where R: AsyncRead,\nW: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":398938,"byte_end":399013,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399014,"byte_end":399017,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399018,"byte_end":399101,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399102,"byte_end":399182,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399183,"byte_end":399255,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399256,"byte_end":399269,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399270,"byte_end":399273,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399274,"byte_end":399321,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399322,"byte_end":399325,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399326,"byte_end":399340,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399341,"byte_end":399344,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399345,"byte_end":399352,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399353,"byte_end":399394,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399395,"byte_end":399446,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399447,"byte_end":399450,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399451,"byte_end":399494,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399495,"byte_end":399542,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399543,"byte_end":399546,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399547,"byte_end":399600,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399601,"byte_end":399627,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399628,"byte_end":399631,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399632,"byte_end":399657,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399658,"byte_end":399711,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399712,"byte_end":399771,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":399772,"byte_end":399779,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10621},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":400133,"byte_end":400137,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":10625}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":400054,"byte_end":400121,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":400022,"byte_end":400036,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10651},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":400133,"byte_end":400137,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"__Copy","qualname":"::io::copy::_::__Copy","value":"__Copy {  }","parent":null,"children":[{"krate":0,"index":10656},{"krate":0,"index":10657},{"krate":0,"index":10658}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":400022,"byte_end":400036,"line_start":45,"line_end":45,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":2971},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401493,"byte_end":401501,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"pub fn copy_buf<R, W: ?Sized>(R, &mut W) -> CopyBuf<, R, W> where\nR: AsyncBufRead, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400637,"byte_end":400712,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400713,"byte_end":400716,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400717,"byte_end":400803,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400804,"byte_end":400884,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400885,"byte_end":400957,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400958,"byte_end":400971,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400972,"byte_end":400975,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":400976,"byte_end":401023,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401024,"byte_end":401027,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401028,"byte_end":401042,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401043,"byte_end":401046,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401047,"byte_end":401054,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401055,"byte_end":401096,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401097,"byte_end":401148,"line_start":21,"line_end":21,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401149,"byte_end":401152,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401153,"byte_end":401196,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401197,"byte_end":401244,"line_start":24,"line_end":24,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401245,"byte_end":401248,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401249,"byte_end":401306,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401307,"byte_end":401333,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401334,"byte_end":401337,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401338,"byte_end":401363,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401364,"byte_end":401417,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401418,"byte_end":401477,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401478,"byte_end":401485,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10686},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401847,"byte_end":401854,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10692},{"krate":0,"index":10690},{"krate":0,"index":10691}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401768,"byte_end":401835,"line_start":48,"line_end":48,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401736,"byte_end":401750,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10722},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401847,"byte_end":401854,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"__CopyBuf","qualname":"::io::copy_buf::_::__CopyBuf","value":"__CopyBuf {  }","parent":null,"children":[{"krate":0,"index":10727},{"krate":0,"index":10728},{"krate":0,"index":10729}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401736,"byte_end":401750,"line_start":46,"line_end":46,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10757},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403767,"byte_end":403773,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":10759}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":402992,"byte_end":403055,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403056,"byte_end":403089,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403090,"byte_end":403093,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403094,"byte_end":403162,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403163,"byte_end":403245,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403246,"byte_end":403325,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403326,"byte_end":403351,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403352,"byte_end":403355,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The standard library implements some I/O traits on various types which","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403356,"byte_end":403430,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403431,"byte_end":403498,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403499,"byte_end":403532,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403533,"byte_end":403536,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403537,"byte_end":403576,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403577,"byte_end":403616,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403617,"byte_end":403658,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403659,"byte_end":403722,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404353,"byte_end":404356,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"pub fn new(T) -> Cursor<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403832,"byte_end":403907,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403912,"byte_end":403915,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403920,"byte_end":403994,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403999,"byte_end":404067,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404072,"byte_end":404110,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404115,"byte_end":404118,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404123,"byte_end":404137,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404142,"byte_end":404145,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404150,"byte_end":404157,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404162,"byte_end":404190,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404195,"byte_end":404198,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404203,"byte_end":404242,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404247,"byte_end":404295,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404300,"byte_end":404329,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404334,"byte_end":404341,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404808,"byte_end":404818,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404463,"byte_end":404520,"line_start":51,"line_end":51,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404525,"byte_end":404528,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404533,"byte_end":404547,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404552,"byte_end":404555,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404560,"byte_end":404567,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404572,"byte_end":404600,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404605,"byte_end":404608,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404613,"byte_end":404652,"line_start":58,"line_end":58,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404657,"byte_end":404705,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404710,"byte_end":404739,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404744,"byte_end":404747,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404752,"byte_end":404784,"line_start":62,"line_end":62,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404789,"byte_end":404796,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405226,"byte_end":405233,"line_start":81,"line_end":81,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404875,"byte_end":404935,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404940,"byte_end":404943,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404948,"byte_end":404962,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404967,"byte_end":404970,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404975,"byte_end":404982,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":404987,"byte_end":405015,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405020,"byte_end":405023,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405028,"byte_end":405067,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405072,"byte_end":405120,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405125,"byte_end":405154,"line_start":77,"line_end":77,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405159,"byte_end":405162,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405167,"byte_end":405202,"line_start":79,"line_end":79,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405207,"byte_end":405214,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405805,"byte_end":405812,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405289,"byte_end":405357,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405362,"byte_end":405365,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405370,"byte_end":405443,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405448,"byte_end":405510,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405515,"byte_end":405518,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405523,"byte_end":405537,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405542,"byte_end":405545,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405550,"byte_end":405557,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405562,"byte_end":405590,"line_start":93,"line_end":93,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405595,"byte_end":405598,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405603,"byte_end":405646,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405651,"byte_end":405699,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405704,"byte_end":405733,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405738,"byte_end":405741,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405746,"byte_end":405781,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405786,"byte_end":405793,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406470,"byte_end":406478,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"pub fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405876,"byte_end":405924,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405929,"byte_end":405932,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405937,"byte_end":405951,"line_start":107,"line_end":107,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405956,"byte_end":405959,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405964,"byte_end":405971,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":405976,"byte_end":406017,"line_start":110,"line_end":110,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406022,"byte_end":406076,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406081,"byte_end":406084,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406089,"byte_end":406141,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406146,"byte_end":406149,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406154,"byte_end":406189,"line_start":115,"line_end":115,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406194,"byte_end":406197,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406202,"byte_end":406245,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406250,"byte_end":406285,"line_start":118,"line_end":118,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406290,"byte_end":406293,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406298,"byte_end":406342,"line_start":120,"line_end":120,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406347,"byte_end":406382,"line_start":121,"line_end":121,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406387,"byte_end":406446,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406451,"byte_end":406458,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406946,"byte_end":406958,"line_start":145,"line_end":145,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"pub fn set_position(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406536,"byte_end":406573,"line_start":128,"line_end":128,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406578,"byte_end":406581,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406586,"byte_end":406600,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406605,"byte_end":406608,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406613,"byte_end":406620,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406625,"byte_end":406653,"line_start":133,"line_end":133,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406658,"byte_end":406661,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406666,"byte_end":406718,"line_start":135,"line_end":135,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406723,"byte_end":406726,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406731,"byte_end":406766,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406771,"byte_end":406774,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406779,"byte_end":406804,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406809,"byte_end":406844,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406849,"byte_end":406852,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406857,"byte_end":406882,"line_start":142,"line_end":142,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406887,"byte_end":406922,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":406927,"byte_end":406934,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3031},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409739,"byte_end":409744,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":3032}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409638,"byte_end":409678,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409679,"byte_end":409727,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3033},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410304,"byte_end":410309,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409765,"byte_end":409812,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409813,"byte_end":409816,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409817,"byte_end":409889,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409890,"byte_end":409893,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409894,"byte_end":409908,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409909,"byte_end":409912,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409913,"byte_end":409978,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409979,"byte_end":409982,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409983,"byte_end":409990,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":409991,"byte_end":410032,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410033,"byte_end":410075,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410076,"byte_end":410079,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410080,"byte_end":410115,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410116,"byte_end":410149,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410150,"byte_end":410196,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410197,"byte_end":410228,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410229,"byte_end":410288,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410289,"byte_end":410296,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10785},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411377,"byte_end":411384,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":10788}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411207,"byte_end":411280,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411298,"byte_end":411365,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10793},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413159,"byte_end":413164,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":10796}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":412997,"byte_end":413062,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413080,"byte_end":413147,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10801},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":414040,"byte_end":414045,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":10806},{"krate":0,"index":10803},{"krate":0,"index":10804},{"krate":0,"index":10805}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":413980,"byte_end":414028,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":413948,"byte_end":413962,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10830},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":414040,"byte_end":414045,"line_start":15,"line_end":15,"column_start":12,"column_end":17},"name":"__Lines","qualname":"::io::lines::_::__Lines","value":"__Lines {  }","parent":null,"children":[{"krate":0,"index":10833},{"krate":0,"index":10834}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":413948,"byte_end":413962,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10852},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415275,"byte_end":415279,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":10855},{"krate":0,"index":10856}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415116,"byte_end":415178,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415196,"byte_end":415263,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10861},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416171,"byte_end":416183,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":10864},{"krate":0,"index":10865}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":415994,"byte_end":416074,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416092,"byte_end":416159,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10870},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417124,"byte_end":417133,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10873},{"krate":0,"index":10874}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":416953,"byte_end":417027,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417045,"byte_end":417112,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10879},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":418452,"byte_end":418460,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":10882},{"krate":0,"index":10883},{"krate":0,"index":10884},{"krate":0,"index":10885}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":418280,"byte_end":418355,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":418373,"byte_end":418440,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10890},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420301,"byte_end":420310,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":10893},{"krate":0,"index":10894},{"krate":0,"index":10895}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420128,"byte_end":420204,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420222,"byte_end":420289,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10900},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":423042,"byte_end":423054,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":10903},{"krate":0,"index":10904},{"krate":0,"index":10905},{"krate":0,"index":10906}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":422863,"byte_end":422945,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":422963,"byte_end":423030,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":10911},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":424972,"byte_end":424981,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":10914},{"krate":0,"index":10915},{"krate":0,"index":10916},{"krate":0,"index":10917}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":424798,"byte_end":424875,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":424893,"byte_end":424960,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426735,"byte_end":426741,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":3275}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426633,"byte_end":426674,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426675,"byte_end":426723,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3276},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427298,"byte_end":427304,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426761,"byte_end":426830,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426831,"byte_end":426834,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426835,"byte_end":426915,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426916,"byte_end":426935,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426936,"byte_end":426939,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426940,"byte_end":426954,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426955,"byte_end":426958,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426959,"byte_end":426966,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":426967,"byte_end":427008,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427009,"byte_end":427051,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427052,"byte_end":427055,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427056,"byte_end":427084,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427085,"byte_end":427124,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427125,"byte_end":427175,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427176,"byte_end":427222,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427223,"byte_end":427282,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427283,"byte_end":427290,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10922},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428576,"byte_end":428580,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":10925},{"krate":0,"index":10926}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428413,"byte_end":428479,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428497,"byte_end":428564,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3316},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429350,"byte_end":429354,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":3317}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429250,"byte_end":429289,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429290,"byte_end":429338,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3318},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429962,"byte_end":429966,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429375,"byte_end":429452,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429453,"byte_end":429456,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429457,"byte_end":429552,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429553,"byte_end":429610,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429611,"byte_end":429614,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429615,"byte_end":429629,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429630,"byte_end":429633,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429634,"byte_end":429645,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429646,"byte_end":429687,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429688,"byte_end":429731,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429732,"byte_end":429735,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429736,"byte_end":429773,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429774,"byte_end":429806,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429807,"byte_end":429856,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429857,"byte_end":429886,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429887,"byte_end":429946,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":429947,"byte_end":429954,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10931},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431128,"byte_end":431136,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":10933}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431031,"byte_end":431099,"line_start":8,"line_end":8,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":10937},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431265,"byte_end":431274,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":10939}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431168,"byte_end":431236,"line_start":14,"line_end":14,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432020,"byte_end":432027,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"pub fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431774,"byte_end":431851,"line_start":37,"line_end":37,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431856,"byte_end":431927,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431932,"byte_end":432008,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432527,"byte_end":432534,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"pub fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432281,"byte_end":432358,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432363,"byte_end":432434,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432439,"byte_end":432515,"line_start":50,"line_end":50,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3373},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434046,"byte_end":434058,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":433890,"byte_end":433965,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":433966,"byte_end":434034,"line_start":93,"line_end":93,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3376},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434062,"byte_end":434077,"line_start":94,"line_end":94,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3377},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434079,"byte_end":434095,"line_start":94,"line_end":94,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":3373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10943},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":434984,"byte_end":434988,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10946},{"krate":0,"index":10945}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":434905,"byte_end":434972,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":434873,"byte_end":434887,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":10966},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":434984,"byte_end":434988,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::io::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":10969},{"krate":0,"index":10970}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":434873,"byte_end":434887,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435979,"byte_end":435984,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435226,"byte_end":435279,"line_start":25,"line_end":25,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435284,"byte_end":435330,"line_start":26,"line_end":26,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435335,"byte_end":435338,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435343,"byte_end":435353,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435358,"byte_end":435361,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435366,"byte_end":435443,"line_start":30,"line_end":30,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435448,"byte_end":435517,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435522,"byte_end":435525,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435530,"byte_end":435544,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435549,"byte_end":435552,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435557,"byte_end":435564,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435569,"byte_end":435610,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435615,"byte_end":435659,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435664,"byte_end":435667,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435672,"byte_end":435719,"line_start":39,"line_end":39,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435724,"byte_end":435752,"line_start":40,"line_end":40,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435757,"byte_end":435760,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435765,"byte_end":435799,"line_start":42,"line_end":42,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435804,"byte_end":435846,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435851,"byte_end":435854,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435859,"byte_end":435891,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435896,"byte_end":435955,"line_start":46,"line_end":46,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435960,"byte_end":435967,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436896,"byte_end":436905,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436032,"byte_end":436103,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436108,"byte_end":436182,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436187,"byte_end":436262,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436267,"byte_end":436291,"line_start":55,"line_end":55,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436296,"byte_end":436299,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436304,"byte_end":436318,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436323,"byte_end":436326,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436331,"byte_end":436338,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436343,"byte_end":436384,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436389,"byte_end":436433,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436438,"byte_end":436441,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436446,"byte_end":436493,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436498,"byte_end":436526,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436531,"byte_end":436534,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436539,"byte_end":436573,"line_start":66,"line_end":66,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436578,"byte_end":436620,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436625,"byte_end":436628,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436633,"byte_end":436654,"line_start":69,"line_end":69,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436659,"byte_end":436691,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436696,"byte_end":436699,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436704,"byte_end":436727,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436732,"byte_end":436774,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436779,"byte_end":436800,"line_start":74,"line_end":74,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436805,"byte_end":436808,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436813,"byte_end":436872,"line_start":76,"line_end":76,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":436877,"byte_end":436884,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":10992},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439468,"byte_end":439474,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":10994},{"krate":0,"index":10995}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438513,"byte_end":438560,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438561,"byte_end":438564,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438565,"byte_end":438641,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438642,"byte_end":438720,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438721,"byte_end":438797,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438798,"byte_end":438873,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438874,"byte_end":438947,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438948,"byte_end":438979,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438980,"byte_end":438983,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":438984,"byte_end":439055,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439056,"byte_end":439135,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439136,"byte_end":439163,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439164,"byte_end":439167,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439168,"byte_end":439242,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439243,"byte_end":439317,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439318,"byte_end":439397,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439398,"byte_end":439439,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439783,"byte_end":439786,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439559,"byte_end":439630,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439635,"byte_end":439645,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439650,"byte_end":439653,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439658,"byte_end":439732,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439737,"byte_end":439771,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439998,"byte_end":440005,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439901,"byte_end":439968,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439973,"byte_end":439986,"line_start":40,"line_end":40,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440150,"byte_end":440157,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440052,"byte_end":440120,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440125,"byte_end":440138,"line_start":46,"line_end":46,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440288,"byte_end":440298,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440216,"byte_end":440276,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440439,"byte_end":440444,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"pub fn start(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440342,"byte_end":440414,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440419,"byte_end":440427,"line_start":57,"line_end":57,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440591,"byte_end":440594,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"pub fn end(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440499,"byte_end":440566,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440571,"byte_end":440579,"line_start":63,"line_end":63,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":441040,"byte_end":441043,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"pub fn set<R: RangeBounds<usize>>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440647,"byte_end":440707,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440712,"byte_end":440715,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440720,"byte_end":440732,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440737,"byte_end":440740,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440745,"byte_end":440818,"line_start":72,"line_end":72,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440823,"byte_end":440900,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440905,"byte_end":440908,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440913,"byte_end":440970,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":440975,"byte_end":441028,"line_start":76,"line_end":76,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":10999},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442230,"byte_end":442235,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":11002},{"krate":0,"index":11003}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442068,"byte_end":442133,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442151,"byte_end":442218,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11008},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443126,"byte_end":443139,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":11011},{"krate":0,"index":11012}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":442946,"byte_end":443029,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443047,"byte_end":443114,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11017},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":444073,"byte_end":444081,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":11020},{"krate":0,"index":11021}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":443903,"byte_end":443976,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":443994,"byte_end":444061,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3497},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352808,"byte_end":352820,"line_start":140,"line_end":140,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3510},{"krate":0,"index":3511}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352726,"byte_end":352797,"line_start":139,"line_end":139,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353673,"byte_end":353678,"line_start":164,"line_end":164,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352838,"byte_end":352903,"line_start":141,"line_end":141,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352908,"byte_end":352911,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352916,"byte_end":352996,"line_start":143,"line_end":143,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353001,"byte_end":353073,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353078,"byte_end":353099,"line_start":145,"line_end":145,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353104,"byte_end":353107,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353112,"byte_end":353126,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353131,"byte_end":353134,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353139,"byte_end":353146,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353151,"byte_end":353192,"line_start":150,"line_end":150,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353197,"byte_end":353241,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353246,"byte_end":353249,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353254,"byte_end":353298,"line_start":153,"line_end":153,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353303,"byte_end":353347,"line_start":154,"line_end":154,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353352,"byte_end":353355,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353360,"byte_end":353404,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353409,"byte_end":353441,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353446,"byte_end":353449,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353454,"byte_end":353487,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353492,"byte_end":353535,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353540,"byte_end":353589,"line_start":161,"line_end":161,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353594,"byte_end":353653,"line_start":162,"line_end":162,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353658,"byte_end":353665,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354718,"byte_end":354722,"line_start":196,"line_end":196,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353816,"byte_end":353890,"line_start":172,"line_end":172,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353895,"byte_end":353931,"line_start":173,"line_end":173,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353936,"byte_end":353939,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":353944,"byte_end":354022,"line_start":175,"line_end":175,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354027,"byte_end":354054,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354059,"byte_end":354062,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354067,"byte_end":354081,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354086,"byte_end":354089,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354094,"byte_end":354101,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354106,"byte_end":354147,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354152,"byte_end":354196,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354201,"byte_end":354204,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354209,"byte_end":354256,"line_start":184,"line_end":184,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354261,"byte_end":354291,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354296,"byte_end":354299,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354304,"byte_end":354356,"line_start":187,"line_end":187,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354361,"byte_end":354364,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354369,"byte_end":354440,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354445,"byte_end":354509,"line_start":190,"line_end":190,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354514,"byte_end":354559,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354564,"byte_end":354589,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354594,"byte_end":354634,"line_start":193,"line_end":193,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354639,"byte_end":354698,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354703,"byte_end":354710,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355089,"byte_end":355102,"line_start":207,"line_end":207,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"pub fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored\nwhere Self: Unpin","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354851,"byte_end":354935,"line_start":202,"line_end":202,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354940,"byte_end":354958,"line_start":203,"line_end":203,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354963,"byte_end":354966,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":354971,"byte_end":355049,"line_start":205,"line_end":205,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355054,"byte_end":355081,"line_start":206,"line_end":206,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356474,"byte_end":356484,"line_start":250,"line_end":250,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355261,"byte_end":355333,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355338,"byte_end":355396,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355401,"byte_end":355404,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355409,"byte_end":355483,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355488,"byte_end":355491,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355496,"byte_end":355573,"line_start":218,"line_end":218,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355578,"byte_end":355600,"line_start":219,"line_end":219,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355605,"byte_end":355608,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355613,"byte_end":355627,"line_start":221,"line_end":221,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355632,"byte_end":355635,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355640,"byte_end":355647,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355652,"byte_end":355693,"line_start":224,"line_end":224,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355698,"byte_end":355742,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355747,"byte_end":355750,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355755,"byte_end":355802,"line_start":227,"line_end":227,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355807,"byte_end":355837,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355842,"byte_end":355845,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355850,"byte_end":355892,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355897,"byte_end":355900,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355905,"byte_end":355942,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":355947,"byte_end":356006,"line_start":233,"line_end":233,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356011,"byte_end":356018,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356023,"byte_end":356026,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356031,"byte_end":356071,"line_start":236,"line_end":236,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356076,"byte_end":356079,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356084,"byte_end":356091,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356096,"byte_end":356137,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356142,"byte_end":356192,"line_start":240,"line_end":240,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356197,"byte_end":356200,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356205,"byte_end":356252,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356257,"byte_end":356287,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356292,"byte_end":356295,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356300,"byte_end":356354,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356359,"byte_end":356362,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356367,"byte_end":356440,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356445,"byte_end":356454,"line_start":248,"line_end":248,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356459,"byte_end":356466,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357276,"byte_end":357287,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356646,"byte_end":356719,"line_start":259,"line_end":259,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356724,"byte_end":356727,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356732,"byte_end":356790,"line_start":261,"line_end":261,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356795,"byte_end":356798,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356803,"byte_end":356817,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356822,"byte_end":356825,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356830,"byte_end":356837,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356842,"byte_end":356883,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356888,"byte_end":356932,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356937,"byte_end":356940,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356945,"byte_end":356992,"line_start":269,"line_end":269,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":356997,"byte_end":357040,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357045,"byte_end":357048,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357053,"byte_end":357108,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357113,"byte_end":357116,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357121,"byte_end":357146,"line_start":274,"line_end":274,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357151,"byte_end":357192,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357197,"byte_end":357256,"line_start":276,"line_end":276,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357261,"byte_end":357268,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358092,"byte_end":358106,"line_start":306,"line_end":306,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357452,"byte_end":357525,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357530,"byte_end":357533,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357538,"byte_end":357596,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357601,"byte_end":357604,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357609,"byte_end":357623,"line_start":291,"line_end":291,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357628,"byte_end":357631,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357636,"byte_end":357643,"line_start":293,"line_end":293,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357648,"byte_end":357689,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357694,"byte_end":357738,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357743,"byte_end":357746,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357751,"byte_end":357798,"line_start":297,"line_end":297,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357803,"byte_end":357849,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357854,"byte_end":357857,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357862,"byte_end":357920,"line_start":300,"line_end":300,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357925,"byte_end":357928,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357933,"byte_end":357958,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":357963,"byte_end":358008,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358013,"byte_end":358072,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358077,"byte_end":358084,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359433,"byte_end":359438,"line_start":344,"line_end":344,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"pub fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where\nSelf: AsyncWrite + Sized","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358276,"byte_end":358347,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358352,"byte_end":358355,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358360,"byte_end":358430,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358435,"byte_end":358460,"line_start":318,"line_end":318,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358465,"byte_end":358468,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358473,"byte_end":358487,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358492,"byte_end":358495,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358500,"byte_end":358507,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358512,"byte_end":358553,"line_start":323,"line_end":323,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358558,"byte_end":358608,"line_start":324,"line_end":324,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358613,"byte_end":358616,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358621,"byte_end":358691,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358696,"byte_end":358766,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358771,"byte_end":358822,"line_start":328,"line_end":328,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358827,"byte_end":358830,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358835,"byte_end":358878,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358883,"byte_end":358946,"line_start":331,"line_end":331,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":358951,"byte_end":358998,"line_start":332,"line_end":332,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359003,"byte_end":359006,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359011,"byte_end":359016,"line_start":334,"line_end":334,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359021,"byte_end":359092,"line_start":335,"line_end":335,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359097,"byte_end":359149,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359154,"byte_end":359206,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359211,"byte_end":359216,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359221,"byte_end":359224,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359229,"byte_end":359291,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359296,"byte_end":359349,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359354,"byte_end":359413,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359418,"byte_end":359425,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360159,"byte_end":360163,"line_start":369,"line_end":369,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3497},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359566,"byte_end":359636,"line_start":350,"line_end":350,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359641,"byte_end":359672,"line_start":351,"line_end":351,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359677,"byte_end":359680,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359685,"byte_end":359699,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359704,"byte_end":359707,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359712,"byte_end":359719,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359724,"byte_end":359765,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359770,"byte_end":359814,"line_start":357,"line_end":357,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359819,"byte_end":359822,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359827,"byte_end":359874,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359879,"byte_end":359907,"line_start":360,"line_end":360,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359912,"byte_end":359915,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359920,"byte_end":359954,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":359959,"byte_end":360001,"line_start":363,"line_end":363,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360006,"byte_end":360009,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360014,"byte_end":360035,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360040,"byte_end":360075,"line_start":366,"line_end":366,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360080,"byte_end":360139,"line_start":367,"line_end":367,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360144,"byte_end":360151,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3514},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360950,"byte_end":360963,"line_start":393,"line_end":393,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3519},{"krate":0,"index":3521}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360867,"byte_end":360939,"line_start":392,"line_end":392,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3515},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361704,"byte_end":361709,"line_start":416,"line_end":416,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360982,"byte_end":361047,"line_start":394,"line_end":394,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361052,"byte_end":361055,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361060,"byte_end":361074,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361079,"byte_end":361082,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361087,"byte_end":361094,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361099,"byte_end":361140,"line_start":399,"line_end":399,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361145,"byte_end":361194,"line_start":400,"line_end":400,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361199,"byte_end":361236,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361241,"byte_end":361244,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361249,"byte_end":361283,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361288,"byte_end":361291,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361296,"byte_end":361301,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361306,"byte_end":361352,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361357,"byte_end":361424,"line_start":407,"line_end":407,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361429,"byte_end":361472,"line_start":408,"line_end":408,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361477,"byte_end":361520,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361525,"byte_end":361557,"line_start":410,"line_end":410,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361562,"byte_end":361567,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361572,"byte_end":361575,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361580,"byte_end":361620,"line_start":413,"line_end":413,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361625,"byte_end":361684,"line_start":414,"line_end":414,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361689,"byte_end":361696,"line_start":415,"line_end":415,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361882,"byte_end":361887,"line_start":423,"line_end":423,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"pub fn close(&mut Self) -> Close<, Self> where Self: Unpin","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361809,"byte_end":361874,"line_start":422,"line_end":422,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362193,"byte_end":362198,"line_start":433,"line_end":433,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":361987,"byte_end":362058,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362063,"byte_end":362066,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362071,"byte_end":362153,"line_start":431,"line_end":431,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362158,"byte_end":362185,"line_start":432,"line_end":432,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362569,"byte_end":362583,"line_start":444,"line_end":444,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362325,"byte_end":362411,"line_start":439,"line_end":439,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362416,"byte_end":362434,"line_start":440,"line_end":440,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362439,"byte_end":362442,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362447,"byte_end":362529,"line_start":442,"line_end":442,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362534,"byte_end":362561,"line_start":443,"line_end":443,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363390,"byte_end":363399,"line_start":470,"line_end":470,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":3514},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362737,"byte_end":362769,"line_start":450,"line_end":450,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362774,"byte_end":362777,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362782,"byte_end":362863,"line_start":452,"line_end":452,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362868,"byte_end":362890,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362895,"byte_end":362898,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362903,"byte_end":362981,"line_start":455,"line_end":455,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362986,"byte_end":362989,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":362994,"byte_end":363008,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363013,"byte_end":363016,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363021,"byte_end":363028,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363033,"byte_end":363074,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363079,"byte_end":363124,"line_start":461,"line_end":461,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363129,"byte_end":363132,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363137,"byte_end":363184,"line_start":463,"line_end":463,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363189,"byte_end":363192,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363197,"byte_end":363240,"line_start":465,"line_end":465,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363245,"byte_end":363248,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363253,"byte_end":363306,"line_start":467,"line_end":467,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363311,"byte_end":363370,"line_start":468,"line_end":468,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":363375,"byte_end":363382,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3525},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367135,"byte_end":367147,"line_start":580,"line_end":580,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":3526}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367053,"byte_end":367124,"line_start":579,"line_end":579,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367417,"byte_end":367421,"line_start":586,"line_end":586,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":3525},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367165,"byte_end":367234,"line_start":581,"line_end":581,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367239,"byte_end":367292,"line_start":582,"line_end":582,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367297,"byte_end":367300,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367305,"byte_end":367382,"line_start":584,"line_end":584,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367387,"byte_end":367409,"line_start":585,"line_end":585,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":3529},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367673,"byte_end":367688,"line_start":596,"line_end":596,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3536}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367588,"byte_end":367662,"line_start":595,"line_end":595,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3530},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368642,"byte_end":368650,"line_start":620,"line_end":620,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"pub fn fill_buf(&mut Self) -> FillBuf<, Self> where Self: Unpin","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367709,"byte_end":367798,"line_start":597,"line_end":597,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367803,"byte_end":367835,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367840,"byte_end":367843,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367848,"byte_end":367941,"line_start":600,"line_end":600,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367946,"byte_end":367949,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367954,"byte_end":367965,"line_start":602,"line_end":602,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367970,"byte_end":368011,"line_start":603,"line_end":603,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368016,"byte_end":368095,"line_start":604,"line_end":604,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368100,"byte_end":368103,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368108,"byte_end":368196,"line_start":606,"line_end":606,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368201,"byte_end":368204,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368209,"byte_end":368265,"line_start":608,"line_end":608,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368270,"byte_end":368298,"line_start":609,"line_end":609,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368303,"byte_end":368306,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368311,"byte_end":368361,"line_start":611,"line_end":611,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368366,"byte_end":368394,"line_start":612,"line_end":612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368399,"byte_end":368402,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368407,"byte_end":368463,"line_start":614,"line_end":614,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368468,"byte_end":368496,"line_start":615,"line_end":615,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368501,"byte_end":368504,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368509,"byte_end":368558,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368563,"byte_end":368622,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368627,"byte_end":368634,"line_start":619,"line_end":619,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369412,"byte_end":369425,"line_start":643,"line_end":643,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"pub fn consume_unpin(&mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368754,"byte_end":368832,"line_start":626,"line_end":626,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368837,"byte_end":368840,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368845,"byte_end":368856,"line_start":628,"line_end":628,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368861,"byte_end":368902,"line_start":629,"line_end":629,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368907,"byte_end":368986,"line_start":630,"line_end":630,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368991,"byte_end":368994,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":368999,"byte_end":369068,"line_start":632,"line_end":632,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369073,"byte_end":369076,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369081,"byte_end":369137,"line_start":634,"line_end":634,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369142,"byte_end":369170,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369175,"byte_end":369178,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369183,"byte_end":369233,"line_start":637,"line_end":637,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369238,"byte_end":369266,"line_start":638,"line_end":638,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369271,"byte_end":369274,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369279,"byte_end":369328,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369333,"byte_end":369392,"line_start":641,"line_end":641,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369397,"byte_end":369404,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371112,"byte_end":371122,"line_start":690,"line_end":690,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369529,"byte_end":369604,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369609,"byte_end":369676,"line_start":650,"line_end":650,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369681,"byte_end":369778,"line_start":651,"line_end":651,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369783,"byte_end":369786,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369791,"byte_end":369861,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369866,"byte_end":369940,"line_start":654,"line_end":654,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":369945,"byte_end":370000,"line_start":655,"line_end":655,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370005,"byte_end":370008,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370013,"byte_end":370091,"line_start":657,"line_end":657,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370096,"byte_end":370123,"line_start":658,"line_end":658,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370128,"byte_end":370131,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370136,"byte_end":370213,"line_start":660,"line_end":660,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370218,"byte_end":370240,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370245,"byte_end":370248,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370253,"byte_end":370267,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370272,"byte_end":370275,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370280,"byte_end":370287,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370292,"byte_end":370333,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370338,"byte_end":370385,"line_start":667,"line_end":667,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370390,"byte_end":370393,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370398,"byte_end":370447,"line_start":669,"line_end":669,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370452,"byte_end":370477,"line_start":670,"line_end":670,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370482,"byte_end":370485,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370490,"byte_end":370513,"line_start":672,"line_end":672,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370518,"byte_end":370579,"line_start":673,"line_end":673,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370584,"byte_end":370613,"line_start":674,"line_end":674,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370618,"byte_end":370649,"line_start":675,"line_end":675,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370654,"byte_end":370670,"line_start":676,"line_end":676,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370675,"byte_end":370678,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370683,"byte_end":370706,"line_start":678,"line_end":678,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370711,"byte_end":370772,"line_start":679,"line_end":679,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370777,"byte_end":370806,"line_start":680,"line_end":680,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370811,"byte_end":370841,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370846,"byte_end":370862,"line_start":682,"line_end":682,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370867,"byte_end":370870,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370875,"byte_end":370898,"line_start":684,"line_end":684,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370903,"byte_end":370964,"line_start":685,"line_end":685,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":370969,"byte_end":370998,"line_start":686,"line_end":686,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371003,"byte_end":371028,"line_start":687,"line_end":687,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371033,"byte_end":371092,"line_start":688,"line_end":688,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371097,"byte_end":371104,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3534},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373293,"byte_end":373302,"line_start":751,"line_end":751,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371311,"byte_end":371386,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371391,"byte_end":371462,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371467,"byte_end":371562,"line_start":702,"line_end":702,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371567,"byte_end":371570,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371575,"byte_end":371645,"line_start":704,"line_end":704,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371650,"byte_end":371725,"line_start":705,"line_end":705,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371730,"byte_end":371800,"line_start":706,"line_end":706,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371805,"byte_end":371815,"line_start":707,"line_end":707,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371820,"byte_end":371823,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371828,"byte_end":371906,"line_start":709,"line_end":709,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371911,"byte_end":371938,"line_start":710,"line_end":710,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371943,"byte_end":371946,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":371951,"byte_end":372028,"line_start":712,"line_end":712,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372033,"byte_end":372055,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372060,"byte_end":372063,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372068,"byte_end":372080,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372085,"byte_end":372088,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372093,"byte_end":372166,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372171,"byte_end":372244,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372249,"byte_end":372323,"line_start":719,"line_end":719,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372328,"byte_end":372384,"line_start":720,"line_end":720,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372389,"byte_end":372392,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372397,"byte_end":372444,"line_start":722,"line_end":722,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372449,"byte_end":372452,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372457,"byte_end":372471,"line_start":724,"line_end":724,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372476,"byte_end":372479,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372484,"byte_end":372491,"line_start":726,"line_end":726,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372496,"byte_end":372537,"line_start":727,"line_end":727,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372542,"byte_end":372589,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372594,"byte_end":372597,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372602,"byte_end":372648,"line_start":730,"line_end":730,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372653,"byte_end":372685,"line_start":731,"line_end":731,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372690,"byte_end":372693,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372698,"byte_end":372721,"line_start":733,"line_end":733,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372726,"byte_end":372780,"line_start":734,"line_end":734,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372785,"byte_end":372814,"line_start":735,"line_end":735,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372819,"byte_end":372848,"line_start":736,"line_end":736,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372853,"byte_end":372869,"line_start":737,"line_end":737,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372874,"byte_end":372877,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372882,"byte_end":372905,"line_start":739,"line_end":739,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372910,"byte_end":372964,"line_start":740,"line_end":740,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":372969,"byte_end":372998,"line_start":741,"line_end":741,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373003,"byte_end":373030,"line_start":742,"line_end":742,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373035,"byte_end":373051,"line_start":743,"line_end":743,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373056,"byte_end":373059,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373064,"byte_end":373087,"line_start":745,"line_end":745,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373092,"byte_end":373146,"line_start":746,"line_end":746,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373151,"byte_end":373180,"line_start":747,"line_end":747,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373185,"byte_end":373209,"line_start":748,"line_end":748,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373214,"byte_end":373273,"line_start":749,"line_end":749,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373278,"byte_end":373285,"line_start":750,"line_end":750,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3536},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374787,"byte_end":374792,"line_start":789,"line_end":789,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373441,"byte_end":373492,"line_start":757,"line_end":757,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373497,"byte_end":373584,"line_start":758,"line_end":758,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373589,"byte_end":373592,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373597,"byte_end":373663,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373668,"byte_end":373750,"line_start":761,"line_end":761,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373755,"byte_end":373815,"line_start":762,"line_end":762,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373820,"byte_end":373823,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373828,"byte_end":373863,"line_start":764,"line_end":764,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373868,"byte_end":373890,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373895,"byte_end":373898,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373903,"byte_end":373915,"line_start":767,"line_end":767,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373920,"byte_end":373923,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":373928,"byte_end":374019,"line_start":769,"line_end":769,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374024,"byte_end":374027,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374032,"byte_end":374094,"line_start":771,"line_end":771,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374099,"byte_end":374102,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374107,"byte_end":374121,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374126,"byte_end":374129,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374134,"byte_end":374141,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374146,"byte_end":374187,"line_start":776,"line_end":776,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374192,"byte_end":374239,"line_start":777,"line_end":777,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374244,"byte_end":374279,"line_start":778,"line_end":778,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374284,"byte_end":374287,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374292,"byte_end":374347,"line_start":780,"line_end":780,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374352,"byte_end":374355,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374360,"byte_end":374422,"line_start":782,"line_end":782,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374427,"byte_end":374498,"line_start":783,"line_end":783,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374503,"byte_end":374574,"line_start":784,"line_end":784,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374579,"byte_end":374650,"line_start":785,"line_end":785,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374655,"byte_end":374703,"line_start":786,"line_end":786,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374708,"byte_end":374767,"line_start":787,"line_end":787,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374772,"byte_end":374779,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3549},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445073,"byte_end":445080,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3551},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445095,"byte_end":445101,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445110,"byte_end":445119,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3559},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445311,"byte_end":445317,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":3561}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445342,"byte_end":445350,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":3559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3576},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":446654,"byte_end":446658,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11044},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447014,"byte_end":447021,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11065},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447755,"byte_end":447768,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11081},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":448110,"byte_end":448119,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11096},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449068,"byte_end":449075,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11111},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449786,"byte_end":449794,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11126},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450514,"byte_end":450525,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11138},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451343,"byte_end":451355,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11150},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":452436,"byte_end":452450,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3740},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":453209,"byte_end":453215,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11183},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":11184},{"krate":0,"index":11334},{"krate":0,"index":11335},{"krate":0,"index":11336},{"krate":0,"index":11337},{"krate":0,"index":11338},{"krate":0,"index":11339},{"krate":0,"index":11397}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12554,"byte_end":12579,"line_start":342,"line_end":342,"column_start":5,"column_end":30}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754112,"byte_end":8754159,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754160,"byte_end":8754163,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754164,"byte_end":8754239,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mod.rs","byte_start":8754240,"byte_end":8754297,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":11206},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755545,"byte_end":8755550,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":11208},{"krate":0,"index":11209},{"krate":0,"index":11210}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755218,"byte_end":8755244,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755245,"byte_end":8755248,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755249,"byte_end":8755263,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755264,"byte_end":8755267,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755268,"byte_end":8755347,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755348,"byte_end":8755430,"line_start":17,"line_end":17,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755431,"byte_end":8755515,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755516,"byte_end":8755533,"line_start":19,"line_end":19,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":11233},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756879,"byte_end":8756882,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756829,"byte_end":8756867,"line_start":74,"line_end":74,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":11234},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757314,"byte_end":8757324,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757068,"byte_end":8757123,"line_start":83,"line_end":83,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757128,"byte_end":8757131,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757136,"byte_end":8757150,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757155,"byte_end":8757158,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757163,"byte_end":8757170,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757175,"byte_end":8757204,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757209,"byte_end":8757212,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757217,"byte_end":8757247,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757252,"byte_end":8757290,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757295,"byte_end":8757302,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":11237},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757538,"byte_end":8757546,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757410,"byte_end":8757454,"line_start":99,"line_end":99,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757459,"byte_end":8757462,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757467,"byte_end":8757526,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":11238},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757967,"byte_end":8757971,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexLockFuture<, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757802,"byte_end":8757838,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757843,"byte_end":8757846,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757851,"byte_end":8757924,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757929,"byte_end":8757955,"line_start":114,"line_end":114,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":11239},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758632,"byte_end":8758639,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758122,"byte_end":8758177,"line_start":122,"line_end":122,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758182,"byte_end":8758185,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758190,"byte_end":8758265,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758270,"byte_end":8758344,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758349,"byte_end":8758352,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758357,"byte_end":8758371,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758376,"byte_end":8758379,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758384,"byte_end":8758391,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758396,"byte_end":8758437,"line_start":130,"line_end":130,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758442,"byte_end":8758471,"line_start":131,"line_end":131,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758476,"byte_end":8758479,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758484,"byte_end":8758518,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758523,"byte_end":8758549,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758554,"byte_end":8758594,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758599,"byte_end":8758608,"line_start":136,"line_end":136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8758613,"byte_end":8758620,"line_start":137,"line_end":137,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11243},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8760362,"byte_end":8760377,"line_start":183,"line_end":183,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":11246},{"krate":0,"index":11247}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8760269,"byte_end":8760350,"line_start":182,"line_end":182,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":11262},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8762991,"byte_end":8763001,"line_start":262,"line_end":262,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":11265}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8762827,"byte_end":8762891,"line_start":259,"line_end":259,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8762892,"byte_end":8762965,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8762966,"byte_end":8762979,"line_start":261,"line_end":261,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11269},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763570,"byte_end":8763573,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T)\n-> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763091,"byte_end":8763151,"line_start":267,"line_end":267,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763156,"byte_end":8763159,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763164,"byte_end":8763177,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763182,"byte_end":8763185,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763190,"byte_end":8763197,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763202,"byte_end":8763243,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763248,"byte_end":8763291,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763296,"byte_end":8763299,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763304,"byte_end":8763357,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763362,"byte_end":8763367,"line_start":276,"line_end":276,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763372,"byte_end":8763461,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763466,"byte_end":8763508,"line_start":278,"line_end":278,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763513,"byte_end":8763518,"line_start":279,"line_end":279,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763523,"byte_end":8763532,"line_start":280,"line_end":280,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763537,"byte_end":8763544,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763549,"byte_end":8763558,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":11285},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764904,"byte_end":8764920,"line_start":326,"line_end":326,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":11289},{"krate":0,"index":11290},{"krate":0,"index":11291}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764720,"byte_end":8764808,"line_start":324,"line_end":324,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764809,"byte_end":8764892,"line_start":325,"line_end":325,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":11296},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765686,"byte_end":8765689,"line_start":350,"line_end":350,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<V: ?Sized, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut U)\n-> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765097,"byte_end":8765157,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765162,"byte_end":8765165,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765170,"byte_end":8765183,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765188,"byte_end":8765191,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765196,"byte_end":8765203,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765208,"byte_end":8765249,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765254,"byte_end":8765315,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765320,"byte_end":8765323,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765328,"byte_end":8765381,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765386,"byte_end":8765391,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765396,"byte_end":8765485,"line_start":343,"line_end":343,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765490,"byte_end":8765580,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765585,"byte_end":8765624,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765629,"byte_end":8765634,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765639,"byte_end":8765648,"line_start":347,"line_end":347,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765653,"byte_end":8765660,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765665,"byte_end":8765674,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35875,"byte_end":35882,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36009,"byte_end":36016,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36250,"byte_end":36257,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37036,"byte_end":37043,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37277,"byte_end":37284,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40254,"byte_end":40258,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40360,"byte_end":40364,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42088,"byte_end":42092,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42201,"byte_end":42205,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43084,"byte_end":43087,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43262,"byte_end":43265,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43529,"byte_end":43532,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44650,"byte_end":44661,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44815,"byte_end":44826,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46006,"byte_end":46012,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46055,"byte_end":46061,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46319,"byte_end":46324,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46551,"byte_end":46556,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46653,"byte_end":46658,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46902,"byte_end":46908,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":47374,"byte_end":47380,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":48072,"byte_end":48077,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":49774,"byte_end":49780,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":49932,"byte_end":49938,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":51476,"byte_end":51481,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":53268,"byte_end":53274,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":53468,"byte_end":53474,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":53902,"byte_end":53910,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19175,"byte_end":19176,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76167,"byte_end":76177,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76342,"byte_end":76352,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76458,"byte_end":76468,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77121,"byte_end":77131,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77261,"byte_end":77271,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77524,"byte_end":77534,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":78565,"byte_end":78575,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":78828,"byte_end":78838,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82268,"byte_end":82281,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82414,"byte_end":82427,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82683,"byte_end":82696,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58889,"byte_end":58892,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84065,"byte_end":84069,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84642,"byte_end":84646,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84778,"byte_end":84782,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85359,"byte_end":85366,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85917,"byte_end":85924,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":86069,"byte_end":86076,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":86103,"byte_end":86110,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87431,"byte_end":87440,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":88455,"byte_end":88464,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":88680,"byte_end":88689,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90110,"byte_end":90122,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":91164,"byte_end":91176,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":91404,"byte_end":91416,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":92940,"byte_end":92952,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":93285,"byte_end":93297,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":93480,"byte_end":93492,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93902,"byte_end":93908,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94578,"byte_end":94584,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94726,"byte_end":94732,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95209,"byte_end":95214,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95393,"byte_end":95398,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95430,"byte_end":95435,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95532,"byte_end":95537,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":102829,"byte_end":102836,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104599,"byte_end":104606,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":105303,"byte_end":105310,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105780,"byte_end":105786,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":108028,"byte_end":108034,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":108737,"byte_end":108743,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109280,"byte_end":109289,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":110269,"byte_end":110278,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":110984,"byte_end":110993,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119210,"byte_end":119220,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120982,"byte_end":120992,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":122165,"byte_end":122175,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122657,"byte_end":122666,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124372,"byte_end":124381,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125734,"byte_end":125742,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126712,"byte_end":126720,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":128164,"byte_end":128172,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128830,"byte_end":128836,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129221,"byte_end":129227,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129608,"byte_end":129614,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129855,"byte_end":129861,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":130208,"byte_end":130214,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":130490,"byte_end":130496,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":130856,"byte_end":130862,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":132640,"byte_end":132646,"line_start":160,"line_end":160,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":133717,"byte_end":133723,"line_start":196,"line_end":196,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":135062,"byte_end":135068,"line_start":238,"line_end":238,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":135506,"byte_end":135512,"line_start":255,"line_end":255,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645674,"byte_end":8645683,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6655}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646985,"byte_end":8646996,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6657}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648872,"byte_end":8648879,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6661}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8649062,"byte_end":8649069,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8649095,"byte_end":8649104,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6665},{"krate":0,"index":6666}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650078,"byte_end":8650089,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6668}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187335,"byte_end":187340,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187609,"byte_end":187614,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187819,"byte_end":187824,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189373,"byte_end":189380,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189691,"byte_end":189698,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189874,"byte_end":189881,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":190773,"byte_end":190779,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":191054,"byte_end":191060,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":191835,"byte_end":191841,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192510,"byte_end":192519,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6908},{"krate":0,"index":6909}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192752,"byte_end":192761,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192879,"byte_end":192888,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194272,"byte_end":194278,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194751,"byte_end":194757,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":195151,"byte_end":195157,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":195506,"byte_end":195512,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197661,"byte_end":197670,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197967,"byte_end":197976,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":7049},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7052}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":198277,"byte_end":198286,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":198563,"byte_end":198572,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200649,"byte_end":200656,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":7110},{"krate":0,"index":7111},{"krate":0,"index":7112},{"krate":0,"index":7113}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200825,"byte_end":200832,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":201024,"byte_end":201031,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202473,"byte_end":202477,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202833,"byte_end":202837,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":203170,"byte_end":203174,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":203421,"byte_end":203425,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":204958,"byte_end":204965,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":205258,"byte_end":205265,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":205559,"byte_end":205566,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":205817,"byte_end":205824,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206873,"byte_end":206877,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7367},{"krate":0,"index":7368}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207378,"byte_end":207382,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207480,"byte_end":207484,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208684,"byte_end":208696,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":211206,"byte_end":211218,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1310}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":211338,"byte_end":211350,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212198,"byte_end":212201,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212416,"byte_end":212419,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":7504},{"krate":0,"index":7505},{"krate":0,"index":7506},{"krate":0,"index":7507}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212593,"byte_end":212596,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212770,"byte_end":212773,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":213920,"byte_end":213924,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":213975,"byte_end":213979,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":214130,"byte_end":214134,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":214273,"byte_end":214277,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":214926,"byte_end":214940,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":215101,"byte_end":215115,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":215259,"byte_end":215273,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216448,"byte_end":216456,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":7662},{"krate":0,"index":7663},{"krate":0,"index":7664},{"krate":0,"index":7665},{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":217645,"byte_end":217653,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":217795,"byte_end":217803,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":218961,"byte_end":218965,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":219236,"byte_end":219240,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":219351,"byte_end":219355,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220201,"byte_end":220205,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7763}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220433,"byte_end":220437,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220555,"byte_end":220559,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":222186,"byte_end":222195,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":222647,"byte_end":222656,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":7836},{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7839}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":223085,"byte_end":223094,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1484}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":223354,"byte_end":223363,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225646,"byte_end":225650,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":7885},{"krate":0,"index":7886},{"krate":0,"index":7887},{"krate":0,"index":7888}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225860,"byte_end":225864,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":226858,"byte_end":226862,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":227809,"byte_end":227818,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":228266,"byte_end":228275,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":7961},{"krate":0,"index":7962},{"krate":0,"index":7963},{"krate":0,"index":7964}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":228697,"byte_end":228706,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":230260,"byte_end":230269,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231581,"byte_end":231590,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1563}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231917,"byte_end":231926,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":234119,"byte_end":234128,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":235160,"byte_end":235169,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236043,"byte_end":236047,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236337,"byte_end":236341,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":8094},{"krate":0,"index":8095},{"krate":0,"index":8096},{"krate":0,"index":8097}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236650,"byte_end":236654,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236892,"byte_end":236896,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":238762,"byte_end":238765,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240416,"byte_end":240419,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240610,"byte_end":240613,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":243257,"byte_end":243263,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":8209},{"krate":0,"index":8210},{"krate":0,"index":8211},{"krate":0,"index":8212}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":243774,"byte_end":243780,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":245418,"byte_end":245424,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246353,"byte_end":246364,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":8261},{"krate":0,"index":8262},{"krate":0,"index":8263},{"krate":0,"index":8264}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246729,"byte_end":246740,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":248848,"byte_end":248859,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1695}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":249789,"byte_end":249793,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":250279,"byte_end":250283,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":250447,"byte_end":250451,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":8341},{"krate":0,"index":8342},{"krate":0,"index":8343},{"krate":0,"index":8344}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":250918,"byte_end":250922,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":252149,"byte_end":252153,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8666763,"byte_end":8666778,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8362}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8667110,"byte_end":8667125,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8365},{"krate":0,"index":8438},{"krate":0,"index":8439},{"krate":0,"index":8440},{"krate":0,"index":8441}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8667538,"byte_end":8667553,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8368},{"krate":0,"index":8369},{"krate":0,"index":8370}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8669030,"byte_end":8669045,"line_start":106,"line_end":106,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8373}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8670075,"byte_end":8670083,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8390}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8670430,"byte_end":8670438,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8393},{"krate":0,"index":8442},{"krate":0,"index":8443},{"krate":0,"index":8444},{"krate":0,"index":8445}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8670775,"byte_end":8670783,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8396},{"krate":0,"index":8397},{"krate":0,"index":8398}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8673095,"byte_end":8673112,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8419}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8673458,"byte_end":8673475,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8424}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8673946,"byte_end":8673963,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8429}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8674205,"byte_end":8674222,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8434},{"krate":0,"index":8435}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":253135,"byte_end":253146,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1766},{"krate":0,"index":8491},{"krate":0,"index":8492},{"krate":0,"index":8493},{"krate":0,"index":8494}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":253356,"byte_end":253367,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":254275,"byte_end":254286,"line_start":61,"line_end":61,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145344,"byte_end":145345,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":287898,"byte_end":287905,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1930}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":288198,"byte_end":288205,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":8561},{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8564}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":288498,"byte_end":288505,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":289683,"byte_end":289690,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290585,"byte_end":290595,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":8838},{"krate":0,"index":8839},{"krate":0,"index":8840},{"krate":0,"index":8841}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290794,"byte_end":290804,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290925,"byte_end":290935,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":291989,"byte_end":291995,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":292287,"byte_end":292293,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":9062},{"krate":0,"index":9063},{"krate":0,"index":9064},{"krate":0,"index":9065}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":292583,"byte_end":292589,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":293902,"byte_end":293908,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":294824,"byte_end":294831,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":294885,"byte_end":294892,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":295058,"byte_end":295065,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":295207,"byte_end":295214,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":295945,"byte_end":295955,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":296251,"byte_end":296261,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2052}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":296575,"byte_end":296585,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":297912,"byte_end":297921,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":298317,"byte_end":298326,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":9209},{"krate":0,"index":9210},{"krate":0,"index":9211},{"krate":0,"index":9212}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":298630,"byte_end":298639,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":298908,"byte_end":298917,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301023,"byte_end":301035,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301335,"byte_end":301347,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":9279},{"krate":0,"index":9280},{"krate":0,"index":9281},{"krate":0,"index":9282}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301552,"byte_end":301564,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2123}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301854,"byte_end":301866,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":303974,"byte_end":303984,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":9329},{"krate":0,"index":9330},{"krate":0,"index":9331},{"krate":0,"index":9332}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":304249,"byte_end":304259,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":304505,"byte_end":304515,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":306060,"byte_end":306070,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":306262,"byte_end":306272,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":306460,"byte_end":306470,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307427,"byte_end":307436,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2191}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307702,"byte_end":307711,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2194},{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":308902,"byte_end":308909,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":309268,"byte_end":309275,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":309633,"byte_end":309640,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":309906,"byte_end":309913,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313681,"byte_end":313690,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313991,"byte_end":314000,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2259},{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":315689,"byte_end":315701,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":316157,"byte_end":316169,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":9650},{"krate":0,"index":9651},{"krate":0,"index":9652},{"krate":0,"index":9653}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":316618,"byte_end":316630,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":318133,"byte_end":318145,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":319293,"byte_end":319305,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":319757,"byte_end":319769,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":9726},{"krate":0,"index":9727},{"krate":0,"index":9728},{"krate":0,"index":9729}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":320204,"byte_end":320216,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":321792,"byte_end":321804,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8688088,"byte_end":8688106,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9750},{"krate":0,"index":9795},{"krate":0,"index":9796},{"krate":0,"index":9797},{"krate":0,"index":9798}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8688465,"byte_end":8688483,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9753},{"krate":0,"index":9754}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8690632,"byte_end":8690652,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9776}],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8691017,"byte_end":8691037,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9781}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8691288,"byte_end":8691308,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":9786}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8691800,"byte_end":8691820,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9791},{"krate":0,"index":9792}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":322923,"byte_end":322936,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":323152,"byte_end":323165,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":323419,"byte_end":323432,"line_start":49,"line_end":49,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":325300,"byte_end":325313,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":325975,"byte_end":325988,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2364},{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259104,"byte_end":259105,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328098,"byte_end":328102,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328708,"byte_end":328712,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329846,"byte_end":329852,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329879,"byte_end":329885,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":330192,"byte_end":330198,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330810,"byte_end":330815,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330847,"byte_end":330852,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330937,"byte_end":330942,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331932,"byte_end":331936,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2528}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":332065,"byte_end":332069,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":332674,"byte_end":332678,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333288,"byte_end":333295,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333327,"byte_end":333334,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333419,"byte_end":333426,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":333951,"byte_end":333957,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":333988,"byte_end":333994,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334736,"byte_end":334742,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336097,"byte_end":336103,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337526,"byte_end":337532,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337750,"byte_end":337756,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2619},{"krate":0,"index":2620}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":341029,"byte_end":341035,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":759,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":341338,"byte_end":341344,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":760,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":341570,"byte_end":341576,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":766,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696281,"byte_end":8696293,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10032}],"docs":"","sig":null,"attributes":[]},{"id":767,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696398,"byte_end":8696410,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":768,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696441,"byte_end":8696453,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10037}],"docs":"","sig":null,"attributes":[]},{"id":769,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696576,"byte_end":8696588,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":10040}],"docs":"","sig":null,"attributes":[]},{"id":770,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696769,"byte_end":8696781,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10043},{"krate":0,"index":10044}],"docs":"","sig":null,"attributes":[]},{"id":771,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699398,"byte_end":8699412,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":772,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699438,"byte_end":8699452,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10056},{"krate":0,"index":10057},{"krate":0,"index":10058},{"krate":0,"index":10059}],"docs":"","sig":null,"attributes":[]},{"id":773,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8701076,"byte_end":8701090,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10062}],"docs":"","sig":null,"attributes":[]},{"id":774,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8701208,"byte_end":8701222,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":10065},{"krate":0,"index":10066},{"krate":0,"index":10067}],"docs":"","sig":null,"attributes":[]},{"id":775,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8702406,"byte_end":8702420,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10070}],"docs":"","sig":null,"attributes":[]},{"id":776,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8702586,"byte_end":8702600,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10073}],"docs":"","sig":null,"attributes":[]},{"id":777,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8702858,"byte_end":8702872,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10078}],"docs":"","sig":null,"attributes":[]},{"id":778,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8703042,"byte_end":8703056,"line_start":212,"line_end":212,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10081}],"docs":"","sig":null,"attributes":[]},{"id":779,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/abort.rs","byte_start":8729252,"byte_end":8729263,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":10125}],"docs":"","sig":null,"attributes":[]},{"id":780,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8730435,"byte_end":8730445,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10135},{"krate":0,"index":10136},{"krate":0,"index":10137}],"docs":"","sig":null,"attributes":[]},{"id":781,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731302,"byte_end":8731312,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":782,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731360,"byte_end":8731367,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10143},{"krate":0,"index":10144},{"krate":0,"index":10145}],"docs":"","sig":null,"attributes":[]},{"id":783,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731631,"byte_end":8731638,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":784,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731679,"byte_end":8731689,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":10151},{"krate":0,"index":10152},{"krate":0,"index":10153}],"docs":"","sig":null,"attributes":[]},{"id":785,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8732606,"byte_end":8732616,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":786,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8732664,"byte_end":8732668,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10159},{"krate":0,"index":10160},{"krate":0,"index":10161}],"docs":"","sig":null,"attributes":[]},{"id":787,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8732924,"byte_end":8732928,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":788,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8734417,"byte_end":8734421,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":789,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8734456,"byte_end":8734460,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":790,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8734492,"byte_end":8734496,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10201}],"docs":"","sig":null,"attributes":[]},{"id":791,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8735573,"byte_end":8735577,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":10204},{"krate":0,"index":10205}],"docs":"","sig":null,"attributes":[]},{"id":792,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8736582,"byte_end":8736586,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":10208}],"docs":"","sig":null,"attributes":[]},{"id":793,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8738036,"byte_end":8738051,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":10240},{"krate":0,"index":10241},{"krate":0,"index":10242}],"docs":"","sig":null,"attributes":[]},{"id":794,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8739901,"byte_end":8739916,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10245}],"docs":"","sig":null,"attributes":[]},{"id":795,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706302,"byte_end":8706318,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":796,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706359,"byte_end":8706375,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":797,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706404,"byte_end":8706420,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":798,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706445,"byte_end":8706461,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10262}],"docs":"","sig":null,"attributes":[]},{"id":799,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706658,"byte_end":8706674,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10264}],"docs":"","sig":null,"attributes":[]},{"id":800,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708393,"byte_end":8708409,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10267}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708512,"byte_end":8708528,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10270},{"krate":0,"index":10271},{"krate":0,"index":10272},{"krate":0,"index":10273},{"krate":0,"index":10274},{"krate":0,"index":10275},{"krate":0,"index":10276},{"krate":0,"index":10277},{"krate":0,"index":10278},{"krate":0,"index":10279},{"krate":0,"index":10280},{"krate":0,"index":10281},{"krate":0,"index":10282}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8720188,"byte_end":8720204,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10285},{"krate":0,"index":10286},{"krate":0,"index":10295}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8724601,"byte_end":8724605,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10294}],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8726943,"byte_end":8726959,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10298}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8727106,"byte_end":8727122,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10301}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8728562,"byte_end":8728578,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10304}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8728834,"byte_end":8728850,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10309}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8728972,"byte_end":8728988,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10312}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741733,"byte_end":8741742,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":10336}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741887,"byte_end":8741896,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":10339},{"krate":0,"index":10340},{"krate":0,"index":10341},{"krate":0,"index":10342}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742946,"byte_end":8742955,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10345}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8743068,"byte_end":8743077,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10348},{"krate":0,"index":10349}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8743884,"byte_end":8743893,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10352}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744869,"byte_end":8744878,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":10357}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8745023,"byte_end":8745032,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":10361}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343419,"byte_end":343421,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343476,"byte_end":343478,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375868,"byte_end":375878,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376315,"byte_end":376325,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376842,"byte_end":376852,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":377392,"byte_end":377402,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":378151,"byte_end":378161,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":378881,"byte_end":378891,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2776},{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":379479,"byte_end":379489,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":379628,"byte_end":379638,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":379876,"byte_end":379886,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":380097,"byte_end":380107,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2790},{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381817,"byte_end":381826,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":10496},{"krate":0,"index":10497},{"krate":0,"index":10498},{"krate":0,"index":10499},{"krate":0,"index":2817},{"krate":0,"index":2818}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":383048,"byte_end":383057,"line_start":79,"line_end":79,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":384669,"byte_end":384678,"line_start":123,"line_end":123,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2826},{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":385531,"byte_end":385540,"line_start":147,"line_end":147,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":10500},{"krate":0,"index":10501},{"krate":0,"index":10502},{"krate":0,"index":10503}],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":385618,"byte_end":385627,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":385943,"byte_end":385952,"line_start":160,"line_end":160,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2835}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389760,"byte_end":389769,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":10549},{"krate":0,"index":10550},{"krate":0,"index":10551},{"krate":0,"index":10552},{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":391343,"byte_end":391352,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2866},{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":392775,"byte_end":392784,"line_start":133,"line_end":133,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10553},{"krate":0,"index":10554}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":392865,"byte_end":392874,"line_start":137,"line_end":137,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":10555},{"krate":0,"index":10556}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":392955,"byte_end":392964,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":393323,"byte_end":393332,"line_start":151,"line_end":151,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394201,"byte_end":394206,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395507,"byte_end":395512,"line_start":64,"line_end":64,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2902}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395842,"byte_end":395847,"line_start":78,"line_end":78,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":397200,"byte_end":397205,"line_start":128,"line_end":128,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398316,"byte_end":398321,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398374,"byte_end":398379,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398522,"byte_end":398527,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":867,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":400275,"byte_end":400279,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":873,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401963,"byte_end":401970,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":874,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403816,"byte_end":403822,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":875,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":407050,"byte_end":407056,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":876,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":407343,"byte_end":407349,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3009},{"krate":0,"index":3010}],"docs":"","sig":null,"attributes":[]},{"id":877,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":407981,"byte_end":407987,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3013},{"krate":0,"index":3014}],"docs":"","sig":null,"attributes":[]},{"id":878,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409136,"byte_end":409142,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10769},{"krate":0,"index":10770},{"krate":0,"index":10771},{"krate":0,"index":10772}],"docs":"","sig":null,"attributes":[]},{"id":879,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409217,"byte_end":409223,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10773},{"krate":0,"index":10774},{"krate":0,"index":10775},{"krate":0,"index":10776}],"docs":"","sig":null,"attributes":[]},{"id":880,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409301,"byte_end":409307,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10777},{"krate":0,"index":10778},{"krate":0,"index":10779},{"krate":0,"index":10780}],"docs":"","sig":null,"attributes":[]},{"id":881,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409380,"byte_end":409386,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10781},{"krate":0,"index":10782},{"krate":0,"index":10783},{"krate":0,"index":10784}],"docs":"","sig":null,"attributes":[]},{"id":882,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410369,"byte_end":410374,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3035}],"docs":"","sig":null,"attributes":[]},{"id":883,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410722,"byte_end":410727,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":884,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410959,"byte_end":410964,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3040}],"docs":"","sig":null,"attributes":[]},{"id":885,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411462,"byte_end":411469,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":886,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411524,"byte_end":411531,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411665,"byte_end":411672,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3061},{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413242,"byte_end":413247,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413300,"byte_end":413305,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413419,"byte_end":413424,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3080},{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":414156,"byte_end":414161,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":414381,"byte_end":414386,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3099},{"krate":0,"index":3100}],"docs":"","sig":null,"attributes":[]},{"id":898,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415380,"byte_end":415384,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":899,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415436,"byte_end":415440,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3115}],"docs":"","sig":null,"attributes":[]},{"id":900,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415605,"byte_end":415609,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":901,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416297,"byte_end":416309,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":902,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416361,"byte_end":416373,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416552,"byte_end":416564,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3139},{"krate":0,"index":3140}],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417234,"byte_end":417243,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417295,"byte_end":417304,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3156}],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417474,"byte_end":417483,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3159},{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":418600,"byte_end":418608,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":908,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":418663,"byte_end":418671,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":909,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":419698,"byte_end":419706,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":910,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420436,"byte_end":420445,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":911,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420497,"byte_end":420506,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":912,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420787,"byte_end":420792,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":913,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":422342,"byte_end":422351,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":914,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":423199,"byte_end":423211,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":915,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":423263,"byte_end":423275,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":916,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":424309,"byte_end":424321,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240}],"docs":"","sig":null,"attributes":[]},{"id":917,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":425116,"byte_end":425125,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":918,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":425180,"byte_end":425189,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3256}],"docs":"","sig":null,"attributes":[]},{"id":919,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":426161,"byte_end":426170,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3261},{"krate":0,"index":3262}],"docs":"","sig":null,"attributes":[]},{"id":920,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427369,"byte_end":427375,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3278},{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":921,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":428155,"byte_end":428161,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":922,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428675,"byte_end":428679,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":923,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428731,"byte_end":428735,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3300}],"docs":"","sig":null,"attributes":[]},{"id":924,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428892,"byte_end":428896,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":925,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":430025,"byte_end":430029,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":926,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":430747,"byte_end":430751,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3326}],"docs":"","sig":null,"attributes":[]},{"id":927,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431756,"byte_end":431764,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":928,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432262,"byte_end":432271,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":929,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432663,"byte_end":432671,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":930,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":433136,"byte_end":433145,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3371}],"docs":"","sig":null,"attributes":[]},{"id":931,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434122,"byte_end":434134,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3380}],"docs":"","sig":null,"attributes":[]},{"id":932,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434324,"byte_end":434336,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":933,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434570,"byte_end":434582,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":939,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435113,"byte_end":435117,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":10988},{"krate":0,"index":10989},{"krate":0,"index":10990},{"krate":0,"index":10991}],"docs":"","sig":null,"attributes":[]},{"id":940,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":437044,"byte_end":437048,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":941,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":437692,"byte_end":437696,"line_start":109,"line_end":109,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3413}],"docs":"","sig":null,"attributes":[]},{"id":942,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439543,"byte_end":439549,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428}],"docs":"","sig":null,"attributes":[]},{"id":943,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":441652,"byte_end":441658,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":944,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":441805,"byte_end":441811,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3435}],"docs":"","sig":null,"attributes":[]},{"id":945,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442332,"byte_end":442337,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":946,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442390,"byte_end":442395,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":947,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442557,"byte_end":442562,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":948,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443246,"byte_end":443259,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":949,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443312,"byte_end":443325,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3471}],"docs":"","sig":null,"attributes":[]},{"id":950,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443498,"byte_end":443511,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3474},{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":951,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":444178,"byte_end":444186,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":952,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":444239,"byte_end":444247,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3491}],"docs":"","sig":null,"attributes":[]},{"id":953,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":444413,"byte_end":444421,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":954,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360861,"byte_end":360862,"line_start":390,"line_end":390,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":955,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367047,"byte_end":367048,"line_start":577,"line_end":577,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":956,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367582,"byte_end":367583,"line_start":593,"line_end":593,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":957,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374932,"byte_end":374933,"line_start":796,"line_end":796,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":958,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445183,"byte_end":445184,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3558}],"docs":"","sig":null,"attributes":[]},{"id":959,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445418,"byte_end":445419,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3566}],"docs":"","sig":null,"attributes":[]},{"id":960,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445688,"byte_end":445689,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3574}],"docs":"","sig":null,"attributes":[]},{"id":961,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":446704,"byte_end":446708,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3582}],"docs":"","sig":null,"attributes":[]},{"id":962,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":446802,"byte_end":446806,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3587}],"docs":"","sig":null,"attributes":[]},{"id":968,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447065,"byte_end":447072,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3593}],"docs":"","sig":null,"attributes":[]},{"id":969,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447295,"byte_end":447302,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":970,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447493,"byte_end":447500,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":971,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447805,"byte_end":447818,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3609},{"krate":0,"index":3610}],"docs":"","sig":null,"attributes":[]},{"id":977,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":448235,"byte_end":448244,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3615},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":978,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":448526,"byte_end":448535,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":979,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":448795,"byte_end":448804,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3626}],"docs":"","sig":null,"attributes":[]},{"id":980,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449124,"byte_end":449131,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3633},{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":981,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449350,"byte_end":449357,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":982,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449535,"byte_end":449542,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":983,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449843,"byte_end":449851,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3654},{"krate":0,"index":3655}],"docs":"","sig":null,"attributes":[]},{"id":984,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450074,"byte_end":450082,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3661}],"docs":"","sig":null,"attributes":[]},{"id":985,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450264,"byte_end":450272,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":986,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450582,"byte_end":450593,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":987,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450830,"byte_end":450841,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3683}],"docs":"","sig":null,"attributes":[]},{"id":988,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451056,"byte_end":451067,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3689}],"docs":"","sig":null,"attributes":[]},{"id":989,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451412,"byte_end":451424,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3697},{"krate":0,"index":3698}],"docs":"","sig":null,"attributes":[]},{"id":990,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451662,"byte_end":451674,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3704}],"docs":"","sig":null,"attributes":[]},{"id":991,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451890,"byte_end":451902,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":992,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":452499,"byte_end":452513,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3723},{"krate":0,"index":3724}],"docs":"","sig":null,"attributes":[]},{"id":993,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":452734,"byte_end":452748,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":994,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":452947,"byte_end":452961,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":995,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":453265,"byte_end":453271,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":996,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":453366,"byte_end":453372,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3750},{"krate":0,"index":3751}],"docs":"","sig":null,"attributes":[]},{"id":1002,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755685,"byte_end":8755690,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11213}],"docs":"","sig":null,"attributes":[]},{"id":1003,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756023,"byte_end":8756028,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11216}],"docs":"","sig":null,"attributes":[]},{"id":1004,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756121,"byte_end":8756126,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":11219}],"docs":"","sig":null,"attributes":[]},{"id":1005,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756264,"byte_end":8756270,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11227},{"krate":0,"index":11228}],"docs":"","sig":null,"attributes":[]},{"id":1006,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756814,"byte_end":8756819,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":11233},{"krate":0,"index":11234}],"docs":"","sig":null,"attributes":[]},{"id":1007,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757395,"byte_end":8757400,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":11237},{"krate":0,"index":11238},{"krate":0,"index":11239},{"krate":0,"index":11240},{"krate":0,"index":11241}],"docs":"","sig":null,"attributes":[]},{"id":1008,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8760549,"byte_end":8760564,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11250}],"docs":"","sig":null,"attributes":[]},{"id":1009,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8761074,"byte_end":8761089,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11253}],"docs":"","sig":null,"attributes":[]},{"id":1010,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8761206,"byte_end":8761221,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11257},{"krate":0,"index":11258}],"docs":"","sig":null,"attributes":[]},{"id":1011,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8762450,"byte_end":8762465,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":11261}],"docs":"","sig":null,"attributes":[]},{"id":1012,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763067,"byte_end":8763077,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":11269}],"docs":"","sig":null,"attributes":[]},{"id":1013,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764089,"byte_end":8764099,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11274}],"docs":"","sig":null,"attributes":[]},{"id":1014,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764344,"byte_end":8764354,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11277}],"docs":"","sig":null,"attributes":[]},{"id":1015,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764452,"byte_end":8764462,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11280},{"krate":0,"index":11281}],"docs":"","sig":null,"attributes":[]},{"id":1016,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764603,"byte_end":8764613,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11284}],"docs":"","sig":null,"attributes":[]},{"id":1017,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765064,"byte_end":8765080,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11296}],"docs":"","sig":null,"attributes":[]},{"id":1018,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766210,"byte_end":8766226,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":11302}],"docs":"","sig":null,"attributes":[]},{"id":1019,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766491,"byte_end":8766507,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":11306}],"docs":"","sig":null,"attributes":[]},{"id":1020,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766619,"byte_end":8766635,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":11310},{"krate":0,"index":11311}],"docs":"","sig":null,"attributes":[]},{"id":1021,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766778,"byte_end":8766794,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":11315}],"docs":"","sig":null,"attributes":[]},{"id":1022,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767071,"byte_end":8767076,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1023,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767122,"byte_end":8767127,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1024,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767294,"byte_end":8767309,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1025,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767413,"byte_end":8767428,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1026,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767632,"byte_end":8767642,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1027,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767692,"byte_end":8767702,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1028,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767770,"byte_end":8767786,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1029,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767857,"byte_end":8767873,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1030,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8769877,"byte_end":8769882,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1031,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8769919,"byte_end":8769924,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1032,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8769940,"byte_end":8769946,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":11360},{"krate":0,"index":11361},{"krate":0,"index":11363},{"krate":0,"index":11364}],"docs":"","sig":null,"attributes":[]},{"id":1033,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8775631,"byte_end":8775636,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":11367}],"docs":"","sig":null,"attributes":[]},{"id":1034,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8775758,"byte_end":8775763,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11370}],"docs":"","sig":null,"attributes":[]},{"id":1035,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776091,"byte_end":8776103,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11378}],"docs":"","sig":null,"attributes":[]},{"id":1036,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776293,"byte_end":8776305,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":11381}],"docs":"","sig":null,"attributes":[]},{"id":1037,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776526,"byte_end":8776538,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1038,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776920,"byte_end":8776931,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":11386},{"krate":0,"index":11387}],"docs":"","sig":null,"attributes":[]},{"id":1039,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8777094,"byte_end":8777105,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":11390}],"docs":"","sig":null,"attributes":[]},{"id":1040,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8777243,"byte_end":8777254,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":11393}],"docs":"","sig":null,"attributes":[]},{"id":1041,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8777606,"byte_end":8777617,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":11396}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11826,"byte_end":11832,"line_start":310,"line_end":310,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":11908,"byte_end":11914,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":979}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/mod.rs","byte_start":138741,"byte_end":138758,"line_start":93,"line_end":93,"column_start":13,"column_end":30},"ref_id":{"krate":0,"index":10084}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12148,"byte_end":12152,"line_start":322,"line_end":322,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2670}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12163,"byte_end":12168,"line_start":324,"line_end":324,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2709}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12366,"byte_end":12368,"line_start":333,"line_end":333,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":2711}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lib.rs","byte_start":12592,"byte_end":12596,"line_start":343,"line_end":343,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":11183}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":35875,"byte_end":35882,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36009,"byte_end":36016,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3752},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":36250,"byte_end":36257,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3752},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37036,"byte_end":37043,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3752},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/flatten.rs","byte_start":37277,"byte_end":37284,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3752},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40254,"byte_end":40258,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":40360,"byte_end":40364,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42088,"byte_end":42092,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3810},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/fuse.rs","byte_start":42201,"byte_end":42205,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3810},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43084,"byte_end":43087,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43262,"byte_end":43265,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3855},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/map.rs","byte_start":43529,"byte_end":43532,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3855},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44650,"byte_end":44661,"line_start":15,"line_end":15,"column_start":11,"column_end":22},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/catch_unwind.rs","byte_start":44815,"byte_end":44826,"line_start":21,"line_end":21,"column_start":22,"column_end":33},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4478},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46006,"byte_end":46012,"line_start":31,"line_end":31,"column_start":29,"column_end":35},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46055,"byte_end":46061,"line_start":33,"line_end":33,"column_start":34,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46319,"byte_end":46324,"line_start":42,"line_end":42,"column_start":34,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46551,"byte_end":46556,"line_start":53,"line_end":53,"column_start":27,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46653,"byte_end":46658,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":177},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":46902,"byte_end":46908,"line_start":74,"line_end":74,"column_start":19,"column_end":25},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":47374,"byte_end":47380,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":48072,"byte_end":48077,"line_start":112,"line_end":112,"column_start":11,"column_end":16},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":49774,"byte_end":49780,"line_start":161,"line_end":161,"column_start":27,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":173},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":49932,"byte_end":49938,"line_start":171,"line_end":171,"column_start":22,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":51476,"byte_end":51481,"line_start":217,"line_end":217,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":53268,"byte_end":53274,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":53468,"byte_end":53474,"line_start":288,"line_end":288,"column_start":20,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":173},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/shared.rs","byte_start":53902,"byte_end":53910,"line_start":305,"line_end":305,"column_start":18,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":181},"to":{"krate":20,"index":260}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19175,"byte_end":19176,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":244},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/future/mod.rs","byte_start":19307,"byte_end":19313,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":8493},"to":{"krate":0,"index":245}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76167,"byte_end":76177,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76342,"byte_end":76352,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4523},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/into_future.rs","byte_start":76458,"byte_end":76468,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4523},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77121,"byte_end":77131,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77261,"byte_end":77271,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4568},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":77524,"byte_end":77534,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4568},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":78565,"byte_end":78575,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4568},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten.rs","byte_start":78828,"byte_end":78838,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4568},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82268,"byte_end":82281,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82414,"byte_end":82427,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4626},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/try_flatten_err.rs","byte_start":82683,"byte_end":82696,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4626},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58889,"byte_end":58892,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":391},"to":{"krate":0,"index":392}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_future/mod.rs","byte_start":58975,"byte_end":58984,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":32},"to":{"krate":0,"index":392}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84065,"byte_end":84069,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5612},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84642,"byte_end":84646,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5612},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/lazy.rs","byte_start":84778,"byte_end":84782,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5612},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85359,"byte_end":85366,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5618},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":85917,"byte_end":85924,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5618},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":86069,"byte_end":86076,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5618},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/pending.rs","byte_start":86103,"byte_end":86110,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5618},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":87431,"byte_end":87440,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":88455,"byte_end":88464,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5624},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/maybe_done.rs","byte_start":88680,"byte_end":88689,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5624},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":90110,"byte_end":90122,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":91164,"byte_end":91176,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5683},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_maybe_done.rs","byte_start":91404,"byte_end":91416,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5683},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":92940,"byte_end":92952,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5742},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":93285,"byte_end":93297,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5742},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/option.rs","byte_start":93480,"byte_end":93492,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5742},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":93902,"byte_end":93908,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94578,"byte_end":94584,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/poll_fn.rs","byte_start":94726,"byte_end":94732,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95209,"byte_end":95214,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":5790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95393,"byte_end":95398,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":5790},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95430,"byte_end":95435,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5790},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/ready.rs","byte_start":95532,"byte_end":95537,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5790},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":102829,"byte_end":102836,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":104599,"byte_end":104606,"line_start":91,"line_end":91,"column_start":20,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/join_all.rs","byte_start":105303,"byte_end":105310,"line_start":118,"line_end":118,"column_start":37,"column_end":44},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":677},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":105780,"byte_end":105786,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":6188},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":108028,"byte_end":108034,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":6188},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select.rs","byte_start":108737,"byte_end":108743,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":6188},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":109280,"byte_end":109289,"line_start":16,"line_end":16,"column_start":28,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6196},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":110269,"byte_end":110278,"line_start":44,"line_end":44,"column_start":38,"column_end":47},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6196},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_all.rs","byte_start":110984,"byte_end":110993,"line_start":65,"line_end":65,"column_start":49,"column_end":58},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":6196},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":119210,"byte_end":119220,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":120982,"byte_end":120992,"line_start":101,"line_end":101,"column_start":20,"column_end":30},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_join_all.rs","byte_start":122165,"byte_end":122175,"line_start":138,"line_end":138,"column_start":40,"column_end":50},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":820},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":122657,"byte_end":122666,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/try_select.rs","byte_start":124372,"byte_end":124381,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":6568},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":125734,"byte_end":125742,"line_start":16,"line_end":16,"column_start":28,"column_end":36},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":6576},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":126712,"byte_end":126720,"line_start":42,"line_end":42,"column_start":41,"column_end":49},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":6576},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/select_ok.rs","byte_start":128164,"byte_end":128172,"line_start":79,"line_end":79,"column_start":52,"column_end":60},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":6576},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":128830,"byte_end":128836,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129221,"byte_end":129227,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129608,"byte_end":129614,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":6582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":129855,"byte_end":129861,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":6582},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":130208,"byte_end":130214,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":6582},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":130490,"byte_end":130496,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":6582},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":130856,"byte_end":130862,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":6582},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":132640,"byte_end":132646,"line_start":160,"line_end":160,"column_start":30,"column_end":36},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6582},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":133717,"byte_end":133723,"line_start":196,"line_end":196,"column_start":31,"column_end":37},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6582},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":135062,"byte_end":135068,"line_start":238,"line_end":238,"column_start":30,"column_end":36},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6582},"to":{"krate":25,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/either.rs","byte_start":135506,"byte_end":135512,"line_start":255,"line_end":255,"column_start":33,"column_end":39},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":6582},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8645674,"byte_end":8645683,"line_start":20,"line_end":20,"column_start":11,"column_end":20},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":11738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8646985,"byte_end":8646996,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":6679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8648872,"byte_end":8648879,"line_start":126,"line_end":126,"column_start":23,"column_end":30},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":6690},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8649062,"byte_end":8649069,"line_start":133,"line_end":133,"column_start":28,"column_end":35},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":6690},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8649095,"byte_end":8649104,"line_start":135,"line_end":135,"column_start":22,"column_end":31},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":11738},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/future/abortable.rs","byte_start":8650078,"byte_end":8650089,"line_start":164,"line_end":164,"column_start":6,"column_end":17},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":6679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187335,"byte_end":187340,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":6703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187609,"byte_end":187614,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":6703},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chain.rs","byte_start":187819,"byte_end":187824,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":6703},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189373,"byte_end":189380,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":6760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189691,"byte_end":189698,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":6760},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/collect.rs","byte_start":189874,"byte_end":189881,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":6760},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":190773,"byte_end":190779,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":6816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":191054,"byte_end":191060,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":6816},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/concat.rs","byte_start":191835,"byte_end":191841,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":6816},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192510,"byte_end":192519,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":6861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192752,"byte_end":192761,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":6861},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/enumerate.rs","byte_start":192879,"byte_end":192888,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":6861},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194272,"byte_end":194278,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":6910},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":194751,"byte_end":194757,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":6910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":195151,"byte_end":195157,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":6910},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter.rs","byte_start":195506,"byte_end":195512,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":6910},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197661,"byte_end":197670,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6983},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":197967,"byte_end":197976,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":6983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":198277,"byte_end":198286,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":6983},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/filter_map.rs","byte_start":198563,"byte_end":198572,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":6983},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200649,"byte_end":200656,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":7053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":200825,"byte_end":200832,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7053},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/flatten.rs","byte_start":201024,"byte_end":201031,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7053},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202473,"byte_end":202477,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":7175},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":202833,"byte_end":202837,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":7175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":203170,"byte_end":203174,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":7175},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fold.rs","byte_start":203421,"byte_end":203425,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":7175},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":204958,"byte_end":204965,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":7254},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":205258,"byte_end":205265,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":7254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":205559,"byte_end":205566,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":7254},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each.rs","byte_start":205817,"byte_end":205824,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":7254},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":206873,"byte_end":206877,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":7320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207378,"byte_end":207382,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":7320},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/fuse.rs","byte_start":207480,"byte_end":207484,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":7320},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":208684,"byte_end":208696,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":7369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":211206,"byte_end":211218,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":7369},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/into_future.rs","byte_start":211338,"byte_end":211350,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":7369},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212198,"byte_end":212201,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":7452},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212416,"byte_end":212419,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":7452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212593,"byte_end":212596,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":7452},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/map.rs","byte_start":212770,"byte_end":212773,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":7452},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":213920,"byte_end":213924,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":7601},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":213975,"byte_end":213979,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":7601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":214130,"byte_end":214134,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":7601},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/next.rs","byte_start":214273,"byte_end":214277,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":7601},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":214926,"byte_end":214940,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":7609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":215101,"byte_end":215115,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":7609},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/select_next_some.rs","byte_start":215259,"byte_end":215273,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":216448,"byte_end":216456,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":7617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":217645,"byte_end":217653,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":7617},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":217795,"byte_end":217803,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":7617},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":218961,"byte_end":218965,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":7666},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":219236,"byte_end":219240,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":7666},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/peek.rs","byte_start":219351,"byte_end":219355,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":7666},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220201,"byte_end":220205,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":7715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220433,"byte_end":220437,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":7715},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip.rs","byte_start":220555,"byte_end":220559,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":7715},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":222186,"byte_end":222195,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":7764},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":222647,"byte_end":222656,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":7764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":223085,"byte_end":223094,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":7764},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/skip_while.rs","byte_start":223354,"byte_end":223363,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":7764},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225646,"byte_end":225650,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":7840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":225860,"byte_end":225864,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":7840},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take.rs","byte_start":226858,"byte_end":226862,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":7840},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":227809,"byte_end":227818,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":7889},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":228266,"byte_end":228275,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":228697,"byte_end":228706,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7889},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_while.rs","byte_start":230260,"byte_end":230269,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7889},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231581,"byte_end":231590,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7965},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":231917,"byte_end":231926,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":234119,"byte_end":234128,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7965},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/take_until.rs","byte_start":235160,"byte_end":235169,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7965},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236043,"byte_end":236047,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":8028},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236337,"byte_end":236341,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":8028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236650,"byte_end":236654,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":8028},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/then.rs","byte_start":236892,"byte_end":236896,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":8028},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":238762,"byte_end":238765,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":8098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240416,"byte_end":240419,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":8098},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/zip.rs","byte_start":240610,"byte_end":240613,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":8098},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":243257,"byte_end":243263,"line_start":22,"line_end":22,"column_start":18,"column_end":24},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":243774,"byte_end":243780,"line_start":41,"line_end":41,"column_start":29,"column_end":35},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8161},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/chunks.rs","byte_start":245418,"byte_end":245424,"line_start":89,"line_end":89,"column_start":39,"column_end":45},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":8161},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246353,"byte_end":246364,"line_start":22,"line_end":22,"column_start":18,"column_end":29},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":246729,"byte_end":246740,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":8213},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/ready_chunks.rs","byte_start":248848,"byte_end":248859,"line_start":95,"line_end":95,"column_start":39,"column_end":50},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":8213},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":249789,"byte_end":249793,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":8265},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":250279,"byte_end":250283,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":8265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":250447,"byte_end":250451,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":8265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":250918,"byte_end":250922,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":8265},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/scan.rs","byte_start":252149,"byte_end":252153,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":8265},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8666763,"byte_end":8666778,"line_start":25,"line_end":25,"column_start":25,"column_end":40},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":11693},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8667110,"byte_end":8667125,"line_start":38,"line_end":38,"column_start":10,"column_end":25},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":11693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8667538,"byte_end":8667553,"line_start":58,"line_end":58,"column_start":21,"column_end":36},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":11693},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffer_unordered.rs","byte_start":8669030,"byte_end":8669045,"line_start":106,"line_end":106,"column_start":26,"column_end":41},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":11693},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8670075,"byte_end":8670083,"line_start":25,"line_end":25,"column_start":25,"column_end":33},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":11648},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8670430,"byte_end":8670438,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":11648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/buffered.rs","byte_start":8670775,"byte_end":8670783,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":11648},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8673095,"byte_end":8673112,"line_start":22,"line_end":22,"column_start":33,"column_end":50},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":11580},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8673458,"byte_end":8673475,"line_start":36,"line_end":36,"column_start":18,"column_end":35},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":11580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8673946,"byte_end":8673963,"line_start":52,"line_end":52,"column_start":34,"column_end":51},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":11580},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/for_each_concurrent.rs","byte_start":8674205,"byte_end":8674222,"line_start":62,"line_end":62,"column_start":29,"column_end":46},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":11580},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":253135,"byte_end":253146,"line_start":18,"line_end":18,"column_start":31,"column_end":42},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":253356,"byte_end":253367,"line_start":26,"line_end":26,"column_start":42,"column_end":53},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8446},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/catch_unwind.rs","byte_start":254275,"byte_end":254286,"line_start":61,"line_end":61,"column_start":52,"column_end":63},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8446},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145344,"byte_end":145345,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":1780},"to":{"krate":0,"index":1781}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/stream/mod.rs","byte_start":145488,"byte_end":145494,"line_start":202,"line_end":202,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":18,"index":68},"to":{"krate":0,"index":1781}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":287898,"byte_end":287905,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":8495},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":288198,"byte_end":288205,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":8495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":288498,"byte_end":288505,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":8495},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/and_then.rs","byte_start":289683,"byte_end":289690,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":8495},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290585,"byte_end":290595,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":8796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290794,"byte_end":290804,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":8796},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_stream.rs","byte_start":290925,"byte_end":290935,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":8796},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":291989,"byte_end":291995,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":8996},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":292287,"byte_end":292293,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":8996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":292583,"byte_end":292589,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":8996},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/or_else.rs","byte_start":293902,"byte_end":293908,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":8996},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":294824,"byte_end":294831,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":9066},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":294885,"byte_end":294892,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":9066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":295058,"byte_end":295065,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":9066},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_next.rs","byte_start":295207,"byte_end":295214,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":9066},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":295945,"byte_end":295955,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":9074},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":296251,"byte_end":296261,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":9074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each.rs","byte_start":296575,"byte_end":296585,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":9074},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":297912,"byte_end":297921,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":9140},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":298317,"byte_end":298326,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":9140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":298630,"byte_end":298639,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9140},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter.rs","byte_start":298908,"byte_end":298917,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":9140},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301023,"byte_end":301035,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":9213},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301335,"byte_end":301347,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":9213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301552,"byte_end":301564,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":9213},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_filter_map.rs","byte_start":301854,"byte_end":301866,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":9213},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":303974,"byte_end":303984,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":9283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":304249,"byte_end":304259,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":9283},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_flatten.rs","byte_start":304505,"byte_end":304515,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":9283},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":306060,"byte_end":306070,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":9333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":306262,"byte_end":306272,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":9333},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_collect.rs","byte_start":306460,"byte_end":306470,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":9333},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307427,"byte_end":307436,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":9389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_concat.rs","byte_start":307702,"byte_end":307711,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":9389},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":308902,"byte_end":308909,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":9434},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":309268,"byte_end":309275,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":9434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":309633,"byte_end":309640,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":9434},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_fold.rs","byte_start":309906,"byte_end":309913,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":9434},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313681,"byte_end":313690,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":9513},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_unfold.rs","byte_start":313991,"byte_end":314000,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":9513},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":315689,"byte_end":315701,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":9578},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":316157,"byte_end":316169,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":9578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":316618,"byte_end":316630,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":9578},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_skip_while.rs","byte_start":318133,"byte_end":318145,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":9578},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":319293,"byte_end":319305,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"kind":{"Impl":{"id":697}},"from":{"krate":0,"index":9654},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":319757,"byte_end":319769,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":9654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":320204,"byte_end":320216,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":9654},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_take_while.rs","byte_start":321792,"byte_end":321804,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"kind":{"Impl":{"id":700}},"from":{"krate":0,"index":9654},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8688088,"byte_end":8688106,"line_start":25,"line_end":25,"column_start":10,"column_end":28},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":11532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_buffer_unordered.rs","byte_start":8688465,"byte_end":8688483,"line_start":40,"line_end":40,"column_start":21,"column_end":39},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":11532},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8690632,"byte_end":8690652,"line_start":24,"line_end":24,"column_start":33,"column_end":53},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":11464},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8691017,"byte_end":8691037,"line_start":38,"line_end":38,"column_start":34,"column_end":54},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":11464},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8691288,"byte_end":8691308,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":11464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":8691800,"byte_end":8691820,"line_start":64,"line_end":64,"column_start":29,"column_end":49},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":11464},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":322923,"byte_end":322936,"line_start":22,"line_end":22,"column_start":20,"column_end":33},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":9799},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":323152,"byte_end":323165,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":9799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":323419,"byte_end":323432,"line_start":49,"line_end":49,"column_start":24,"column_end":37},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":9799},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":325300,"byte_end":325313,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":9799},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/into_async_read.rs","byte_start":325975,"byte_end":325988,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":9799},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259104,"byte_end":259105,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":2370},"to":{"krate":0,"index":2371}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/try_stream/mod.rs","byte_start":259186,"byte_end":259195,"line_start":138,"line_end":138,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":18,"index":97},"to":{"krate":0,"index":2371}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328098,"byte_end":328102,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":9818},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/iter.rs","byte_start":328708,"byte_end":328712,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":9818},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329846,"byte_end":329852,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":9824},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":329879,"byte_end":329885,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":9824},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/repeat.rs","byte_start":330192,"byte_end":330198,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":9824},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330810,"byte_end":330815,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":9830},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330847,"byte_end":330852,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":9830},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/empty.rs","byte_start":330937,"byte_end":330942,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":9830},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":331932,"byte_end":331936,"line_start":31,"line_end":31,"column_start":11,"column_end":15},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":9836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":332065,"byte_end":332069,"line_start":37,"line_end":37,"column_start":30,"column_end":34},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":9836},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/once.rs","byte_start":332674,"byte_end":332678,"line_start":60,"line_end":60,"column_start":35,"column_end":39},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":9836},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333288,"byte_end":333295,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":9878},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333327,"byte_end":333334,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":9878},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/pending.rs","byte_start":333419,"byte_end":333426,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":9878},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":333951,"byte_end":333957,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":2571},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":333988,"byte_end":333994,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":2571},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/poll_fn.rs","byte_start":334736,"byte_end":334742,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":2571},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":336097,"byte_end":336103,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":9884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337526,"byte_end":337532,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":9884},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select.rs","byte_start":337750,"byte_end":337756,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":9884},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":341029,"byte_end":341035,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":9944},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":341338,"byte_end":341344,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":759}},"from":{"krate":0,"index":9944},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/unfold.rs","byte_start":341570,"byte_end":341576,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":760}},"from":{"krate":0,"index":9944},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696281,"byte_end":8696293,"line_start":21,"line_end":21,"column_start":23,"column_end":35},"kind":{"Impl":{"id":766}},"from":{"krate":0,"index":11419},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696398,"byte_end":8696410,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"kind":{"Impl":{"id":767}},"from":{"krate":0,"index":11419},"to":{"krate":2,"index":1702}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696441,"byte_end":8696453,"line_start":29,"line_end":29,"column_start":24,"column_end":36},"kind":{"Impl":{"id":768}},"from":{"krate":0,"index":11419},"to":{"krate":2,"index":1734}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696576,"byte_end":8696588,"line_start":35,"line_end":35,"column_start":17,"column_end":29},"kind":{"Impl":{"id":769}},"from":{"krate":0,"index":11419},"to":{"krate":2,"index":1723}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8696769,"byte_end":8696781,"line_start":42,"line_end":42,"column_start":20,"column_end":32},"kind":{"Impl":{"id":770}},"from":{"krate":0,"index":11419},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699398,"byte_end":8699412,"line_start":100,"line_end":100,"column_start":27,"column_end":41},"kind":{"Impl":{"id":771}},"from":{"krate":0,"index":10046},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8699438,"byte_end":8699452,"line_start":102,"line_end":102,"column_start":19,"column_end":33},"kind":{"Impl":{"id":772}},"from":{"krate":0,"index":10046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8701076,"byte_end":8701090,"line_start":146,"line_end":146,"column_start":31,"column_end":45},"kind":{"Impl":{"id":773}},"from":{"krate":0,"index":10046},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8701208,"byte_end":8701222,"line_start":152,"line_end":152,"column_start":30,"column_end":44},"kind":{"Impl":{"id":774}},"from":{"krate":0,"index":10046},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8702406,"byte_end":8702420,"line_start":190,"line_end":190,"column_start":29,"column_end":43},"kind":{"Impl":{"id":775}},"from":{"krate":0,"index":10046},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8702586,"byte_end":8702600,"line_start":196,"line_end":196,"column_start":41,"column_end":55},"kind":{"Impl":{"id":776}},"from":{"krate":0,"index":10046},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8702858,"byte_end":8702872,"line_start":206,"line_end":206,"column_start":35,"column_end":49},"kind":{"Impl":{"id":777}},"from":{"krate":0,"index":10046},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_ordered.rs","byte_start":8703042,"byte_end":8703056,"line_start":212,"line_end":212,"column_start":35,"column_end":49},"kind":{"Impl":{"id":778}},"from":{"krate":0,"index":10046},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/abort.rs","byte_start":8729252,"byte_end":8729263,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":779}},"from":{"krate":0,"index":10122},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8730435,"byte_end":8730445,"line_start":32,"line_end":32,"column_start":28,"column_end":38},"kind":{"Impl":{"id":780}},"from":{"krate":0,"index":10366},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731302,"byte_end":8731312,"line_start":58,"line_end":58,"column_start":33,"column_end":43},"kind":{"Impl":{"id":781}},"from":{"krate":0,"index":10366},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731360,"byte_end":8731367,"line_start":60,"line_end":60,"column_start":35,"column_end":42},"kind":{"Impl":{"id":782}},"from":{"krate":0,"index":10376},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731631,"byte_end":8731638,"line_start":72,"line_end":72,"column_start":40,"column_end":47},"kind":{"Impl":{"id":783}},"from":{"krate":0,"index":10376},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8731679,"byte_end":8731689,"line_start":74,"line_end":74,"column_start":28,"column_end":38},"kind":{"Impl":{"id":784}},"from":{"krate":0,"index":10385},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8732606,"byte_end":8732616,"line_start":103,"line_end":103,"column_start":33,"column_end":43},"kind":{"Impl":{"id":785}},"from":{"krate":0,"index":10385},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8732664,"byte_end":8732668,"line_start":105,"line_end":105,"column_start":35,"column_end":39},"kind":{"Impl":{"id":786}},"from":{"krate":0,"index":10396},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/iter.rs","byte_start":8732924,"byte_end":8732928,"line_start":117,"line_end":117,"column_start":40,"column_end":44},"kind":{"Impl":{"id":787}},"from":{"krate":0,"index":10396},"to":{"krate":2,"index":4994}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8734417,"byte_end":8734421,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":788}},"from":{"krate":0,"index":10186},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8734456,"byte_end":8734460,"line_start":42,"line_end":42,"column_start":27,"column_end":31},"kind":{"Impl":{"id":789}},"from":{"krate":0,"index":10186},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8734492,"byte_end":8734496,"line_start":44,"line_end":44,"column_start":23,"column_end":27},"kind":{"Impl":{"id":790}},"from":{"krate":0,"index":10186},"to":{"krate":20,"index":260}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8735573,"byte_end":8735577,"line_start":71,"line_end":71,"column_start":11,"column_end":15},"kind":{"Impl":{"id":791}},"from":{"krate":0,"index":10186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/task.rs","byte_start":8736582,"byte_end":8736586,"line_start":102,"line_end":102,"column_start":20,"column_end":24},"kind":{"Impl":{"id":792}},"from":{"krate":0,"index":10186},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8738036,"byte_end":8738051,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":793}},"from":{"krate":0,"index":10232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":8739901,"byte_end":8739916,"line_start":90,"line_end":90,"column_start":20,"column_end":35},"kind":{"Impl":{"id":794}},"from":{"krate":0,"index":10232},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706302,"byte_end":8706318,"line_start":77,"line_end":77,"column_start":33,"column_end":49},"kind":{"Impl":{"id":795}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706359,"byte_end":8706375,"line_start":78,"line_end":78,"column_start":33,"column_end":49},"kind":{"Impl":{"id":796}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706404,"byte_end":8706420,"line_start":79,"line_end":79,"column_start":21,"column_end":37},"kind":{"Impl":{"id":797}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706445,"byte_end":8706461,"line_start":81,"line_end":81,"column_start":16,"column_end":32},"kind":{"Impl":{"id":798}},"from":{"krate":0,"index":10250},"to":{"krate":20,"index":10}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8706658,"byte_end":8706674,"line_start":90,"line_end":90,"column_start":21,"column_end":37},"kind":{"Impl":{"id":799}},"from":{"krate":0,"index":10250},"to":{"krate":20,"index":13}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708393,"byte_end":8708409,"line_start":124,"line_end":124,"column_start":23,"column_end":39},"kind":{"Impl":{"id":800}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8708512,"byte_end":8708528,"line_start":130,"line_end":130,"column_start":11,"column_end":27},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":10250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8720188,"byte_end":8720204,"line_start":411,"line_end":411,"column_start":30,"column_end":46},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":10250},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8724601,"byte_end":8724605,"line_start":511,"line_end":511,"column_start":32,"column_end":36},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":10287},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8726943,"byte_end":8726959,"line_start":573,"line_end":573,"column_start":21,"column_end":37},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8727106,"byte_end":8727122,"line_start":579,"line_end":579,"column_start":20,"column_end":36},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8728562,"byte_end":8728578,"line_start":608,"line_end":608,"column_start":33,"column_end":49},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8728834,"byte_end":8728850,"line_start":618,"line_end":618,"column_start":35,"column_end":51},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":10250},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/futures_unordered/mod.rs","byte_start":8728972,"byte_end":8728988,"line_start":624,"line_end":624,"column_start":27,"column_end":43},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":10250},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741733,"byte_end":8741742,"line_start":29,"line_end":29,"column_start":27,"column_end":36},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":10331},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8741887,"byte_end":8741896,"line_start":35,"line_end":35,"column_start":26,"column_end":35},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":10331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8742946,"byte_end":8742955,"line_start":67,"line_end":67,"column_start":38,"column_end":47},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":10331},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8743068,"byte_end":8743077,"line_start":73,"line_end":73,"column_start":37,"column_end":46},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":10331},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8743884,"byte_end":8743893,"line_start":98,"line_end":98,"column_start":42,"column_end":51},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":10331},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8744869,"byte_end":8744878,"line_start":129,"line_end":129,"column_start":47,"column_end":56},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":10331},"to":{"krate":2,"index":4945}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/stream/select_all.rs","byte_start":8745023,"byte_end":8745032,"line_start":135,"line_end":135,"column_start":41,"column_end":50},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":10331},"to":{"krate":2,"index":4958}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343419,"byte_end":343421,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":2682},"to":{"krate":0,"index":2685}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343476,"byte_end":343478,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":2684},"to":{"krate":0,"index":2688}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":343557,"byte_end":343562,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":20,"index":10},"to":{"krate":0,"index":2685}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/task/spawn.rs","byte_start":346326,"byte_end":346336,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":20,"index":13},"to":{"krate":0,"index":2688}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":375868,"byte_end":375878,"line_start":21,"line_end":21,"column_start":19,"column_end":29},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":10411},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376315,"byte_end":376325,"line_start":41,"line_end":41,"column_start":9,"column_end":19},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":10411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":376842,"byte_end":376852,"line_start":63,"line_end":63,"column_start":23,"column_end":33},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":10411},"to":{"krate":1,"index":3052}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":377392,"byte_end":377402,"line_start":81,"line_end":81,"column_start":24,"column_end":34},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":10411},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":378151,"byte_end":378161,"line_start":104,"line_end":104,"column_start":22,"column_end":32},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":10411},"to":{"krate":1,"index":2993}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":378881,"byte_end":378891,"line_start":126,"line_end":126,"column_start":23,"column_end":33},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":10411},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":379479,"byte_end":379489,"line_start":145,"line_end":145,"column_start":22,"column_end":32},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":10411},"to":{"krate":1,"index":3070}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":379628,"byte_end":379638,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":10411},"to":{"krate":25,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":379876,"byte_end":379886,"line_start":159,"line_end":159,"column_start":25,"column_end":35},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":10411},"to":{"krate":1,"index":3076}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/allow_std.rs","byte_start":380097,"byte_end":380107,"line_start":168,"line_end":168,"column_start":26,"column_end":36},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":10411},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":381817,"byte_end":381826,"line_start":39,"line_end":39,"column_start":20,"column_end":29},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":10448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":383048,"byte_end":383057,"line_start":79,"line_end":79,"column_start":34,"column_end":43},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":10448},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":384669,"byte_end":384678,"line_start":123,"line_end":123,"column_start":37,"column_end":46},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":10448},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":385531,"byte_end":385540,"line_start":147,"line_end":147,"column_start":36,"column_end":45},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":10448},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":385618,"byte_end":385627,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":10448},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_reader.rs","byte_start":385943,"byte_end":385952,"line_start":160,"line_end":160,"column_start":46,"column_end":55},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":10448},"to":{"krate":25,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":389760,"byte_end":389769,"line_start":38,"line_end":38,"column_start":21,"column_end":30},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":10504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":391343,"byte_end":391352,"line_start":90,"line_end":90,"column_start":36,"column_end":45},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":10504},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":392775,"byte_end":392784,"line_start":133,"line_end":133,"column_start":34,"column_end":43},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":10504},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":392865,"byte_end":392874,"line_start":137,"line_end":137,"column_start":40,"column_end":49},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":10504},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":392955,"byte_end":392964,"line_start":141,"line_end":141,"column_start":36,"column_end":45},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":10504},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/buf_writer.rs","byte_start":393323,"byte_end":393332,"line_start":151,"line_end":151,"column_start":47,"column_end":56},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":10504},"to":{"krate":25,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":394201,"byte_end":394206,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":10557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395507,"byte_end":395512,"line_start":64,"line_end":64,"column_start":27,"column_end":32},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":10557},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":395842,"byte_end":395847,"line_start":78,"line_end":78,"column_start":26,"column_end":31},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":10557},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/chain.rs","byte_start":397200,"byte_end":397205,"line_start":128,"line_end":128,"column_start":29,"column_end":34},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":10557},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398316,"byte_end":398321,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":10613},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398374,"byte_end":398379,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":10613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/close.rs","byte_start":398522,"byte_end":398527,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":10613},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy.rs","byte_start":400275,"byte_end":400279,"line_start":53,"line_end":53,"column_start":63,"column_end":67},"kind":{"Impl":{"id":867}},"from":{"krate":0,"index":10621},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/copy_buf.rs","byte_start":401963,"byte_end":401970,"line_start":56,"line_end":56,"column_start":23,"column_end":30},"kind":{"Impl":{"id":873}},"from":{"krate":0,"index":10686},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":403816,"byte_end":403822,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":874}},"from":{"krate":0,"index":10757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":407050,"byte_end":407056,"line_start":150,"line_end":150,"column_start":23,"column_end":29},"kind":{"Impl":{"id":875}},"from":{"krate":0,"index":10757},"to":{"krate":25,"index":25}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":407343,"byte_end":407349,"line_start":163,"line_end":163,"column_start":44,"column_end":50},"kind":{"Impl":{"id":876}},"from":{"krate":0,"index":10757},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":407981,"byte_end":407987,"line_start":187,"line_end":187,"column_start":26,"column_end":32},"kind":{"Impl":{"id":877}},"from":{"krate":0,"index":10757},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409136,"byte_end":409142,"line_start":224,"line_end":224,"column_start":21,"column_end":27},"kind":{"Impl":{"id":878}},"from":{"krate":0,"index":10757},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409217,"byte_end":409223,"line_start":228,"line_end":228,"column_start":21,"column_end":27},"kind":{"Impl":{"id":879}},"from":{"krate":0,"index":10757},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409301,"byte_end":409307,"line_start":232,"line_end":232,"column_start":21,"column_end":27},"kind":{"Impl":{"id":880}},"from":{"krate":0,"index":10757},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/cursor.rs","byte_start":409380,"byte_end":409386,"line_start":236,"line_end":236,"column_start":21,"column_end":27},"kind":{"Impl":{"id":881}},"from":{"krate":0,"index":10757},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410369,"byte_end":410374,"line_start":37,"line_end":37,"column_start":20,"column_end":25},"kind":{"Impl":{"id":882}},"from":{"krate":0,"index":3031},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410722,"byte_end":410727,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":883}},"from":{"krate":0,"index":3031},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/empty.rs","byte_start":410959,"byte_end":410964,"line_start":63,"line_end":63,"column_start":21,"column_end":26},"kind":{"Impl":{"id":884}},"from":{"krate":0,"index":3031},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411462,"byte_end":411469,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":885}},"from":{"krate":0,"index":10785},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411524,"byte_end":411531,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":886}},"from":{"krate":0,"index":10785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/fill_buf.rs","byte_start":411665,"byte_end":411672,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":10785},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413242,"byte_end":413247,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":10793},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413300,"byte_end":413305,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":10793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/flush.rs","byte_start":413419,"byte_end":413424,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":10793},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":414156,"byte_end":414161,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":10801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/lines.rs","byte_start":414381,"byte_end":414386,"line_start":34,"line_end":34,"column_start":34,"column_end":39},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":10801},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415380,"byte_end":415384,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":898}},"from":{"krate":0,"index":10852},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415436,"byte_end":415440,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":899}},"from":{"krate":0,"index":10852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read.rs","byte_start":415605,"byte_end":415609,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":900}},"from":{"krate":0,"index":10852},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416297,"byte_end":416309,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":901}},"from":{"krate":0,"index":10861},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416361,"byte_end":416373,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":902}},"from":{"krate":0,"index":10861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_vectored.rs","byte_start":416552,"byte_end":416564,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":10861},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417234,"byte_end":417243,"line_start":16,"line_end":16,"column_start":35,"column_end":44},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":10870},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417295,"byte_end":417304,"line_start":18,"line_end":18,"column_start":41,"column_end":50},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":10870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_exact.rs","byte_start":417474,"byte_end":417483,"line_start":24,"line_end":24,"column_start":48,"column_end":57},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":10870},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":418600,"byte_end":418608,"line_start":20,"line_end":20,"column_start":35,"column_end":43},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":10879},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":418663,"byte_end":418671,"line_start":22,"line_end":22,"column_start":44,"column_end":52},"kind":{"Impl":{"id":908}},"from":{"krate":0,"index":10879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_line.rs","byte_start":419698,"byte_end":419706,"line_start":54,"line_end":54,"column_start":51,"column_end":59},"kind":{"Impl":{"id":909}},"from":{"krate":0,"index":10879},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420436,"byte_end":420445,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":910}},"from":{"krate":0,"index":10890},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420497,"byte_end":420506,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":911}},"from":{"krate":0,"index":10890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":420787,"byte_end":420792,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":912}},"from":{"krate":0,"index":3202},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_end.rs","byte_start":422342,"byte_end":422351,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":913}},"from":{"krate":0,"index":10890},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":423199,"byte_end":423211,"line_start":19,"line_end":19,"column_start":35,"column_end":47},"kind":{"Impl":{"id":914}},"from":{"krate":0,"index":10900},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":423263,"byte_end":423275,"line_start":21,"line_end":21,"column_start":41,"column_end":53},"kind":{"Impl":{"id":915}},"from":{"krate":0,"index":10900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_to_string.rs","byte_start":424309,"byte_end":424321,"line_start":56,"line_end":56,"column_start":20,"column_end":32},"kind":{"Impl":{"id":916}},"from":{"krate":0,"index":10900},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":425116,"byte_end":425125,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":917}},"from":{"krate":0,"index":10911},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":425180,"byte_end":425189,"line_start":20,"line_end":20,"column_start":44,"column_end":53},"kind":{"Impl":{"id":918}},"from":{"krate":0,"index":10911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/read_until.rs","byte_start":426161,"byte_end":426170,"line_start":52,"line_end":52,"column_start":51,"column_end":60},"kind":{"Impl":{"id":919}},"from":{"krate":0,"index":10911},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":427369,"byte_end":427375,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":920}},"from":{"krate":0,"index":3274},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/repeat.rs","byte_start":428155,"byte_end":428161,"line_start":69,"line_end":69,"column_start":21,"column_end":27},"kind":{"Impl":{"id":921}},"from":{"krate":0,"index":3274},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428675,"byte_end":428679,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":922}},"from":{"krate":0,"index":10922},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428731,"byte_end":428735,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":923}},"from":{"krate":0,"index":10922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/seek.rs","byte_start":428892,"byte_end":428896,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":924}},"from":{"krate":0,"index":10922},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":430025,"byte_end":430029,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":925}},"from":{"krate":0,"index":3316},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/sink.rs","byte_start":430747,"byte_end":430751,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":926}},"from":{"krate":0,"index":3316},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":431756,"byte_end":431764,"line_start":36,"line_end":36,"column_start":16,"column_end":24},"kind":{"Impl":{"id":927}},"from":{"krate":0,"index":10931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432262,"byte_end":432271,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"kind":{"Impl":{"id":928}},"from":{"krate":0,"index":10937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":432663,"byte_end":432671,"line_start":56,"line_end":56,"column_start":34,"column_end":42},"kind":{"Impl":{"id":929}},"from":{"krate":0,"index":10931},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":433136,"byte_end":433145,"line_start":70,"line_end":70,"column_start":36,"column_end":45},"kind":{"Impl":{"id":930}},"from":{"krate":0,"index":10937},"to":{"krate":25,"index":20}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434122,"byte_end":434134,"line_start":96,"line_end":96,"column_start":24,"column_end":36},"kind":{"Impl":{"id":931}},"from":{"krate":0,"index":3373},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434324,"byte_end":434336,"line_start":104,"line_end":104,"column_start":26,"column_end":38},"kind":{"Impl":{"id":932}},"from":{"krate":0,"index":3373},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/split.rs","byte_start":434570,"byte_end":434582,"line_start":111,"line_end":111,"column_start":47,"column_end":59},"kind":{"Impl":{"id":933}},"from":{"krate":0,"index":3373},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":435113,"byte_end":435117,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":{"Impl":{"id":939}},"from":{"krate":0,"index":10943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":437044,"byte_end":437048,"line_start":85,"line_end":85,"column_start":34,"column_end":38},"kind":{"Impl":{"id":940}},"from":{"krate":0,"index":10943},"to":{"krate":25,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/take.rs","byte_start":437692,"byte_end":437696,"line_start":109,"line_end":109,"column_start":40,"column_end":44},"kind":{"Impl":{"id":941}},"from":{"krate":0,"index":10943},"to":{"krate":25,"index":27}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":439543,"byte_end":439549,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":942}},"from":{"krate":0,"index":10992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":441652,"byte_end":441658,"line_start":97,"line_end":97,"column_start":38,"column_end":44},"kind":{"Impl":{"id":943}},"from":{"krate":0,"index":10992},"to":{"krate":2,"index":1880}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/window.rs","byte_start":441805,"byte_end":441811,"line_start":103,"line_end":103,"column_start":38,"column_end":44},"kind":{"Impl":{"id":944}},"from":{"krate":0,"index":10992},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442332,"byte_end":442337,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":945}},"from":{"krate":0,"index":10999},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442390,"byte_end":442395,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":946}},"from":{"krate":0,"index":10999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write.rs","byte_start":442557,"byte_end":442562,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":947}},"from":{"krate":0,"index":10999},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443246,"byte_end":443259,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":948}},"from":{"krate":0,"index":11008},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443312,"byte_end":443325,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":949}},"from":{"krate":0,"index":11008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_vectored.rs","byte_start":443498,"byte_end":443511,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":950}},"from":{"krate":0,"index":11008},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":444178,"byte_end":444186,"line_start":16,"line_end":16,"column_start":35,"column_end":43},"kind":{"Impl":{"id":951}},"from":{"krate":0,"index":11017},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":444239,"byte_end":444247,"line_start":18,"line_end":18,"column_start":42,"column_end":50},"kind":{"Impl":{"id":952}},"from":{"krate":0,"index":11017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/write_all.rs","byte_start":444413,"byte_end":444421,"line_start":24,"line_end":24,"column_start":49,"column_end":57},"kind":{"Impl":{"id":953}},"from":{"krate":0,"index":11017},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":352822,"byte_end":352831,"line_start":140,"line_end":140,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":17},"to":{"krate":0,"index":3497}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360861,"byte_end":360862,"line_start":390,"line_end":390,"column_start":46,"column_end":47},"kind":{"Impl":{"id":954}},"from":{"krate":0,"index":3513},"to":{"krate":0,"index":3497}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":360965,"byte_end":360975,"line_start":393,"line_end":393,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":25,"index":20},"to":{"krate":0,"index":3514}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367047,"byte_end":367048,"line_start":577,"line_end":577,"column_start":48,"column_end":49},"kind":{"Impl":{"id":955}},"from":{"krate":0,"index":3524},"to":{"krate":0,"index":3514}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367149,"byte_end":367158,"line_start":580,"line_end":580,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":25,"index":25},"to":{"krate":0,"index":3525}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367582,"byte_end":367583,"line_start":593,"line_end":593,"column_start":46,"column_end":47},"kind":{"Impl":{"id":956}},"from":{"krate":0,"index":3528},"to":{"krate":0,"index":3525}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":367690,"byte_end":367702,"line_start":596,"line_end":596,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":25,"index":27},"to":{"krate":0,"index":3529}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/io/mod.rs","byte_start":374932,"byte_end":374933,"line_start":796,"line_end":796,"column_start":52,"column_end":53},"kind":{"Impl":{"id":957}},"from":{"krate":0,"index":3538},"to":{"krate":0,"index":3529}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445183,"byte_end":445184,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":958}},"from":{"krate":0,"index":3554},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445322,"byte_end":445329,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":3549},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445418,"byte_end":445419,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":959}},"from":{"krate":0,"index":3563},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445604,"byte_end":445610,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":3559},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":445688,"byte_end":445689,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":960}},"from":{"krate":0,"index":3571},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":446704,"byte_end":446708,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":961}},"from":{"krate":0,"index":3576},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":446802,"byte_end":446806,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":962}},"from":{"krate":0,"index":3576},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447065,"byte_end":447072,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":968}},"from":{"krate":0,"index":11044},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447295,"byte_end":447302,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":969}},"from":{"krate":0,"index":11044},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447493,"byte_end":447500,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":970}},"from":{"krate":0,"index":11044},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":447805,"byte_end":447818,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":971}},"from":{"krate":0,"index":11065},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":448235,"byte_end":448244,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":977}},"from":{"krate":0,"index":11081},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":448526,"byte_end":448535,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":978}},"from":{"krate":0,"index":11081},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":448795,"byte_end":448804,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":979}},"from":{"krate":0,"index":11081},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449124,"byte_end":449131,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":980}},"from":{"krate":0,"index":11096},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449350,"byte_end":449357,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":981}},"from":{"krate":0,"index":11096},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449535,"byte_end":449542,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":982}},"from":{"krate":0,"index":11096},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":449843,"byte_end":449851,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":983}},"from":{"krate":0,"index":11111},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450074,"byte_end":450082,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":984}},"from":{"krate":0,"index":11111},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450264,"byte_end":450272,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":985}},"from":{"krate":0,"index":11111},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450582,"byte_end":450593,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":986}},"from":{"krate":0,"index":11126},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":450830,"byte_end":450841,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":987}},"from":{"krate":0,"index":11126},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451056,"byte_end":451067,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":988}},"from":{"krate":0,"index":11126},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451412,"byte_end":451424,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":989}},"from":{"krate":0,"index":11138},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451662,"byte_end":451674,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":990}},"from":{"krate":0,"index":11138},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":451890,"byte_end":451902,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":991}},"from":{"krate":0,"index":11138},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":452499,"byte_end":452513,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":992}},"from":{"krate":0,"index":11150},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":452734,"byte_end":452748,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":993}},"from":{"krate":0,"index":11150},"to":{"krate":0,"index":3559}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":452947,"byte_end":452961,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":994}},"from":{"krate":0,"index":11150},"to":{"krate":0,"index":3567}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":453265,"byte_end":453271,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":995}},"from":{"krate":0,"index":3740},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/fns.rs","byte_start":453366,"byte_end":453372,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":996}},"from":{"krate":0,"index":3740},"to":{"krate":0,"index":3549}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8755685,"byte_end":8755690,"line_start":26,"line_end":26,"column_start":32,"column_end":37},"kind":{"Impl":{"id":1002}},"from":{"krate":0,"index":11206},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756023,"byte_end":8756028,"line_start":36,"line_end":36,"column_start":21,"column_end":26},"kind":{"Impl":{"id":1003}},"from":{"krate":0,"index":11206},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756121,"byte_end":8756126,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":1004}},"from":{"krate":0,"index":11206},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756264,"byte_end":8756270,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"Impl":{"id":1005}},"from":{"krate":0,"index":11220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8756814,"byte_end":8756819,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1006}},"from":{"krate":0,"index":11206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8757395,"byte_end":8757400,"line_start":98,"line_end":98,"column_start":17,"column_end":22},"kind":{"Impl":{"id":1007}},"from":{"krate":0,"index":11206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8760549,"byte_end":8760564,"line_start":189,"line_end":189,"column_start":32,"column_end":47},"kind":{"Impl":{"id":1008}},"from":{"krate":0,"index":11243},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8761074,"byte_end":8761089,"line_start":205,"line_end":205,"column_start":33,"column_end":48},"kind":{"Impl":{"id":1009}},"from":{"krate":0,"index":11243},"to":{"krate":18,"index":17}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8761206,"byte_end":8761221,"line_start":211,"line_end":211,"column_start":32,"column_end":47},"kind":{"Impl":{"id":1010}},"from":{"krate":0,"index":11243},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8762450,"byte_end":8762465,"line_start":247,"line_end":247,"column_start":26,"column_end":41},"kind":{"Impl":{"id":1011}},"from":{"krate":0,"index":11243},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8763067,"byte_end":8763077,"line_start":266,"line_end":266,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1012}},"from":{"krate":0,"index":11262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764089,"byte_end":8764099,"line_start":296,"line_end":296,"column_start":45,"column_end":55},"kind":{"Impl":{"id":1013}},"from":{"krate":0,"index":11262},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764344,"byte_end":8764354,"line_start":305,"line_end":305,"column_start":26,"column_end":36},"kind":{"Impl":{"id":1014}},"from":{"krate":0,"index":11262},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764452,"byte_end":8764462,"line_start":311,"line_end":311,"column_start":27,"column_end":37},"kind":{"Impl":{"id":1015}},"from":{"krate":0,"index":11262},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8764603,"byte_end":8764613,"line_start":318,"line_end":318,"column_start":30,"column_end":40},"kind":{"Impl":{"id":1016}},"from":{"krate":0,"index":11262},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8765064,"byte_end":8765080,"line_start":332,"line_end":332,"column_start":32,"column_end":48},"kind":{"Impl":{"id":1017}},"from":{"krate":0,"index":11285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766210,"byte_end":8766226,"line_start":363,"line_end":363,"column_start":56,"column_end":72},"kind":{"Impl":{"id":1018}},"from":{"krate":0,"index":11285},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766491,"byte_end":8766507,"line_start":372,"line_end":372,"column_start":37,"column_end":53},"kind":{"Impl":{"id":1019}},"from":{"krate":0,"index":11285},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766619,"byte_end":8766635,"line_start":378,"line_end":378,"column_start":38,"column_end":54},"kind":{"Impl":{"id":1020}},"from":{"krate":0,"index":11285},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8766778,"byte_end":8766794,"line_start":385,"line_end":385,"column_start":41,"column_end":57},"kind":{"Impl":{"id":1021}},"from":{"krate":0,"index":11285},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767071,"byte_end":8767076,"line_start":393,"line_end":393,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1022}},"from":{"krate":0,"index":11206},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767122,"byte_end":8767127,"line_start":394,"line_end":394,"column_start":40,"column_end":45},"kind":{"Impl":{"id":1023}},"from":{"krate":0,"index":11206},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767294,"byte_end":8767309,"line_start":398,"line_end":398,"column_start":40,"column_end":55},"kind":{"Impl":{"id":1024}},"from":{"krate":0,"index":11243},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767413,"byte_end":8767428,"line_start":400,"line_end":400,"column_start":33,"column_end":48},"kind":{"Impl":{"id":1025}},"from":{"krate":0,"index":11243},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767632,"byte_end":8767642,"line_start":404,"line_end":404,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1026}},"from":{"krate":0,"index":11262},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767692,"byte_end":8767702,"line_start":405,"line_end":405,"column_start":40,"column_end":50},"kind":{"Impl":{"id":1027}},"from":{"krate":0,"index":11262},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767770,"byte_end":8767786,"line_start":406,"line_end":406,"column_start":58,"column_end":74},"kind":{"Impl":{"id":1028}},"from":{"krate":0,"index":11285},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/mutex.rs","byte_start":8767857,"byte_end":8767873,"line_start":407,"line_end":407,"column_start":58,"column_end":74},"kind":{"Impl":{"id":1029}},"from":{"krate":0,"index":11285},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8769877,"byte_end":8769882,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1030}},"from":{"krate":0,"index":11404},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8769919,"byte_end":8769924,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1031}},"from":{"krate":0,"index":11404},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8769940,"byte_end":8769946,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":1032}},"from":{"krate":0,"index":11398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8775631,"byte_end":8775636,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"kind":{"Impl":{"id":1033}},"from":{"krate":0,"index":11404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8775758,"byte_end":8775763,"line_start":195,"line_end":195,"column_start":18,"column_end":23},"kind":{"Impl":{"id":1034}},"from":{"krate":0,"index":11404},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776091,"byte_end":8776103,"line_start":206,"line_end":206,"column_start":24,"column_end":36},"kind":{"Impl":{"id":1035}},"from":{"krate":0,"index":11371},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776293,"byte_end":8776305,"line_start":214,"line_end":214,"column_start":26,"column_end":38},"kind":{"Impl":{"id":1036}},"from":{"krate":0,"index":11371},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776526,"byte_end":8776538,"line_start":221,"line_end":221,"column_start":47,"column_end":59},"kind":{"Impl":{"id":1037}},"from":{"krate":0,"index":11371},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8776920,"byte_end":8776931,"line_start":234,"line_end":234,"column_start":19,"column_end":30},"kind":{"Impl":{"id":1038}},"from":{"krate":0,"index":11411},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8777094,"byte_end":8777105,"line_start":241,"line_end":241,"column_start":29,"column_end":40},"kind":{"Impl":{"id":1039}},"from":{"krate":0,"index":11411},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8777243,"byte_end":8777254,"line_start":247,"line_end":247,"column_start":9,"column_end":20},"kind":{"Impl":{"id":1040}},"from":{"krate":0,"index":11411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.7/src/lock/bilock.rs","byte_start":8777606,"byte_end":8777617,"line_start":256,"line_end":256,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1041}},"from":{"krate":0,"index":11411},"to":{"krate":2,"index":2166}}]}