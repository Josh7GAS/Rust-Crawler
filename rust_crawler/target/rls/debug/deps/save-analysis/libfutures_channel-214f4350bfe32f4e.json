{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7","program":"/home/josh7gas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_channel","--edition=2018","/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=214f4350bfe32f4e","-C","extra-filename=-214f4350bfe32f4e","--out-dir","/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps","-L","dependency=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps","--extern","futures_core=/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libfutures_core-0a96d7cf85a3c2c3.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/josh7gas/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/josh7gas/github.com/Josh7GAS/Oficina/Rust/test/rust_crawler/target/rls/debug/deps/libfutures_channel-214f4350bfe32f4e.rmeta"},"prelude":{"crate_id":{"name":"futures_channel","disambiguator":[3251105808809381759,17814373489999424241]},"crate_root":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src","external_crates":[{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7603043973503281951,6245179856538753269]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","num":2,"id":{"name":"core","disambiguator":[13741360846946026623,2672266499591153283]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[4729845745352067521,14981637654352572000]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[9324331421111590993,11905740212167270908]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11392341838745785002,13287300438441731562]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8694337109875809164,2250367951223185901]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10935849247287619708,10935329660555626336]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5583458701817410803,1770096645244614441]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[4926505318506753650,8786990194761766393]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15262570485262297613,5690312430589388023]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[16900335184017598038,9051488994794742296]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[528960645316233979,8037674519295179684]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4483237274112351560,17959943558012528736]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[384772052184402859,1578385820564656749]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[12301751291607961788,16569514459755551136]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4223616801544016660,17489963460572122123]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3882963855561891520,1067502799155491607]}},{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","num":18,"id":{"name":"futures_core","disambiguator":[17846188185908526815,16527903141768937787]}}],"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":0,"byte_end":1732,"line_start":1,"line_end":47,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":0,"byte_end":1732,"line_start":1,"line_end":47,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":34},{"krate":0,"index":256}],"decl_id":null,"docs":" Asynchronous channels.","sig":null,"attributes":[{"value":"/ Asynchronous channels.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":27,"byte_end":30,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides channels that can be used to communicate between","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":31,"byte_end":103,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":104,"byte_end":127,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":128,"byte_end":131,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ All items of this library are only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":132,"byte_end":222,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":223,"byte_end":280,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":407,"byte_end":495,"line_start":13,"line_end":13,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":663,"byte_end":684,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":889,"byte_end":966,"line_start":21,"line_end":21,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":34},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::mpsc","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":527},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":345},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":90},{"krate":0,"index":374},{"krate":0,"index":385},{"krate":0,"index":383},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":387},{"krate":0,"index":402},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":405},{"krate":0,"index":418},{"krate":0,"index":416},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":420},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":446},{"krate":0,"index":444},{"krate":0,"index":443},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":140},{"krate":0,"index":155},{"krate":0,"index":170},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":1638,"byte_end":1661,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/ A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812165,"byte_end":6812234,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812235,"byte_end":6812258,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812259,"byte_end":6812262,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Similarly to the `std`, channel creation provides [`Receiver`] and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812263,"byte_end":6812333,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ [`Sender`] handles. [`Receiver`] implements [`Stream`] and allows a task to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812334,"byte_end":6812413,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ read values out of the channel. If there is no message to read from the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812414,"byte_end":6812489,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ channel, the current task will be notified when a new value is sent.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812490,"byte_end":6812562,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ [`Sender`] implements the `Sink` trait and allows a task to send messages into","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812563,"byte_end":6812645,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ the channel. If the channel is at capacity, the send will be rejected and","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812646,"byte_end":6812723,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ the task will be notified when additional capacity is available. In other","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812724,"byte_end":6812801,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ words, the channel provides backpressure.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812802,"byte_end":6812847,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812848,"byte_end":6812851,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Unbounded channels are also available using the `unbounded` constructor.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812852,"byte_end":6812928,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812929,"byte_end":6812932,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812933,"byte_end":6812952,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812953,"byte_end":6812956,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6812957,"byte_end":6813023,"line_start":17,"line_end":17,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813024,"byte_end":6813104,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, [`Receiver::poll_next`]","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813105,"byte_end":6813162,"line_start":19,"line_end":19,"column_start":1,"column_end":58}},{"value":"/ will return `Ok(Ready(None))`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813163,"byte_end":6813197,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813198,"byte_end":6813201,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813202,"byte_end":6813272,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813273,"byte_end":6813352,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813353,"byte_end":6813376,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813377,"byte_end":6813380,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813381,"byte_end":6813401,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813402,"byte_end":6813405,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] is simply dropped, then it is possible for","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813406,"byte_end":6813472,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"/ there to be messages still in the channel that will not be processed. As","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813473,"byte_end":6813549,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ such, it is usually desirable to perform a \"clean\" shutdown. To do this, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813550,"byte_end":6813630,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ receiver will first call `close`, which will prevent any further messages to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813631,"byte_end":6813711,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ be sent into the channel. Then, the receiver consumes the channel to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813712,"byte_end":6813784,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"/ completion, at which point the receiver can be dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813785,"byte_end":6813844,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813845,"byte_end":6813848,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813849,"byte_end":6813883,"line_start":35,"line_end":35,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813884,"byte_end":6813922,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ [`Stream`]: ../../futures_core/stream/trait.Stream.html","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813923,"byte_end":6813982,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ [`Receiver::poll_next`]:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6813983,"byte_end":6814011,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/     ../../futures_core/stream/trait.Stream.html#tymethod.poll_next","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6814012,"byte_end":6814082,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":348},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817456,"byte_end":6817462,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"Sender","qualname":"::mpsc::Sender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of a bounded mpsc channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817308,"byte_end":6817359,"line_start":121,"line_end":121,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817360,"byte_end":6817363,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817364,"byte_end":6817427,"line_start":123,"line_end":123,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817654,"byte_end":6817669,"line_start":131,"line_end":131,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::mpsc::UnboundedSender","value":"","parent":null,"children":[],"decl_id":null,"docs":" The transmission end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The transmission end of an unbounded mpsc channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817499,"byte_end":6817553,"line_start":127,"line_end":127,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817554,"byte_end":6817557,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817558,"byte_end":6817625,"line_start":129,"line_end":129,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817941,"byte_end":6817949,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::mpsc::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":364}],"decl_id":null,"docs":" The receiving end of a bounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of a bounded mpsc channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817796,"byte_end":6817844,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817845,"byte_end":6817848,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`channel`](channel) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817849,"byte_end":6817912,"line_start":138,"line_end":138,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818151,"byte_end":6818168,"line_start":148,"line_end":148,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::mpsc::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":370}],"decl_id":null,"docs":" The receiving end of an unbounded mpsc channel.","sig":null,"attributes":[{"value":"/ The receiving end of an unbounded mpsc channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817999,"byte_end":6818050,"line_start":144,"line_end":144,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818051,"byte_end":6818054,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This value is created by the [`unbounded`](unbounded) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818055,"byte_end":6818122,"line_start":146,"line_end":146,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":374},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818445,"byte_end":6818454,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"SendError","qualname":"::mpsc::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":375}],"decl_id":null,"docs":" The error type for [`Sender`s](Sender) used as `Sink`s.\n","sig":null,"attributes":[{"value":"/ The error type for [`Sender`s](Sender) used as `Sink`s.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818335,"byte_end":6818394,"line_start":155,"line_end":155,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818593,"byte_end":6818605,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"TrySendError","qualname":"::mpsc::TrySendError","value":"TrySendError {  }","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":" The error type returned from [`try_send`](Sender::try_send).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_send`](Sender::try_send).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818485,"byte_end":6818549,"line_start":161,"line_end":161,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818815,"byte_end":6818827,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"TryRecvError","qualname":"::mpsc::TryRecvError","value":"TryRecvError {  }","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" The error type returned from [`try_next`](Receiver::try_next).\n","sig":null,"attributes":[{"value":"/ The error type returned from [`try_next`](Receiver::try_next).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818737,"byte_end":6818803,"line_start":174,"line_end":174,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819277,"byte_end":6819284,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"is_full","qualname":"<SendError>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819194,"byte_end":6819265,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819501,"byte_end":6819516,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<SendError>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819414,"byte_end":6819489,"line_start":200,"line_end":200,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820341,"byte_end":6820348,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"is_full","qualname":"<TrySendError<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the channel being full.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the channel being full.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820258,"byte_end":6820329,"line_start":230,"line_end":230,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820491,"byte_end":6820506,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"is_disconnected","qualname":"<TrySendError<T>>::is_disconnected","value":"pub fn is_disconnected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this error is a result of the receiver being dropped.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this error is a result of the receiver being dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820404,"byte_end":6820479,"line_start":235,"line_end":235,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820647,"byte_end":6820657,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<TrySendError<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the message that was attempted to be sent but failed.\n","sig":null,"attributes":[{"value":"/ Returns the message that was attempted to be sent but failed.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820570,"byte_end":6820635,"line_start":240,"line_end":240,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820765,"byte_end":6820780,"line_start":246,"line_end":246,"column_start":12,"column_end":27},"name":"into_send_error","qualname":"<TrySendError<T>>::into_send_error","value":"pub fn into_send_error(Self) -> SendError","parent":null,"children":[],"decl_id":null,"docs":" Drops the message and converts into a `SendError`.\n","sig":null,"attributes":[{"value":"/ Drops the message and converts into a `SendError`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820699,"byte_end":6820753,"line_start":245,"line_end":245,"column_start":5,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6824191,"byte_end":6824198,"line_start":363,"line_end":363,"column_start":8,"column_end":15},"name":"channel","qualname":"::mpsc::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823565,"byte_end":6823645,"line_start":352,"line_end":352,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823646,"byte_end":6823649,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Being bounded, this channel provides backpressure to ensure that the sender","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823650,"byte_end":6823729,"line_start":354,"line_end":354,"column_start":1,"column_end":80}},{"value":"/ outpaces the receiver by only a limited amount. The channel's capacity is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823730,"byte_end":6823807,"line_start":355,"line_end":355,"column_start":1,"column_end":78}},{"value":"/ equal to `buffer + num-senders`. In other words, each sender gets a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823808,"byte_end":6823879,"line_start":356,"line_end":356,"column_start":1,"column_end":72}},{"value":"/ guaranteed slot in the channel capacity, and on top of that there are","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823880,"byte_end":6823953,"line_start":357,"line_end":357,"column_start":1,"column_end":74}},{"value":"/ `buffer` \"first come, first serve\" slots available to all senders.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823954,"byte_end":6824024,"line_start":358,"line_end":358,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6824025,"byte_end":6824028,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ The [`Receiver`](Receiver) returned implements the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6824029,"byte_end":6824083,"line_start":360,"line_end":360,"column_start":1,"column_end":55}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait, while [`Sender`](Sender) implements","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6824084,"byte_end":6824171,"line_start":361,"line_end":361,"column_start":1,"column_end":88}},{"value":"/ `Sink`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6824172,"byte_end":6824183,"line_start":362,"line_end":362,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825462,"byte_end":6825471,"line_start":400,"line_end":400,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::mpsc::unbounded","value":"pub fn unbounded<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6824950,"byte_end":6825026,"line_start":390,"line_end":390,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825027,"byte_end":6825037,"line_start":391,"line_end":391,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825038,"byte_end":6825041,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825042,"byte_end":6825122,"line_start":393,"line_end":393,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825123,"byte_end":6825202,"line_start":394,"line_end":394,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825203,"byte_end":6825216,"line_start":395,"line_end":395,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825217,"byte_end":6825220,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825221,"byte_end":6825300,"line_start":397,"line_end":397,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825301,"byte_end":6825377,"line_start":398,"line_end":398,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825378,"byte_end":6825454,"line_start":399,"line_end":399,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836244,"byte_end":6836252,"line_start":722,"line_end":722,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&mut Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `Sender`, returning the message\n if there was an error.\n","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `Sender`, returning the message","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836131,"byte_end":6836201,"line_start":720,"line_end":720,"column_start":5,"column_end":75}},{"value":"/ if there was an error.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836206,"byte_end":6836232,"line_start":721,"line_end":721,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836813,"byte_end":6836823,"line_start":740,"line_end":740,"column_start":12,"column_end":22},"name":"start_send","qualname":"<Sender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836597,"byte_end":6836631,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836636,"byte_end":6836639,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This function should only be called after","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836644,"byte_end":6836689,"line_start":737,"line_end":737,"column_start":5,"column_end":50}},{"value":"/ [`poll_ready`](Sender::poll_ready) has reported that the channel is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836694,"byte_end":6836765,"line_start":738,"line_end":738,"column_start":5,"column_end":76}},{"value":"/ ready to receive a message.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836770,"byte_end":6836801,"line_start":739,"line_end":739,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837451,"byte_end":6837461,"line_start":757,"line_end":757,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Polls the channel to determine if there is guaranteed capacity to send\n at least one item without waiting.","sig":null,"attributes":[{"value":"/ Polls the channel to determine if there is guaranteed capacity to send","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836940,"byte_end":6837014,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ at least one item without waiting.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837019,"byte_end":6837057,"line_start":746,"line_end":746,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837062,"byte_end":6837065,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837070,"byte_end":6837088,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837093,"byte_end":6837096,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837101,"byte_end":6837125,"line_start":750,"line_end":750,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837130,"byte_end":6837133,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Ok(_))` if there is sufficient capacity;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837138,"byte_end":6837197,"line_start":752,"line_end":752,"column_start":5,"column_end":64}},{"value":"/ - `Poll::Pending` if the channel may not have","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837202,"byte_end":6837251,"line_start":753,"line_end":753,"column_start":5,"column_end":54}},{"value":"/   capacity, in which case the current task is queued to be notified once","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837256,"byte_end":6837332,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/   capacity is available;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837337,"byte_end":6837365,"line_start":755,"line_end":755,"column_start":5,"column_end":33}},{"value":"/ - `Poll::Ready(Err(SendError))` if the receiver has been dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837370,"byte_end":6837439,"line_start":756,"line_end":756,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837786,"byte_end":6837795,"line_start":768,"line_end":768,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837705,"byte_end":6837774,"line_start":767,"line_end":767,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837985,"byte_end":6837998,"line_start":773,"line_end":773,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<Sender<T>>::close_channel","value":"pub fn close_channel(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6837899,"byte_end":6837973,"line_start":772,"line_end":772,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838214,"byte_end":6838224,"line_start":780,"line_end":780,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<Sender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838111,"byte_end":6838202,"line_start":779,"line_end":779,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838342,"byte_end":6838355,"line_start":785,"line_end":785,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<Sender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838272,"byte_end":6838330,"line_start":784,"line_end":784,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838603,"byte_end":6838618,"line_start":793,"line_end":793,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838538,"byte_end":6838591,"line_start":792,"line_end":792,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838886,"byte_end":6838899,"line_start":801,"line_end":801,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<Sender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6838826,"byte_end":6838874,"line_start":800,"line_end":800,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839180,"byte_end":6839190,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<UnboundedSender<T>>::poll_ready","value":"pub fn poll_ready(&Self, &mut Context) -> Poll<Result<(), SendError>>","parent":null,"children":[],"decl_id":null,"docs":" Check if the channel is ready to receive a message.\n","sig":null,"attributes":[{"value":"/ Check if the channel is ready to receive a message.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839113,"byte_end":6839168,"line_start":810,"line_end":810,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839511,"byte_end":6839520,"line_start":822,"line_end":822,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this channel is closed without needing a context.\n","sig":null,"attributes":[{"value":"/ Returns whether this channel is closed without needing a context.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839430,"byte_end":6839499,"line_start":821,"line_end":821,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839712,"byte_end":6839725,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"close_channel","qualname":"<UnboundedSender<T>>::close_channel","value":"pub fn close_channel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this channel from the sender side, preventing any new messages.\n","sig":null,"attributes":[{"value":"/ Closes this channel from the sender side, preventing any new messages.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839626,"byte_end":6839700,"line_start":826,"line_end":826,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839933,"byte_end":6839943,"line_start":834,"line_end":834,"column_start":12,"column_end":22},"name":"disconnect","qualname":"<UnboundedSender<T>>::disconnect","value":"pub fn disconnect(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disconnects this sender from the channel, closing it if there are no more senders left.\n","sig":null,"attributes":[{"value":"/ Disconnects this sender from the channel, closing it if there are no more senders left.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839830,"byte_end":6839921,"line_start":833,"line_end":833,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840660,"byte_end":6840670,"line_start":859,"line_end":859,"column_start":12,"column_end":22},"name":"start_send","qualname":"<UnboundedSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError>","parent":null,"children":[],"decl_id":null,"docs":" Send a message on the channel.","sig":null,"attributes":[{"value":"/ Send a message on the channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840465,"byte_end":6840499,"line_start":855,"line_end":855,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840504,"byte_end":6840507,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ This method should only be called after `poll_ready` has been used to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840512,"byte_end":6840585,"line_start":857,"line_end":857,"column_start":5,"column_end":78}},{"value":"/ verify that the channel is ready to receive a message.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840590,"byte_end":6840648,"line_start":858,"line_end":858,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841035,"byte_end":6841049,"line_start":869,"line_end":869,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<UnboundedSender<T>>::unbounded_send","value":"pub fn unbounded_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message along this channel.","sig":null,"attributes":[{"value":"/ Sends a message along this channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840789,"byte_end":6840828,"line_start":864,"line_end":864,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840833,"byte_end":6840836,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ This is an unbounded sender, so this function differs from `Sink::send`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840841,"byte_end":6840916,"line_start":866,"line_end":866,"column_start":5,"column_end":80}},{"value":"/ by ensuring the return type reflects that the channel is always ready to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6840921,"byte_end":6840997,"line_start":867,"line_end":867,"column_start":5,"column_end":81}},{"value":"/ receive messages.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841002,"byte_end":6841023,"line_start":868,"line_end":868,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841208,"byte_end":6841221,"line_start":874,"line_end":874,"column_start":12,"column_end":25},"name":"same_receiver","qualname":"<UnboundedSender<T>>::same_receiver","value":"pub fn same_receiver(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the senders send to the same receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the senders send to the same receiver.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841138,"byte_end":6841196,"line_start":873,"line_end":873,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841469,"byte_end":6841484,"line_start":882,"line_end":882,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<UnboundedSender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &UnboundedReceiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the sender send to this receiver.\n","sig":null,"attributes":[{"value":"/ Returns whether the sender send to this receiver.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841404,"byte_end":6841457,"line_start":881,"line_end":881,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841761,"byte_end":6841774,"line_start":890,"line_end":890,"column_start":12,"column_end":25},"name":"hash_receiver","qualname":"<UnboundedSender<T>>::hash_receiver","value":"pub fn hash_receiver<H>(&Self, &mut H) where H: std::hash::Hasher","parent":null,"children":[],"decl_id":null,"docs":" Hashes the receiver into the provided hasher\n","sig":null,"attributes":[{"value":"/ Hashes the receiver into the provided hasher","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841701,"byte_end":6841749,"line_start":889,"line_end":889,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845355,"byte_end":6845360,"line_start":1007,"line_end":1007,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845118,"byte_end":6845182,"line_start":1003,"line_end":1003,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845187,"byte_end":6845190,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845195,"byte_end":6845270,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845275,"byte_end":6845343,"line_start":1006,"line_end":1006,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6846143,"byte_end":6846151,"line_start":1027,"line_end":1027,"column_start":12,"column_end":20},"name":"try_next","qualname":"<Receiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845755,"byte_end":6845830,"line_start":1019,"line_end":1019,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845835,"byte_end":6845838,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845843,"byte_end":6845915,"line_start":1021,"line_end":1021,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845920,"byte_end":6845994,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845999,"byte_end":6846019,"line_start":1023,"line_end":1023,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6846024,"byte_end":6846027,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6846032,"byte_end":6846106,"line_start":1025,"line_end":1025,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6846111,"byte_end":6846131,"line_start":1026,"line_end":1026,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850184,"byte_end":6850189,"line_start":1143,"line_end":1143,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6849947,"byte_end":6850011,"line_start":1139,"line_end":1139,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850016,"byte_end":6850019,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850024,"byte_end":6850099,"line_start":1141,"line_end":1141,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850104,"byte_end":6850172,"line_start":1142,"line_end":1142,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850691,"byte_end":6850699,"line_start":1157,"line_end":1157,"column_start":12,"column_end":20},"name":"try_next","qualname":"<UnboundedReceiver<T>>::try_next","value":"pub fn try_next(&mut Self) -> Result<Option<T>, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to receive the next message without notifying a context if empty.","sig":null,"attributes":[{"value":"/ Tries to receive the next message without notifying a context if empty.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850303,"byte_end":6850378,"line_start":1149,"line_end":1149,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850383,"byte_end":6850386,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to call this function from inside of a future,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850391,"byte_end":6850463,"line_start":1151,"line_end":1151,"column_start":5,"column_end":77}},{"value":"/ only when you've otherwise arranged to be notified when the channel is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850468,"byte_end":6850542,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/ no longer empty.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850547,"byte_end":6850567,"line_start":1153,"line_end":1153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850572,"byte_end":6850575,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called after `try_next` or `poll_next` has","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850580,"byte_end":6850654,"line_start":1155,"line_end":1155,"column_start":5,"column_end":79}},{"value":"/ returned `None`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6850659,"byte_end":6850679,"line_start":1156,"line_end":1156,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":256},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::oneshot","value":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":553},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":465},{"krate":0,"index":471},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":285},{"krate":0,"index":292},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":295},{"krate":0,"index":482},{"krate":0,"index":493},{"krate":0,"index":492},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":484},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":310}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":1684,"byte_end":1709,"line_start":45,"line_end":45,"column_start":5,"column_end":30}},{"value":"/ A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862089,"byte_end":6862159,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862160,"byte_end":6862163,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is a single-producer, single-consumer channel.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862164,"byte_end":6862219,"line_start":3,"line_end":3,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862698,"byte_end":6862706,"line_start":20,"line_end":20,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":455}],"decl_id":null,"docs":" A future for a value that will be provided by another asynchronous task.","sig":null,"attributes":[{"value":"/ A future for a value that will be provided by another asynchronous task.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862463,"byte_end":6862539,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862540,"byte_end":6862543,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862544,"byte_end":6862601,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862602,"byte_end":6862669,"line_start":18,"line_end":18,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":459},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862891,"byte_end":6862897,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Sender","qualname":"::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":461}],"decl_id":null,"docs":" A means of transmitting a single value to another task.","sig":null,"attributes":[{"value":"/ A means of transmitting a single value to another task.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862741,"byte_end":6862800,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862801,"byte_end":6862804,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`channel`](channel) function.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6862805,"byte_end":6862862,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6866001,"byte_end":6866008,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"channel","qualname":"::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new one-shot channel for sending a single value across asynchronous tasks.","sig":null,"attributes":[{"value":"/ Creates a new one-shot channel for sending a single value across asynchronous tasks.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6864802,"byte_end":6864890,"line_start":73,"line_end":73,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6864891,"byte_end":6864894,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The channel works for a spsc (single-producer, single-consumer) scheme.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6864895,"byte_end":6864970,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6864971,"byte_end":6864974,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is similar to Rust's channel constructor found in the standard","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6864975,"byte_end":6865055,"line_start":77,"line_end":77,"column_start":1,"column_end":81}},{"value":"/ library. Two halves are returned, the first of which is a `Sender` handle,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865056,"byte_end":6865134,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ used to signal the end of a computation and provide its value. The second","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865135,"byte_end":6865212,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ half is a `Receiver` which implements the `Future` trait, resolving to the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865213,"byte_end":6865291,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ value that was given to the `Sender` handle.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865292,"byte_end":6865340,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865341,"byte_end":6865344,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Each half can be separately owned and sent across tasks.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865345,"byte_end":6865405,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865406,"byte_end":6865409,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865410,"byte_end":6865424,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865425,"byte_end":6865428,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865429,"byte_end":6865436,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865437,"byte_end":6865471,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/ use std::{thread, time::Duration};","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865472,"byte_end":6865510,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865511,"byte_end":6865514,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ let (sender, receiver) = oneshot::channel::<i32>();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865515,"byte_end":6865570,"line_start":91,"line_end":91,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865571,"byte_end":6865574,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(|| {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865575,"byte_end":6865597,"line_start":93,"line_end":93,"column_start":1,"column_end":23}},{"value":"/     println!(\"THREAD: sleeping zzz...\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865598,"byte_end":6865642,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/     thread::sleep(Duration::from_millis(1000));","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865643,"byte_end":6865694,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     println!(\"THREAD: i'm awake! sending.\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865695,"byte_end":6865743,"line_start":96,"line_end":96,"column_start":1,"column_end":49}},{"value":"/     sender.send(3).unwrap();","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865744,"byte_end":6865776,"line_start":97,"line_end":97,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865777,"byte_end":6865784,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865785,"byte_end":6865788,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ println!(\"MAIN: doing some useful stuff\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865789,"byte_end":6865835,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865836,"byte_end":6865839,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ futures::executor::block_on(async {","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865840,"byte_end":6865879,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"/     println!(\"MAIN: waiting for msg...\");","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865880,"byte_end":6865925,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     println!(\"MAIN: got: {:?}\", receiver.await)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865926,"byte_end":6865977,"line_start":104,"line_end":104,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865978,"byte_end":6865985,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6865986,"byte_end":6865993,"line_start":106,"line_end":106,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875276,"byte_end":6875280,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Completes this oneshot with a successful result.","sig":null,"attributes":[{"value":"/ Completes this oneshot with a successful result.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6874783,"byte_end":6874835,"line_start":336,"line_end":336,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6874840,"byte_end":6874843,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This function will consume `self` and indicate to the other end, the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6874848,"byte_end":6874920,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ [`Receiver`](Receiver), that the value provided is the result of the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6874925,"byte_end":6874997,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ computation this represents.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875002,"byte_end":6875034,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875039,"byte_end":6875042,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ If the value is successfully enqueued for the remote end to receive,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875047,"byte_end":6875119,"line_start":342,"line_end":342,"column_start":5,"column_end":77}},{"value":"/ then `Ok(())` is returned. If the receiving end was dropped before","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875124,"byte_end":6875194,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ this function was called, however, then `Err(t)` is returned.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875199,"byte_end":6875264,"line_start":344,"line_end":344,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875932,"byte_end":6875945,"line_start":361,"line_end":361,"column_start":12,"column_end":25},"name":"poll_canceled","qualname":"<Sender<T>>::poll_canceled","value":"pub fn poll_canceled(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Polls this `Sender` half to detect whether its associated\n [`Receiver`](Receiver) has been dropped.","sig":null,"attributes":[{"value":"/ Polls this `Sender` half to detect whether its associated","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875350,"byte_end":6875411,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ [`Receiver`](Receiver) has been dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875416,"byte_end":6875460,"line_start":350,"line_end":350,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875465,"byte_end":6875468,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Return values","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875473,"byte_end":6875492,"line_start":352,"line_end":352,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875497,"byte_end":6875500,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If `Ready(())` is returned then the associated `Receiver` has been","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875505,"byte_end":6875575,"line_start":354,"line_end":354,"column_start":5,"column_end":75}},{"value":"/ dropped, which means any work required for sending should be canceled.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875580,"byte_end":6875654,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875659,"byte_end":6875662,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If `Pending` is returned then the associated `Receiver` is still","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875667,"byte_end":6875735,"line_start":357,"line_end":357,"column_start":5,"column_end":73}},{"value":"/ alive and may be able to receive a message if sent. The current task,","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875740,"byte_end":6875813,"line_start":358,"line_end":358,"column_start":5,"column_end":78}},{"value":"/ however, is scheduled to receive a notification if the corresponding","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875818,"byte_end":6875890,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ `Receiver` goes away.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6875895,"byte_end":6875920,"line_start":360,"line_end":360,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876310,"byte_end":6876322,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"cancellation","qualname":"<Sender<T>>::cancellation","value":"pub fn cancellation(&mut Self) -> Cancellation<, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that resolves when this `Sender`'s corresponding\n [`Receiver`](Receiver) half has hung up.","sig":null,"attributes":[{"value":"/ Creates a future that resolves when this `Sender`'s corresponding","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876041,"byte_end":6876110,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ [`Receiver`](Receiver) half has hung up.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876115,"byte_end":6876159,"line_start":366,"line_end":366,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876164,"byte_end":6876167,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This is a utility wrapping [`poll_canceled`](Sender::poll_canceled)","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876172,"byte_end":6876243,"line_start":368,"line_end":368,"column_start":5,"column_end":76}},{"value":"/ to expose a [`Future`](core::future::Future). ","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876248,"byte_end":6876298,"line_start":369,"line_end":369,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876746,"byte_end":6876757,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"is_canceled","qualname":"<Sender<T>>::is_canceled","value":"pub fn is_canceled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender`'s corresponding `Receiver`\n has been dropped.","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender`'s corresponding `Receiver`","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876407,"byte_end":6876472,"line_start":374,"line_end":374,"column_start":5,"column_end":70}},{"value":"/ has been dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876477,"byte_end":6876498,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876503,"byte_end":6876506,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Unlike [`poll_canceled`](Sender::poll_canceled), this function does not","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876511,"byte_end":6876586,"line_start":377,"line_end":377,"column_start":5,"column_end":80}},{"value":"/ enqueue a task for wakeup upon cancellation, but merely reports the","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876591,"byte_end":6876662,"line_start":378,"line_end":378,"column_start":5,"column_end":76}},{"value":"/ current state, which may be subject to concurrent modification.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876667,"byte_end":6876734,"line_start":379,"line_end":379,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876981,"byte_end":6876996,"line_start":386,"line_end":386,"column_start":12,"column_end":27},"name":"is_connected_to","qualname":"<Sender<T>>::is_connected_to","value":"pub fn is_connected_to(&Self, &Receiver<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether\n they were created by the same call to `channel`.\n","sig":null,"attributes":[{"value":"/ Tests to see whether this `Sender` is connected to the given `Receiver`. That is, whether","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876819,"byte_end":6876912,"line_start":384,"line_end":384,"column_start":5,"column_end":98}},{"value":"/ they were created by the same call to `channel`.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6876917,"byte_end":6876969,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":474},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877457,"byte_end":6877469,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"Cancellation","qualname":"::oneshot::Cancellation","value":"Cancellation {  }","parent":null,"children":[{"krate":0,"index":477}],"decl_id":null,"docs":" A future that resolves when the receiving end of a channel has hung up.","sig":null,"attributes":[{"value":"/ A future that resolves when the receiving end of a channel has hung up.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877189,"byte_end":6877264,"line_start":397,"line_end":397,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877265,"byte_end":6877268,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ This is an `.await`-friendly interface around [`poll_canceled`](Sender::poll_canceled).","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877269,"byte_end":6877360,"line_start":399,"line_end":399,"column_start":1,"column_end":92}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877361,"byte_end":6877428,"line_start":400,"line_end":400,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877859,"byte_end":6877867,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"Canceled","qualname":"::oneshot::Canceled","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from a [`Receiver`](Receiver) when the corresponding\n [`Sender`](Sender) is dropped.\n","sig":null,"attributes":[{"value":"/ Error returned from a [`Receiver`](Receiver) when the corresponding","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877696,"byte_end":6877767,"line_start":414,"line_end":414,"column_start":1,"column_end":72}},{"value":"/ [`Sender`](Sender) is dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877768,"byte_end":6877802,"line_start":415,"line_end":415,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878475,"byte_end":6878480,"line_start":436,"line_end":436,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Gracefully close this receiver, preventing any subsequent attempts to\n send to it.","sig":null,"attributes":[{"value":"/ Gracefully close this receiver, preventing any subsequent attempts to","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878103,"byte_end":6878176,"line_start":429,"line_end":429,"column_start":5,"column_end":78}},{"value":"/ send to it.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878181,"byte_end":6878196,"line_start":430,"line_end":430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878201,"byte_end":6878204,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after this method returns is","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878209,"byte_end":6878276,"line_start":432,"line_end":432,"column_start":5,"column_end":72}},{"value":"/ guaranteed to fail. After calling this method, you can use","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878281,"byte_end":6878343,"line_start":433,"line_end":433,"column_start":5,"column_end":67}},{"value":"/ [`Receiver::poll`](core::future::Future::poll) to determine whether a","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878348,"byte_end":6878421,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ message had previously been sent.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878426,"byte_end":6878463,"line_start":435,"line_end":435,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878911,"byte_end":6878919,"line_start":448,"line_end":448,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<Option<T>, Canceled>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a message outside of the context of a task.","sig":null,"attributes":[{"value":"/ Attempts to receive a message outside of the context of a task.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878535,"byte_end":6878602,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878607,"byte_end":6878610,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Does not schedule a task wakeup or have any other side effects.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878615,"byte_end":6878682,"line_start":442,"line_end":442,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878687,"byte_end":6878690,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ A return value of `None` must be considered immediately stale (out of","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878695,"byte_end":6878768,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ date) unless [`close`](Receiver::close) has been called first.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878773,"byte_end":6878839,"line_start":445,"line_end":445,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878844,"byte_end":6878847,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the sender was dropped.","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878852,"byte_end":6878899,"line_start":447,"line_end":447,"column_start":5,"column_end":52}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6810173,"byte_end":6810177,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6810214,"byte_end":6810218,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6810234,"byte_end":6810238,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6811079,"byte_end":6811086,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6811339,"byte_end":6811346,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6811709,"byte_end":6811716,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858618,"byte_end":6858623,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858661,"byte_end":6858666,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858683,"byte_end":6858687,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858883,"byte_end":6858888,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6861790,"byte_end":6861795,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817237,"byte_end":6817257,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817282,"byte_end":6817300,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817771,"byte_end":6817786,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818310,"byte_end":6818327,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818870,"byte_end":6818879,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819159,"byte_end":6819168,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819178,"byte_end":6819187,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819675,"byte_end":6819687,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819894,"byte_end":6819906,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820208,"byte_end":6820220,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820236,"byte_end":6820248,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820848,"byte_end":6820860,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6821017,"byte_end":6821029,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6821178,"byte_end":6821190,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823286,"byte_end":6823296,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825971,"byte_end":6825991,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6828850,"byte_end":6828868,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836115,"byte_end":6836121,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839088,"byte_end":6839103,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841973,"byte_end":6841979,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6842078,"byte_end":6842093,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6842210,"byte_end":6842230,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6843306,"byte_end":6843324,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6844538,"byte_end":6844558,"line_start":974,"line_end":974,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6844803,"byte_end":6844821,"line_start":985,"line_end":985,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845100,"byte_end":6845108,"line_start":1002,"line_end":1002,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6848603,"byte_end":6848611,"line_start":1091,"line_end":1091,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6848643,"byte_end":6848651,"line_start":1093,"line_end":1093,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6848752,"byte_end":6848760,"line_start":1099,"line_end":1099,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6849640,"byte_end":6849648,"line_start":1126,"line_end":1126,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6849920,"byte_end":6849937,"line_start":1138,"line_end":1138,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6852636,"byte_end":6852653,"line_start":1207,"line_end":1207,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6852754,"byte_end":6852771,"line_start":1213,"line_end":1213,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6853647,"byte_end":6853664,"line_start":1240,"line_end":1240,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6853976,"byte_end":6853990,"line_start":1258,"line_end":1258,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854273,"byte_end":6854285,"line_start":1270,"line_end":1270,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854811,"byte_end":6854825,"line_start":1288,"line_end":1288,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854862,"byte_end":6854876,"line_start":1289,"line_end":1289,"column_start":31,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854914,"byte_end":6854926,"line_start":1291,"line_end":1291,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854963,"byte_end":6854975,"line_start":1292,"line_end":1292,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6863005,"byte_end":6863013,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6863038,"byte_end":6863044,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6866233,"byte_end":6866238,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6874767,"byte_end":6874773,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877114,"byte_end":6877120,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877531,"byte_end":6877543,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877892,"byte_end":6877900,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878064,"byte_end":6878072,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878085,"byte_end":6878093,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6879022,"byte_end":6879030,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6879240,"byte_end":6879248,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":1674,"byte_end":1678,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":34}},{"kind":"Mod","span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lib.rs","byte_start":1722,"byte_end":1729,"line_start":46,"line_end":46,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":256}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6810173,"byte_end":6810177,"line_start":34,"line_end":34,"column_start":31,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6810214,"byte_end":6810218,"line_start":35,"line_end":35,"column_start":31,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6810234,"byte_end":6810238,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6811079,"byte_end":6811086,"line_start":64,"line_end":64,"column_start":19,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6811339,"byte_end":6811346,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/lock.rs","byte_start":6811709,"byte_end":6811716,"line_start":84,"line_end":84,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858618,"byte_end":6858623,"line_start":79,"line_end":79,"column_start":31,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858661,"byte_end":6858666,"line_start":80,"line_end":80,"column_start":31,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858683,"byte_end":6858687,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6858883,"byte_end":6858888,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/queue.rs","byte_start":6861790,"byte_end":6861795,"line_start":167,"line_end":167,"column_start":18,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":327},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817237,"byte_end":6817257,"line_start":118,"line_end":118,"column_start":19,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817282,"byte_end":6817300,"line_start":119,"line_end":119,"column_start":19,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817727,"byte_end":6817731,"line_start":133,"line_end":133,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817734,"byte_end":6817738,"line_start":133,"line_end":133,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817741,"byte_end":6817746,"line_start":133,"line_end":133,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1669},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6817771,"byte_end":6817786,"line_start":134,"line_end":134,"column_start":22,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":355},"to":{"krate":0,"index":88}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818310,"byte_end":6818327,"line_start":153,"line_end":153,"column_start":19,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6818870,"byte_end":6818879,"line_start":179,"line_end":179,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":374},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819159,"byte_end":6819168,"line_start":189,"line_end":189,"column_start":28,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":374},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819178,"byte_end":6819187,"line_start":191,"line_end":191,"column_start":6,"column_end":15},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819675,"byte_end":6819687,"line_start":209,"line_end":209,"column_start":24,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6819894,"byte_end":6819906,"line_start":217,"line_end":217,"column_start":26,"column_end":38},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820208,"byte_end":6820220,"line_start":227,"line_end":227,"column_start":47,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":387},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820236,"byte_end":6820248,"line_start":229,"line_end":229,"column_start":9,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6820848,"byte_end":6820860,"line_start":251,"line_end":251,"column_start":21,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6821017,"byte_end":6821029,"line_start":258,"line_end":258,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6821178,"byte_end":6821190,"line_start":264,"line_end":264,"column_start":28,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":92},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6823286,"byte_end":6823296,"line_start":335,"line_end":335,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6825971,"byte_end":6825991,"line_start":426,"line_end":426,"column_start":9,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6828850,"byte_end":6828868,"line_start":512,"line_end":512,"column_start":9,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6836115,"byte_end":6836121,"line_start":719,"line_end":719,"column_start":9,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6839088,"byte_end":6839103,"line_start":809,"line_end":809,"column_start":9,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6841973,"byte_end":6841979,"line_start":898,"line_end":898,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":348},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6842078,"byte_end":6842093,"line_start":904,"line_end":904,"column_start":19,"column_end":34},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6842210,"byte_end":6842230,"line_start":910,"line_end":910,"column_start":19,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6843306,"byte_end":6843324,"line_start":941,"line_end":941,"column_start":19,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6844538,"byte_end":6844558,"line_start":974,"line_end":974,"column_start":18,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6844803,"byte_end":6844821,"line_start":985,"line_end":985,"column_start":18,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":340},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6845100,"byte_end":6845108,"line_start":1002,"line_end":1002,"column_start":9,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6848603,"byte_end":6848611,"line_start":1091,"line_end":1091,"column_start":19,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6848643,"byte_end":6848651,"line_start":1093,"line_end":1093,"column_start":25,"column_end":33},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":362},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6848752,"byte_end":6848760,"line_start":1099,"line_end":1099,"column_start":20,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":362},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6849640,"byte_end":6849648,"line_start":1126,"line_end":1126,"column_start":18,"column_end":26},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":362},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6849920,"byte_end":6849937,"line_start":1138,"line_end":1138,"column_start":9,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6852636,"byte_end":6852653,"line_start":1207,"line_end":1207,"column_start":25,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":368},"to":{"krate":18,"index":82}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6852754,"byte_end":6852771,"line_start":1213,"line_end":1213,"column_start":20,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":368},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6853647,"byte_end":6853664,"line_start":1240,"line_end":1240,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":368},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6853976,"byte_end":6853990,"line_start":1258,"line_end":1258,"column_start":9,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854273,"byte_end":6854285,"line_start":1270,"line_end":1270,"column_start":9,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854811,"byte_end":6854825,"line_start":1288,"line_end":1288,"column_start":31,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854862,"byte_end":6854876,"line_start":1289,"line_end":1289,"column_start":31,"column_end":45},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":420},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854914,"byte_end":6854926,"line_start":1291,"line_end":1291,"column_start":31,"column_end":43},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":1971}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/mpsc/mod.rs","byte_start":6854963,"byte_end":6854975,"line_start":1292,"line_end":1292,"column_start":31,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6863005,"byte_end":6863013,"line_start":33,"line_end":33,"column_start":19,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6863038,"byte_end":6863044,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":459},"to":{"krate":2,"index":2012}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6866233,"byte_end":6866238,"line_start":118,"line_end":118,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6874767,"byte_end":6874773,"line_start":335,"line_end":335,"column_start":9,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877114,"byte_end":6877120,"line_start":391,"line_end":391,"column_start":18,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":459},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877531,"byte_end":6877543,"line_start":406,"line_end":406,"column_start":20,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":474},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6877892,"byte_end":6877900,"line_start":419,"line_end":419,"column_start":23,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":482},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878064,"byte_end":6878072,"line_start":426,"line_end":426,"column_start":28,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":482},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6878085,"byte_end":6878093,"line_start":428,"line_end":428,"column_start":9,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6879022,"byte_end":6879030,"line_start":453,"line_end":453,"column_start":20,"column_end":28},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":8493}},{"span":{"file_name":"/home/josh7gas/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-channel-0.3.7/src/oneshot.rs","byte_start":6879240,"byte_end":6879248,"line_start":464,"line_end":464,"column_start":18,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":2166}}]}